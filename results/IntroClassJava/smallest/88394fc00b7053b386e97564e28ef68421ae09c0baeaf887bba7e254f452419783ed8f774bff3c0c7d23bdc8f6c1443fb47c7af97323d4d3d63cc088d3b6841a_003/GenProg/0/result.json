{
  "repair_end": "2018-12-02 20:58:06.774767", 
  "repair_begin": "2018-12-02 20:50:41.934431", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1371/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:51.501550987 -0500\n@@ -62,24 +62,34 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1863/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:37.281153207 -0500\n@@ -62,24 +62,31 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_310/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:59.635188111 -0500\n@@ -74,12 +74,21 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (c.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t} else if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_954/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:22.701897288 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +71,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1181/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:10.977707343 -0500\n@@ -71,15 +71,20 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\t\tc.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1012/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:34.765849408 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_363/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:11.611188665 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1097/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:52.733778618 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1463/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:10.481478598 -0500\n@@ -62,7 +62,9 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\t;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +72,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1674/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:55.857307430 -0500\n@@ -64,22 +64,26 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\t;\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_597/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:04.035191090 -0500\n@@ -62,24 +62,24 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1457/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:09.529482217 -0500\n@@ -59,7 +59,8 @@\n     public void exec () throws Exception {\n         IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n-        output +=\n+        ;\n+\t\toutput +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n@@ -70,16 +71,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 62, 
          "faulty": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1563/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:31.521398915 -0500\n@@ -62,9 +62,11 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,12 +76,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;b.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "b.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_886/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:07.889981988 -0500\n@@ -65,21 +65,20 @@\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n+        IntObj smallest = new IntObj();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_347/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:08.179188506 -0500\n@@ -68,18 +68,20 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_851/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:00.254052661 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1125/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:58.589755676 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = b.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_361/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:11.371188654 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_256/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:48.275187585 -0500\n@@ -61,8 +61,9 @@\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n-        a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        a.value = scanner.nextInt();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,7 +75,9 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 64, 
          "faulty": "a.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_370/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:12.867188723 -0500\n@@ -70,11 +70,10 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_586/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:01.559190975 -0500\n@@ -74,12 +74,13 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_973/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:26.549881984 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = b.value;\n+\t\t\tsmallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1769/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:16.721229530 -0500\n@@ -64,22 +64,27 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_141/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:20.927186320 -0500\n@@ -74,12 +74,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1645/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:49.069332877 -0500\n@@ -66,7 +66,8 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,19 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1257/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:27.085644882 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1299/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:36.485608626 -0500\n@@ -74,12 +74,18 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1606/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:40.629364594 -0500\n@@ -62,24 +62,31 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1897/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:44.645125970 -0500\n@@ -64,22 +64,26 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1942/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:55.025087664 -0500\n@@ -62,24 +62,27 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\t;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\treturn;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1316/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:40.337593808 -0500\n@@ -70,16 +70,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_211/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:37.907187106 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1152/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:04.473732686 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1764/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:15.769233074 -0500\n@@ -62,19 +62,20 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_265/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:49.999187665 -0500\n@@ -74,12 +74,16 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1338/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:44.661577201 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_568/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:57.643190794 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1584/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:36.085381703 -0500\n@@ -70,16 +70,22 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (b.value > c.value) {\n+\t\t\t\tsmallest.value = c.value;\n+\t\t\t}\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1559/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:30.797401648 -0500\n@@ -64,22 +64,28 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1063/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:45.713806202 -0500\n@@ -70,16 +70,18 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_548/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:53.487190602 -0500\n@@ -57,7 +57,8 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n+        ;\n+\t\tIntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_711/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:29.366501799 -0500\n@@ -62,24 +62,27 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\toutput += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_559/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:55.735190706 -0500\n@@ -62,19 +62,19 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1195/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:13.605697123 -0500\n@@ -64,22 +64,26 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (b.value > c.value) {\n+\t\t\t\tsmallest.value = c.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1094/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:52.245780533 -0500\n@@ -70,16 +70,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_797/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:48.090191041 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +71,18 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1092/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:52.009781459 -0500\n@@ -66,20 +66,21 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1147/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:03.489736526 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +71,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1375/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:52.249548125 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1611/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:41.397361704 -0500\n@@ -66,20 +66,25 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1209/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:16.741684944 -0500\n@@ -74,12 +74,18 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_444/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:29.387189487 -0500\n@@ -73,13 +73,19 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\td.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_229/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:42.079187299 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,7 +75,9 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_613/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:07.779117698 -0500\n@@ -66,7 +66,10 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +77,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1893/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:43.941128572 -0500\n@@ -62,19 +62,20 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_917/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:14.453930194 -0500\n@@ -65,21 +65,20 @@\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n+        IntObj smallest = new IntObj();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_44/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:50:57.247185225 -0500\n@@ -68,13 +68,18 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1416/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:00.809515424 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1324/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:41.801588182 -0500\n@@ -71,15 +71,18 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_60/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:01.091185403 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1721/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:06.365268138 -0500\n@@ -62,24 +62,31 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_666/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:19.658733401 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1186/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:11.937703608 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_658/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:17.966780871 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1838/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:31.705173864 -0500\n@@ -64,22 +64,27 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > b.value) {\n+\t\t\t\tsmallest.value = b.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_387/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:16.523188892 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1333/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:43.701580885 -0500\n@@ -62,24 +62,30 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1550/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:29.129407945 -0500\n@@ -70,16 +70,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1366/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:50.757553835 -0500\n@@ -66,20 +66,28 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1823/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:28.585185438 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n+            smallest.value = b.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1102/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:53.693774853 -0500\n@@ -71,15 +71,20 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\t\tsmallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1422/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:02.009510848 -0500\n@@ -57,12 +57,15 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n+        ;\n+\t\tIntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\t;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -71,15 +74,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1193/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:13.365698056 -0500\n@@ -64,17 +64,18 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        ;\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1445/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:06.821492518 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_497/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:41.779190060 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_694/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:25.698582587 -0500\n@@ -68,18 +68,18 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_365/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:11.855188676 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_416/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:22.819189183 -0500\n@@ -74,12 +74,17 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_72/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:03.875185531 -0500\n@@ -74,7 +74,9 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1236/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:22.297663404 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1409/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:59.557520200 -0500\n@@ -64,17 +64,19 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_839/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:57.618079084 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +71,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1385/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:54.193540689 -0500\n@@ -66,20 +66,25 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_722/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:31.318462274 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;d.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1487/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:15.709458745 -0500\n@@ -57,7 +57,8 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n+        ;\n+\t\tIntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n@@ -71,10 +72,12 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1360/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:49.785557557 -0500\n@@ -57,12 +57,14 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n+        ;\n+\t\tIntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -71,15 +73,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1461/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:10.241479510 -0500\n@@ -57,7 +57,8 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n+        ;\n+\t\tIntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n@@ -71,15 +72,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1413/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:00.293517392 -0500\n@@ -62,24 +62,26 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\t;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1796/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:22.901206544 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_702/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:27.378544628 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,11 +71,10 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_683/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:23.282639877 -0500\n@@ -61,7 +61,7 @@\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n-        a.value = scanner.nextInt ();\n+        a.value = scanner.nextInt();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 64, 
          "faulty": "a.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1514/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:21.705436019 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_258/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:48.531187597 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_389/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:16.763188903 -0500\n@@ -65,7 +65,7 @@\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n+        IntObj smallest = new IntObj();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n@@ -74,7 +74,9 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1065/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:45.953805258 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1001/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:32.361858925 -0500\n@@ -64,17 +64,17 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_281/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:53.215187814 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1471/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:12.141472290 -0500\n@@ -64,22 +64,26 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\t;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1394/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:56.129533289 -0500\n@@ -64,22 +64,26 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1857/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:36.013157902 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_987/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:29.253871248 -0500\n@@ -73,13 +73,18 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_554/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:54.743190660 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1541/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:27.685413400 -0500\n@@ -62,9 +62,11 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,12 +76,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1826/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:29.061183670 -0500\n@@ -64,22 +64,27 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > b.value) {\n+\t\t\t\tsmallest.value = b.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1174/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:09.501713087 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1755/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:13.861240181 -0500\n@@ -64,22 +64,28 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1075/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:48.077796903 -0500\n@@ -65,8 +65,9 @@\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        IntObj smallest = new IntObj();\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_582/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:00.831190942 -0500\n@@ -74,12 +74,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_913/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:13.721934257 -0500\n@@ -62,24 +62,24 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n+        IntObj smallest = new IntObj();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1557/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:30.553402568 -0500\n@@ -71,15 +71,27 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_901/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:11.261953907 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1692/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:59.897292309 -0500\n@@ -71,15 +71,21 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1576/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:34.401388052 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1220/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:19.145675617 -0500\n@@ -64,22 +64,24 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        ;\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_967/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:25.337886800 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1713/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:04.717274291 -0500\n@@ -64,22 +64,25 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n+            smallest.value = b.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_817/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:52.802132595 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1586/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:36.325380800 -0500\n@@ -59,7 +59,8 @@\n     public void exec () throws Exception {\n         IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n             new IntObj ();\n-        output +=\n+        ;\n+\t\toutput +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n@@ -70,16 +71,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 62, 
          "faulty": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_375/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:13.859188769 -0500\n@@ -74,12 +74,20 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (c.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t} else if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1264/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:28.537639273 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -71,15 +72,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1546/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:28.645409773 -0500\n@@ -66,20 +66,28 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_233/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:42.831187333 -0500\n@@ -74,12 +74,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_404/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:20.167189061 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_964/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:24.853888725 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1294/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:35.509612384 -0500\n@@ -62,11 +62,13 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +76,19 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1926/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:51.397101041 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_727/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:32.038448300 -0500\n@@ -68,13 +68,12 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_933/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:17.861916580 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_271/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:51.223187722 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1615/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:42.141358906 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;b.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "b.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_765/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:40.590298602 -0500\n@@ -68,18 +68,17 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_752/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:37.610346983 -0500\n@@ -68,13 +68,15 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1143/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:02.673739713 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_308/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:59.391188099 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_911/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:13.485936145 -0500\n@@ -65,21 +65,23 @@\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n-        IntObj smallest = new IntObj ();\n+        IntObj smallest = new IntObj();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 68, 
          "faulty": "IntObj smallest=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1042/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:41.173824092 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1510/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:20.985438745 -0500\n@@ -64,7 +64,8 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1516/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:21.957435065 -0500\n@@ -64,22 +64,29 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_857/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:01.450040662 -0500\n@@ -74,12 +74,19 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n+\t\t\tif (c.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t} else if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1123/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:58.333756678 -0500\n@@ -64,22 +64,22 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1320/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:41.081590948 -0500\n@@ -62,24 +62,32 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1742/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:10.917251153 -0500\n@@ -62,24 +62,31 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1233/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:21.813665278 -0500\n@@ -66,20 +66,25 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1362/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:50.029556622 -0500\n@@ -64,22 +64,23 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        d.value = scanner.nextInt();\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1228/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:20.821669121 -0500\n@@ -62,24 +62,28 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        d.value = scanner.nextInt();\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_725/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:31.798452958 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1819/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:27.873188080 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1426/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:02.753508012 -0500\n@@ -62,24 +62,25 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_929/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:17.129919502 -0500\n@@ -66,7 +66,8 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_713/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:29.610496819 -0500\n@@ -68,13 +68,15 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1608/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:40.897363585 -0500\n@@ -62,9 +62,11 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,7 +76,9 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1019/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:35.961844676 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1017/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:35.717845642 -0500\n@@ -66,7 +66,8 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1735/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:09.473256538 -0500\n@@ -64,17 +64,17 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1548/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:28.893408837 -0500\n@@ -62,24 +62,31 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_717/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:30.338481961 -0500\n@@ -61,8 +61,9 @@\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n-        a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        a.value = scanner.nextInt();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,11 +71,10 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 64, 
          "faulty": "a.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_318/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:01.351188190 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_656/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:17.722788050 -0500\n@@ -68,17 +68,19 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\toutput += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n             return;;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_876/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:05.758000904 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1806/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:25.029198638 -0500\n@@ -71,15 +71,23 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1121/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:58.101757586 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1377/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:52.489547207 -0500\n@@ -71,15 +71,20 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1978/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:58:03.405056809 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_821/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:53.510124318 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_649/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:16.278830535 -0500\n@@ -68,18 +68,17 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_674/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:21.358688500 -0500\n@@ -62,7 +62,8 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -70,16 +71,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_743/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:53:35.678380330 -0500\n@@ -61,25 +61,25 @@\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n-        a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        a.value = scanner.nextInt();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 64, 
          "faulty": "a.value=scanner.nextInt();", 
          "type": "Replace", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1051/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:43.081816569 -0500\n@@ -66,7 +66,8 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,19 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1871/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:57:38.945147048 -0500\n@@ -62,24 +62,28 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n+        c.value = scanner.nextInt();\n+\t\t;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (c.value > d.value) {\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1431/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:03.701504399 -0500\n@@ -64,7 +64,8 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,12 +75,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_449/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:30.351189532 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_279/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:52.967187802 -0500\n@@ -74,12 +74,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = b.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_978/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:27.541878044 -0500\n@@ -66,7 +66,8 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = d.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n@@ -74,12 +75,15 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\tsmallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1368/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:55:50.997552917 -0500\n@@ -62,9 +62,11 @@\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        ;\n+\t\tb.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -74,12 +76,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_304/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:51:58.663188066 -0500\n@@ -74,12 +74,17 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_542/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:52.275190546 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;c.value = scanner.nextInt();\n+\t\t\toutput += (String.format(\"%d is the smallest\\n\", smallest.value));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_982/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:54:28.281875105 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_525/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:52:48.359190365 -0500\n@@ -74,12 +74,14 @@\n             smallest.value = c.value;\n         }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n         output += (String.format (\"%d is the smallest\\n\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = a.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-11-05 17:59:12.041698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/patches_ft7u/Patch_1596/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_003/src/main/java/introclassJava/smallest_88394fc0_003.java\t2018-12-02 14:56:38.497372619 -0500\n@@ -70,16 +70,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n         if (c.value > d.value) {\n-            smallest.value = d.value;\n+            if (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n         } else if (a.value > d.value) {\n             smallest.value = d.value;\n         }\n-        output += (String.format (\"%d is the smallest\\n\", smallest.value));\n-        if (true)\n-            return;;\n+        output += (String.format(\"%d is the smallest\\n\", smallest.value));\n+        if (true) {\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_003.java", 
          "line": 81, 
          "faulty": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"%d is the smallest\\n\",smallest.value));"
        }
      ]
    }
  ]
}