{
  "repair_end": "2018-12-02 20:57:12.211416", 
  "repair_begin": "2018-12-02 20:49:20.678725", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829_007/src/main/java/introclassJava/smallest_3b2376ab_007.java\t2018-11-05 17:59:11.841693000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829_007/patches_1nhy/Patch_513/patched/tmp/GenProg_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829_007/src/main/java/introclassJava/smallest_3b2376ab_007.java\t2018-12-02 14:51:31.214797725 -0500\n@@ -64,7 +64,10 @@\n         n1.value = scanner.nextInt ();\n         n2.value = scanner.nextInt ();\n         n3.value = scanner.nextInt ();\n-        n4.value = scanner.nextInt ();\n+        if (n3.value < n2.value) {\n+\t\t\tsmall.value = n3.value;\n+\t\t}\n+\t\tn4.value = scanner.nextInt ();\n         small.value = n1.value;\n         if (n2.value < n1.value) {\n             small.value = n2.value;\n@@ -73,7 +76,9 @@\n             small.value = n3.value;\n         }\n         if (n4.value < n3.value) {\n-            small.value = n4.value;\n+            if (n4.value < n1.value) {\n+\t\t\t\tsmall.value = n4.value;\n+\t\t\t}\n         } else if (n4.value < n1.value) {\n             small.value = n4.value;\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_3b2376ab_007.java", 
          "line": 67, 
          "faulty": "n4.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "if (n3.value < n2.value) {\n  small.value=n3.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_3b2376ab_007.java", 
          "line": 76, 
          "faulty": "small.value=n4.value;", 
          "type": "Replace", 
          "seed": "if (n4.value < n1.value) {\n  small.value=n4.value;\n}"
        }
      ]
    }
  ]
}