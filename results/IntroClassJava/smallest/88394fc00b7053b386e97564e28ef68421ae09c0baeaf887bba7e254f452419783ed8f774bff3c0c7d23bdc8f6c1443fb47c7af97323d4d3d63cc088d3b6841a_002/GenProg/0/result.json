{
  "repair_end": "2018-12-02 20:58:21.169740", 
  "repair_begin": "2018-12-02 20:50:44.747823", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1629/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:04.389681312 -0500\n@@ -68,18 +68,20 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1842/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:49.057762203 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1086/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:11.101453395 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1722/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:23.745716884 -0500\n@@ -71,15 +71,15 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1012/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:55.393418568 -0500\n@@ -73,13 +73,15 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1837/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:48.041760409 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1470/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:33.101621953 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1820/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:44.853754766 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1978/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:17.013810817 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1593/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:57.517668478 -0500\n@@ -71,15 +71,16 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1943/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:09.673798190 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1700/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:19.357708893 -0500\n@@ -68,18 +68,25 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1476/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:34.297624267 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_918/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:34.601371009 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1501/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:38.741632834 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1533/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:44.641644128 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1702/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:19.601709338 -0500\n@@ -71,15 +71,16 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1749/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:29.453727218 -0500\n@@ -73,13 +73,19 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1522/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:42.673640370 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1741/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:27.717724083 -0500\n@@ -70,16 +70,16 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1482/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:35.241626091 -0500\n@@ -71,15 +71,15 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1608/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:00.229673556 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1509/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:40.433636081 -0500\n@@ -70,14 +70,9 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1052/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:03.937437625 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1685/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:15.889702547 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "output+=(String.format(\"%d is the smallest\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1535/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:44.881644586 -0500\n@@ -73,13 +73,17 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1938/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:08.929796905 -0500\n@@ -70,16 +70,19 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_795/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:06.645304212 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1044/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:02.157433678 -0500\n@@ -73,13 +73,17 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1441/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:27.037610164 -0500\n@@ -70,16 +70,11 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_786/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:04.709299457 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1872/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:55.373773312 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1274/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:51.725539480 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1606/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:59.989673108 -0500\n@@ -73,13 +73,16 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1343/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:05.689567859 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1758/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:31.417730759 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_807/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:09.333310785 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_867/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:23.301344421 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1390/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:15.393587247 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1888/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:58.293778423 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,35 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1980/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:17.253811228 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -66,20 +65,20 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = c.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1678/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:14.681700329 -0500\n@@ -68,18 +68,22 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1859/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:52.717768649 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1266/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:49.993535920 -0500\n@@ -71,13 +71,11 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_916/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:34.357370441 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1621/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:02.681678132 -0500\n@@ -70,16 +70,14 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1596/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:57.997669378 -0500\n@@ -70,16 +70,12 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;output += (String\n+\t\t\t\t\t.format(\"Please enter 4 numbers separated by spaces > \"));\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_955/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:43.169390817 -0500\n@@ -73,13 +73,15 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tsmallest.value = c.value;\n+\t\t\treturn;\n+\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1511/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:40.681636557 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1950/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:10.877800268 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -66,20 +65,20 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = c.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\tsmallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1875/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:55.853774153 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\tsmallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1125/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:19.769472229 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1370/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:11.257579016 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1067/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:07.153444728 -0500\n@@ -71,15 +71,17 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1127/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:20.009472748 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1563/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:50.981656168 -0500\n@@ -73,13 +73,20 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1794/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:39.153744626 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,15 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1515/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:41.405637944 -0500\n@@ -70,16 +70,12 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1497/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:37.989631388 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1298/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:56.673549602 -0500\n@@ -70,16 +70,14 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1832/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:47.061758676 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1707/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:20.573711111 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1995/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:20.189816251 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1300/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:56.933550133 -0500\n@@ -71,15 +71,14 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1279/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:52.693541466 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1388/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:15.157586779 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1816/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:44.113753453 -0500\n@@ -73,13 +73,16 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1202/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:35.737506250 -0500\n@@ -71,13 +71,11 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1069/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:07.393445256 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1454/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:29.945615830 -0500\n@@ -71,15 +71,16 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1293/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:55.669547554 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1162/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:27.101487957 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1493/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:37.253629971 -0500\n@@ -57,9 +57,9 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n-        output +=\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n+        ;\n+\t\toutput +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 62, 
          "faulty": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1350/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:07.133570762 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "b.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1864/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:53.693770364 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_820/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:12.301318005 -0500\n@@ -70,14 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1984/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:17.965812448 -0500\n@@ -66,20 +66,22 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        smallest.value = c.value;\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = b.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1042/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:01.917433145 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1219/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:39.481514105 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1016/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:56.113420186 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1335/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:04.217564896 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_936/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:38.773380692 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1159/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:26.617486925 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1581/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:54.849663465 -0500\n@@ -70,16 +70,14 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_966/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:45.397395918 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tsmallest.value = c.value;\n+\t\t\treturn;\n+\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1988/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:18.705813714 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1367/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:10.777578058 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,16 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1947/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:10.401799447 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1239/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:44.129523794 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1660/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:10.757693107 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1383/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:14.193584864 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "b.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"%d is the smallest\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1340/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:05.173566821 -0500\n@@ -73,13 +73,16 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1157/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:26.373486404 -0500\n@@ -70,16 +70,18 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1187/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:32.837500136 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_894/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:29.141358230 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1362/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:09.809576123 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = c.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1732/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:25.709720448 -0500\n@@ -67,19 +67,18 @@\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1941/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:09.425797762 -0500\n@@ -73,13 +73,16 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1168/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:28.353490625 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1480/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:34.997625621 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_992/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:51.005408674 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_874/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:24.517347308 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1465/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:32.113620040 -0500\n@@ -71,15 +71,15 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1407/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:19.293594964 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1030/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:59.265427239 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1637/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:06.093684477 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1970/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:15.561808327 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_872/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:24.277346739 -0500\n@@ -73,13 +73,15 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1925/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:06.461792635 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = b.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1318/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:00.573557529 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (b.value > c.value) {\n+\t\t\t\tsmallest.value = c.value;\n+\t\t\t}smallest.value = c.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1485/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:35.805627180 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1519/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:42.157639384 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1643/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:07.049686250 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1285/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:53.953544047 -0500\n@@ -73,13 +73,17 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\tif (a.value > b.value) {\n+\t\t\t\tsmallest.value = b.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Replace", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1641/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:06.809685805 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "output+=(String.format(\"%d is the smallest\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1974/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:16.269809541 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1065/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:06.893444155 -0500\n@@ -64,7 +64,8 @@\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n-        d.value = scanner.nextInt ();\n+        ;\n+\t\td.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n@@ -73,13 +74,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 67, 
          "faulty": "d.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1312/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:59.609555574 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1711/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:21.313712460 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -71,15 +70,18 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1544/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:46.821648279 -0500\n@@ -70,16 +70,11 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1209/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:37.197509319 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1912/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:03.709787860 -0500\n@@ -70,16 +70,26 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1619/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:02.445677692 -0500\n@@ -71,15 +71,13 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1920/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:05.461790902 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1931/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:07.453794352 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1891/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:58.773779261 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1413/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:20.525597393 -0500\n@@ -71,15 +71,15 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1083/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:10.589452274 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1529/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:43.897642709 -0500\n@@ -71,15 +71,14 @@\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1783/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:36.969740723 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_968/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:45.649396494 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1098/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:13.857459412 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1929/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:58:07.209793931 -0500\n@@ -63,7 +63,8 @@\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n         b.value = scanner.nextInt ();\n-        c.value = scanner.nextInt ();\n+        ;\n+\t\tc.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n@@ -73,13 +74,19 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 66, 
          "faulty": "c.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1490/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:36.765629031 -0500\n@@ -70,16 +70,11 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1883/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:57.305776695 -0500\n@@ -70,16 +70,18 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1148/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:24.417482221 -0500\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_975/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:47.093399790 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "d.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1598/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:58.237669827 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_964/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:45.153395361 -0500\n@@ -70,16 +70,15 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n-        if (true)\n-            return;;\n+        if (true) {\n+\t\t\tsmallest.value = c.value;\n+\t\t\treturn;\n+\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "c.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1652/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:09.053689960 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1669/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:12.685696660 -0500\n@@ -70,16 +70,17 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1198/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:34.989504676 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1680/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:14.913700755 -0500\n@@ -70,16 +70,14 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_677/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:53:37.981231964 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1140/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:22.937479048 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1144/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:23.681480644 -0500\n@@ -70,16 +70,14 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1763/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:32.377732487 -0500\n@@ -68,18 +68,27 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+\t\t\tsmallest.value = c.value;\n+\t\t}\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Replace", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1549/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:47.797650133 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "IntObj smallest=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_839/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:16.705328646 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1846/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:49.789763495 -0500\n@@ -73,13 +73,17 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Replace", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1115/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:17.577467491 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1822/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:45.109755219 -0500\n@@ -70,16 +70,27 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n+        ;\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "InsertBefore", 
          "seed": ";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1611/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:00.725674483 -0500\n@@ -73,13 +73,14 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1807/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:42.077749835 -0500\n@@ -73,13 +73,12 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "if (b.value > c.value) {\n  smallest.value=c.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "Delete", 
          "seed": "smallest.value=c.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1260/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:48.789533438 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1193/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:34.025502644 -0500\n@@ -61,8 +61,8 @@\n             new IntObj ();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n-        a.value = scanner.nextInt ();\n-        b.value = scanner.nextInt ();\n+        b.value = scanner.nextInt();\n+\t\ta.value = scanner.nextInt ();\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n@@ -73,11 +73,9 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n             return;;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 64, 
          "faulty": "a.value=scanner.nextInt();", 
          "type": "InsertBefore", 
          "seed": "b.value=scanner.nextInt();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 65, 
          "faulty": "b.value=scanner.nextInt();", 
          "type": "Delete", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1572/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:52.917659824 -0500\n@@ -70,16 +70,11 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1792/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:38.909744190 -0500\n@@ -66,20 +66,20 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        if (a.value > b.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1527/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:43.657642250 -0500\n@@ -70,16 +70,12 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1828/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:46.337757395 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -66,20 +65,23 @@\n         c.value = scanner.nextInt ();\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n-        smallest.value = a.value;\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\tsmallest.value = a.value;\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1102/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:14.593461015 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_997/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:54:51.977410873 -0500\n@@ -73,13 +73,13 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tsmallest.value = d.value;smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "smallest.value=d.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1249/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:55:46.305528305 -0500\n@@ -68,18 +68,17 @@\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n         if (a.value > b.value) {\n-            smallest.value = b.value;\n-        }\n-        if (b.value > c.value) {\n+\t\t\tsmallest.value = b.value;\n+\t\t}\n+\t\tif (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n+\t\t\t;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "smallest.value=c.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1879/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:56.569775407 -0500\n@@ -57,8 +57,7 @@\n     }\n \n     public void exec () throws Exception {\n-        IntObj a = new IntObj (), b = new IntObj (), c = new IntObj (), d =\n-            new IntObj ();\n+        IntObj a = new IntObj(), b = new IntObj(), c = new IntObj(), d = new IntObj();\n         output +=\n             (String.format (\"Please enter 4 numbers separated by spaces > \"));\n         a.value = scanner.nextInt ();\n@@ -73,13 +72,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;smallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 60, 
          "faulty": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();", 
          "type": "Replace", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1724/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:57:24.005717357 -0500\n@@ -70,16 +70,18 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t}smallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n+\t\tsmallest.value = d.value;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "InsertBefore", 
          "seed": "smallest.value=d.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 69, 
          "faulty": "smallest.value=a.value;", 
          "type": "Replace", 
          "seed": "smallest.value=a.value;"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "IntObj a=new IntObj(), b=new IntObj(), c=new IntObj(), d=new IntObj();"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "output+=(String.format(\"%d is the smallest\",smallest.value));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1328/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:02.781561997 -0500\n@@ -73,13 +73,11 @@\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\t;;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "smallest.value=b.value;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1315/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:00.077556524 -0500\n@@ -67,19 +67,20 @@\n         d.value = scanner.nextInt ();\n         IntObj smallest = new IntObj ();\n         smallest.value = a.value;\n-        if (a.value > b.value) {\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n+\t\tif (a.value > b.value) {\n             smallest.value = b.value;\n         }\n         if (b.value > c.value) {\n             smallest.value = c.value;\n         }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+            return;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": ";", 
          "type": "Delete", 
          "seed": "output+=(String.format(\"Please enter 4 numbers separated by spaces > \"));"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 70, 
          "faulty": "if (a.value > b.value) {\n  smallest.value=b.value;\n}", 
          "type": "InsertBefore", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-11-05 17:59:12.033698000 -0500\n+++ /tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/patches_rnx0/Patch_1460/patched/tmp/GenProg_IntroClassJava_smallest_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a_002/src/main/java/introclassJava/smallest_88394fc0_002.java\t2018-12-02 14:56:31.149618169 -0500\n@@ -70,16 +70,13 @@\n         if (a.value > b.value) {\n             smallest.value = b.value;\n         }\n-        if (b.value > c.value) {\n-            smallest.value = c.value;\n-        }\n-        if (c.value > d.value) {\n-            smallest.value = d.value;\n-        } else if (a.value > d.value) {\n-            smallest.value = d.value;\n-        }\n+        if (a.value > d.value) {\n+\t\t\tsmallest.value = d.value;\n+\t\t}\n         output += (String.format (\"%d is the smallest\", smallest.value));\n         if (true)\n-            return;;\n+\t\t\tif (a.value > d.value) {\n+\t\t\t\tsmallest.value = d.value;\n+\t\t\t};\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 83, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 77, 
          "faulty": "smallest.value=d.value;", 
          "type": "InsertBefore", 
          "seed": "if (a.value > b.value) {\n  smallest.value=b.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 76, 
          "faulty": "if (c.value > d.value) {\n  smallest.value=d.value;\n}\n else if (a.value > d.value) {\n  smallest.value=d.value;\n}", 
          "type": "Replace", 
          "seed": "if (a.value > d.value) {\n  smallest.value=d.value;\n}"
        }, 
        {
          "path": "src/main/java/introclassJava/smallest_88394fc0_002.java", 
          "line": 73, 
          "faulty": "if (b.value > c.value) {\n  smallest.value=c.value;\n}", 
          "type": "Delete", 
          "seed": "a.value=scanner.nextInt();"
        }
      ]
    }
  ]
}