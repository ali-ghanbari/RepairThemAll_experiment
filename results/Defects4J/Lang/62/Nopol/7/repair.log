cd /tmp/Nopol_Defects4J_Lang_62;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 3 \
	--source src/java/ \
	--classpath "target/classes/:target/tests/:/tmp/Nopol_Defects4J_Lang_62/target/classes/:/tmp/Nopol_Defects4J_Lang_62/target/tests/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/asm.jar:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/cglib.jar:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/commons-io.jar:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/easymock.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
18:27:04.378 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/java]
18:27:04.383 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Lang_62/target/classes/, file:/tmp/Nopol_Defects4J_Lang_62/target/tests/, file:/tmp/Nopol_Defects4J_Lang_62/target/classes/, file:/tmp/Nopol_Defects4J_Lang_62/target/tests/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/asm.jar, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/cglib.jar, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/commons-io.jar, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Lang/lib/easymock.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
18:27:04.383 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
18:27:04.384 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.lang.ArrayUtilsAddTest, org.apache.commons.lang.ArrayUtilsAddTest, org.apache.commons.lang.ArrayUtilsRemoveTest, org.apache.commons.lang.ArrayUtilsRemoveTest, org.apache.commons.lang.ArrayUtilsTest, org.apache.commons.lang.ArrayUtilsTest, org.apache.commons.lang.BitFieldTest, org.apache.commons.lang.BitFieldTest, org.apache.commons.lang.BooleanUtilsTest, org.apache.commons.lang.BooleanUtilsTest, org.apache.commons.lang.CharEncodingTest, org.apache.commons.lang.CharEncodingTest, org.apache.commons.lang.CharRangeTest, org.apache.commons.lang.CharRangeTest, org.apache.commons.lang.CharSetTest, org.apache.commons.lang.CharSetTest, org.apache.commons.lang.CharSetUtilsTest, org.apache.commons.lang.CharSetUtilsTest, org.apache.commons.lang.CharUtilsTest, org.apache.commons.lang.CharUtilsTest, org.apache.commons.lang.ClassUtilsTest, org.apache.commons.lang.ClassUtilsTest, org.apache.commons.lang.EntitiesPerformanceTest, org.apache.commons.lang.EntitiesPerformanceTest, org.apache.commons.lang.EntitiesTest, org.apache.commons.lang.EntitiesTest, org.apache.commons.lang.IllegalClassExceptionTest, org.apache.commons.lang.IllegalClassExceptionTest, org.apache.commons.lang.IncompleteArgumentExceptionTest, org.apache.commons.lang.IncompleteArgumentExceptionTest, org.apache.commons.lang.IntHashMapTest, org.apache.commons.lang.IntHashMapTest, org.apache.commons.lang.LocaleUtilsTest, org.apache.commons.lang.LocaleUtilsTest, org.apache.commons.lang.NotImplementedExceptionTest, org.apache.commons.lang.NotImplementedExceptionTest, org.apache.commons.lang.NullArgumentExceptionTest, org.apache.commons.lang.NullArgumentExceptionTest, org.apache.commons.lang.NumberRangeTest, org.apache.commons.lang.NumberRangeTest, org.apache.commons.lang.NumberUtilsTest, org.apache.commons.lang.NumberUtilsTest, org.apache.commons.lang.ObjectUtilsTest, org.apache.commons.lang.ObjectUtilsTest, org.apache.commons.lang.RandomStringUtilsTest, org.apache.commons.lang.RandomStringUtilsTest, org.apache.commons.lang.SerializationUtilsTest, org.apache.commons.lang.SerializationUtilsTest, org.apache.commons.lang.StringEscapeUtilsTest, org.apache.commons.lang.StringEscapeUtilsTest, org.apache.commons.lang.StringUtilsEqualsIndexOfTest, org.apache.commons.lang.StringUtilsEqualsIndexOfTest, org.apache.commons.lang.StringUtilsIsTest, org.apache.commons.lang.StringUtilsIsTest, org.apache.commons.lang.StringUtilsSubstringTest, org.apache.commons.lang.StringUtilsSubstringTest, org.apache.commons.lang.StringUtilsTest, org.apache.commons.lang.StringUtilsTest, org.apache.commons.lang.StringUtilsTrimEmptyTest, org.apache.commons.lang.StringUtilsTrimEmptyTest, org.apache.commons.lang.SystemUtilsTest, org.apache.commons.lang.SystemUtilsTest, org.apache.commons.lang.UnhandledExceptionTest, org.apache.commons.lang.UnhandledExceptionTest, org.apache.commons.lang.ValidateTest, org.apache.commons.lang.ValidateTest, org.apache.commons.lang.WordUtilsTest, org.apache.commons.lang.WordUtilsTest, org.apache.commons.lang.builder.CompareToBuilderTest, org.apache.commons.lang.builder.CompareToBuilderTest, org.apache.commons.lang.builder.DefaultToStringStyleTest, org.apache.commons.lang.builder.DefaultToStringStyleTest, org.apache.commons.lang.builder.EqualsBuilderTest, org.apache.commons.lang.builder.EqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderAndEqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderAndEqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderTest, org.apache.commons.lang.builder.MultiLineToStringStyleTest, org.apache.commons.lang.builder.MultiLineToStringStyleTest, org.apache.commons.lang.builder.NoFieldNamesToStringStyleTest, org.apache.commons.lang.builder.NoFieldNamesToStringStyleTest, org.apache.commons.lang.builder.ReflectionToStringBuilderExcludeTest, org.apache.commons.lang.builder.ReflectionToStringBuilderExcludeTest, org.apache.commons.lang.builder.ShortPrefixToStringStyleTest, org.apache.commons.lang.builder.ShortPrefixToStringStyleTest, org.apache.commons.lang.builder.SimpleToStringStyleTest, org.apache.commons.lang.builder.SimpleToStringStyleTest, org.apache.commons.lang.builder.StandardToStringStyleTest, org.apache.commons.lang.builder.StandardToStringStyleTest, org.apache.commons.lang.builder.ToStringBuilderTest, org.apache.commons.lang.builder.ToStringBuilderTest, org.apache.commons.lang.builder.ToStringStyleTest, org.apache.commons.lang.builder.ToStringStyleTest, org.apache.commons.lang.enum.EnumTest, org.apache.commons.lang.enum.EnumTest, org.apache.commons.lang.enum.EnumUtilsTest, org.apache.commons.lang.enum.EnumUtilsTest, org.apache.commons.lang.enum.ValuedEnumTest, org.apache.commons.lang.enum.ValuedEnumTest, org.apache.commons.lang.enums.EnumEqualsTest, org.apache.commons.lang.enums.EnumEqualsTest, org.apache.commons.lang.enums.EnumTest, org.apache.commons.lang.enums.EnumTest, org.apache.commons.lang.enums.EnumUtilsTest, org.apache.commons.lang.enums.EnumUtilsTest, org.apache.commons.lang.enums.ValuedEnumTest, org.apache.commons.lang.enums.ValuedEnumTest, org.apache.commons.lang.exception.ExceptionUtilsTestCase, org.apache.commons.lang.exception.ExceptionUtilsTestCase, org.apache.commons.lang.exception.NestableDelegateTestCase, org.apache.commons.lang.exception.NestableDelegateTestCase, org.apache.commons.lang.exception.NestableErrorTestCase, org.apache.commons.lang.exception.NestableErrorTestCase, org.apache.commons.lang.exception.NestableExceptionTestCase, org.apache.commons.lang.exception.NestableExceptionTestCase, org.apache.commons.lang.exception.NestableRuntimeExceptionTestCase, org.apache.commons.lang.exception.NestableRuntimeExceptionTestCase, org.apache.commons.lang.math.DoubleRangeTest, org.apache.commons.lang.math.DoubleRangeTest, org.apache.commons.lang.math.FloatRangeTest, org.apache.commons.lang.math.FloatRangeTest, org.apache.commons.lang.math.FractionTest, org.apache.commons.lang.math.FractionTest, org.apache.commons.lang.math.IntRangeTest, org.apache.commons.lang.math.IntRangeTest, org.apache.commons.lang.math.LongRangeTest, org.apache.commons.lang.math.LongRangeTest, org.apache.commons.lang.math.NumberRangeTest, org.apache.commons.lang.math.NumberRangeTest, org.apache.commons.lang.math.NumberUtilsTest, org.apache.commons.lang.math.NumberUtilsTest, org.apache.commons.lang.math.RandomUtilsTest, org.apache.commons.lang.math.RandomUtilsTest, org.apache.commons.lang.math.RangeTest, org.apache.commons.lang.math.RangeTest, org.apache.commons.lang.mutable.MutableBooleanTest, org.apache.commons.lang.mutable.MutableBooleanTest, org.apache.commons.lang.mutable.MutableByteTest, org.apache.commons.lang.mutable.MutableByteTest, org.apache.commons.lang.mutable.MutableDoubleTest, org.apache.commons.lang.mutable.MutableDoubleTest, org.apache.commons.lang.mutable.MutableFloatTest, org.apache.commons.lang.mutable.MutableFloatTest, org.apache.commons.lang.mutable.MutableIntTest, org.apache.commons.lang.mutable.MutableIntTest, org.apache.commons.lang.mutable.MutableLongTest, org.apache.commons.lang.mutable.MutableLongTest, org.apache.commons.lang.mutable.MutableObjectTest, org.apache.commons.lang.mutable.MutableObjectTest, org.apache.commons.lang.mutable.MutableShortTest, org.apache.commons.lang.mutable.MutableShortTest, org.apache.commons.lang.text.CompositeFormatTest, org.apache.commons.lang.text.CompositeFormatTest, org.apache.commons.lang.text.StrBuilderAppendInsertTest, org.apache.commons.lang.text.StrBuilderAppendInsertTest, org.apache.commons.lang.text.StrBuilderTest, org.apache.commons.lang.text.StrBuilderTest, org.apache.commons.lang.text.StrLookupTest, org.apache.commons.lang.text.StrLookupTest, org.apache.commons.lang.text.StrMatcherTest, org.apache.commons.lang.text.StrMatcherTest, org.apache.commons.lang.text.StrSubstitutorTest, org.apache.commons.lang.text.StrSubstitutorTest, org.apache.commons.lang.text.StrTokenizerTest, org.apache.commons.lang.text.StrTokenizerTest, org.apache.commons.lang.time.DateFormatUtilsTest, org.apache.commons.lang.time.DateFormatUtilsTest, org.apache.commons.lang.time.DateUtilsTest, org.apache.commons.lang.time.DateUtilsTest, org.apache.commons.lang.time.DurationFormatUtilsTest, org.apache.commons.lang.time.DurationFormatUtilsTest, org.apache.commons.lang.time.FastDateFormatTest, org.apache.commons.lang.time.FastDateFormatTest, org.apache.commons.lang.time.StopWatchTest, org.apache.commons.lang.time.StopWatchTest]
18:27:04.386 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.lang.ArrayUtilsAddTest, org.apache.commons.lang.ArrayUtilsAddTest, org.apache.commons.lang.ArrayUtilsRemoveTest, org.apache.commons.lang.ArrayUtilsRemoveTest, org.apache.commons.lang.ArrayUtilsTest, org.apache.commons.lang.ArrayUtilsTest, org.apache.commons.lang.BitFieldTest, org.apache.commons.lang.BitFieldTest, org.apache.commons.lang.BooleanUtilsTest, org.apache.commons.lang.BooleanUtilsTest, org.apache.commons.lang.CharEncodingTest, org.apache.commons.lang.CharEncodingTest, org.apache.commons.lang.CharRangeTest, org.apache.commons.lang.CharRangeTest, org.apache.commons.lang.CharSetTest, org.apache.commons.lang.CharSetTest, org.apache.commons.lang.CharSetUtilsTest, org.apache.commons.lang.CharSetUtilsTest, org.apache.commons.lang.CharUtilsTest, org.apache.commons.lang.CharUtilsTest, org.apache.commons.lang.ClassUtilsTest, org.apache.commons.lang.ClassUtilsTest, org.apache.commons.lang.EntitiesPerformanceTest, org.apache.commons.lang.EntitiesPerformanceTest, org.apache.commons.lang.EntitiesTest, org.apache.commons.lang.EntitiesTest, org.apache.commons.lang.IllegalClassExceptionTest, org.apache.commons.lang.IllegalClassExceptionTest, org.apache.commons.lang.IncompleteArgumentExceptionTest, org.apache.commons.lang.IncompleteArgumentExceptionTest, org.apache.commons.lang.IntHashMapTest, org.apache.commons.lang.IntHashMapTest, org.apache.commons.lang.LocaleUtilsTest, org.apache.commons.lang.LocaleUtilsTest, org.apache.commons.lang.NotImplementedExceptionTest, org.apache.commons.lang.NotImplementedExceptionTest, org.apache.commons.lang.NullArgumentExceptionTest, org.apache.commons.lang.NullArgumentExceptionTest, org.apache.commons.lang.NumberRangeTest, org.apache.commons.lang.NumberRangeTest, org.apache.commons.lang.NumberUtilsTest, org.apache.commons.lang.NumberUtilsTest, org.apache.commons.lang.ObjectUtilsTest, org.apache.commons.lang.ObjectUtilsTest, org.apache.commons.lang.RandomStringUtilsTest, org.apache.commons.lang.RandomStringUtilsTest, org.apache.commons.lang.SerializationUtilsTest, org.apache.commons.lang.SerializationUtilsTest, org.apache.commons.lang.StringEscapeUtilsTest, org.apache.commons.lang.StringEscapeUtilsTest, org.apache.commons.lang.StringUtilsEqualsIndexOfTest, org.apache.commons.lang.StringUtilsEqualsIndexOfTest, org.apache.commons.lang.StringUtilsIsTest, org.apache.commons.lang.StringUtilsIsTest, org.apache.commons.lang.StringUtilsSubstringTest, org.apache.commons.lang.StringUtilsSubstringTest, org.apache.commons.lang.StringUtilsTest, org.apache.commons.lang.StringUtilsTest, org.apache.commons.lang.StringUtilsTrimEmptyTest, org.apache.commons.lang.StringUtilsTrimEmptyTest, org.apache.commons.lang.SystemUtilsTest, org.apache.commons.lang.SystemUtilsTest, org.apache.commons.lang.UnhandledExceptionTest, org.apache.commons.lang.UnhandledExceptionTest, org.apache.commons.lang.ValidateTest, org.apache.commons.lang.ValidateTest, org.apache.commons.lang.WordUtilsTest, org.apache.commons.lang.WordUtilsTest, org.apache.commons.lang.builder.CompareToBuilderTest, org.apache.commons.lang.builder.CompareToBuilderTest, org.apache.commons.lang.builder.DefaultToStringStyleTest, org.apache.commons.lang.builder.DefaultToStringStyleTest, org.apache.commons.lang.builder.EqualsBuilderTest, org.apache.commons.lang.builder.EqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderAndEqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderAndEqualsBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderTest, org.apache.commons.lang.builder.HashCodeBuilderTest, org.apache.commons.lang.builder.MultiLineToStringStyleTest, org.apache.commons.lang.builder.MultiLineToStringStyleTest, org.apache.commons.lang.builder.NoFieldNamesToStringStyleTest, org.apache.commons.lang.builder.NoFieldNamesToStringStyleTest, org.apache.commons.lang.builder.ReflectionToStringBuilderExcludeTest, org.apache.commons.lang.builder.ReflectionToStringBuilderExcludeTest, org.apache.commons.lang.builder.ShortPrefixToStringStyleTest, org.apache.commons.lang.builder.ShortPrefixToStringStyleTest, org.apache.commons.lang.builder.SimpleToStringStyleTest, org.apache.commons.lang.builder.SimpleToStringStyleTest, org.apache.commons.lang.builder.StandardToStringStyleTest, org.apache.commons.lang.builder.StandardToStringStyleTest, org.apache.commons.lang.builder.ToStringBuilderTest, org.apache.commons.lang.builder.ToStringBuilderTest, org.apache.commons.lang.builder.ToStringStyleTest, org.apache.commons.lang.builder.ToStringStyleTest, org.apache.commons.lang.enum.EnumTest, org.apache.commons.lang.enum.EnumTest, org.apache.commons.lang.enum.EnumUtilsTest, org.apache.commons.lang.enum.EnumUtilsTest, org.apache.commons.lang.enum.ValuedEnumTest, org.apache.commons.lang.enum.ValuedEnumTest, org.apache.commons.lang.enums.EnumEqualsTest, org.apache.commons.lang.enums.EnumEqualsTest, org.apache.commons.lang.enums.EnumTest, org.apache.commons.lang.enums.EnumTest, org.apache.commons.lang.enums.EnumUtilsTest, org.apache.commons.lang.enums.EnumUtilsTest, org.apache.commons.lang.enums.ValuedEnumTest, org.apache.commons.lang.enums.ValuedEnumTest, org.apache.commons.lang.exception.ExceptionUtilsTestCase, org.apache.commons.lang.exception.ExceptionUtilsTestCase, org.apache.commons.lang.exception.NestableDelegateTestCase, org.apache.commons.lang.exception.NestableDelegateTestCase, org.apache.commons.lang.exception.NestableErrorTestCase, org.apache.commons.lang.exception.NestableErrorTestCase, org.apache.commons.lang.exception.NestableExceptionTestCase, org.apache.commons.lang.exception.NestableExceptionTestCase, org.apache.commons.lang.exception.NestableRuntimeExceptionTestCase, org.apache.commons.lang.exception.NestableRuntimeExceptionTestCase, org.apache.commons.lang.math.DoubleRangeTest, org.apache.commons.lang.math.DoubleRangeTest, org.apache.commons.lang.math.FloatRangeTest, org.apache.commons.lang.math.FloatRangeTest, org.apache.commons.lang.math.FractionTest, org.apache.commons.lang.math.FractionTest, org.apache.commons.lang.math.IntRangeTest, org.apache.commons.lang.math.IntRangeTest, org.apache.commons.lang.math.LongRangeTest, org.apache.commons.lang.math.LongRangeTest, org.apache.commons.lang.math.NumberRangeTest, org.apache.commons.lang.math.NumberRangeTest, org.apache.commons.lang.math.NumberUtilsTest, org.apache.commons.lang.math.NumberUtilsTest, org.apache.commons.lang.math.RandomUtilsTest, org.apache.commons.lang.math.RandomUtilsTest, org.apache.commons.lang.math.RangeTest, org.apache.commons.lang.math.RangeTest, org.apache.commons.lang.mutable.MutableBooleanTest, org.apache.commons.lang.mutable.MutableBooleanTest, org.apache.commons.lang.mutable.MutableByteTest, org.apache.commons.lang.mutable.MutableByteTest, org.apache.commons.lang.mutable.MutableDoubleTest, org.apache.commons.lang.mutable.MutableDoubleTest, org.apache.commons.lang.mutable.MutableFloatTest, org.apache.commons.lang.mutable.MutableFloatTest, org.apache.commons.lang.mutable.MutableIntTest, org.apache.commons.lang.mutable.MutableIntTest, org.apache.commons.lang.mutable.MutableLongTest, org.apache.commons.lang.mutable.MutableLongTest, org.apache.commons.lang.mutable.MutableObjectTest, org.apache.commons.lang.mutable.MutableObjectTest, org.apache.commons.lang.mutable.MutableShortTest, org.apache.commons.lang.mutable.MutableShortTest, org.apache.commons.lang.text.CompositeFormatTest, org.apache.commons.lang.text.CompositeFormatTest, org.apache.commons.lang.text.StrBuilderAppendInsertTest, org.apache.commons.lang.text.StrBuilderAppendInsertTest, org.apache.commons.lang.text.StrBuilderTest, org.apache.commons.lang.text.StrBuilderTest, org.apache.commons.lang.text.StrLookupTest, org.apache.commons.lang.text.StrLookupTest, org.apache.commons.lang.text.StrMatcherTest, org.apache.commons.lang.text.StrMatcherTest, org.apache.commons.lang.text.StrSubstitutorTest, org.apache.commons.lang.text.StrSubstitutorTest, org.apache.commons.lang.text.StrTokenizerTest, org.apache.commons.lang.text.StrTokenizerTest, org.apache.commons.lang.time.DateFormatUtilsTest, org.apache.commons.lang.time.DateFormatUtilsTest, org.apache.commons.lang.time.DateUtilsTest, org.apache.commons.lang.time.DateUtilsTest, org.apache.commons.lang.time.DurationFormatUtilsTest, org.apache.commons.lang.time.DurationFormatUtilsTest, org.apache.commons.lang.time.FastDateFormatTest, org.apache.commons.lang.time.FastDateFormatTest, org.apache.commons.lang.time.StopWatchTest, org.apache.commons.lang.time.StopWatchTest], complianceLevel=3, outputFolder=., json=true}
18:27:04.387 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
18:27:04.404 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 214 MB
18:27:04.404 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
18:27:04.404 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
18:27:04.404 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
18:27:04.405 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
18:27:04.406 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
18:27:31.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
18:27:31.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:288 which is executed by 1 tests
-723213736
18:27:31.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
18:27:31.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:286 which is executed by 1 tests
-723213736
18:27:32.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:32.098 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (46 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotSame(Assert.java:325)
    at junit.framework.Assert.assertSame(Assert.java:288)
    at junit.framework.Assert.assertSame(Assert.java:296)
    at junit.framework.TestCase.assertSame(TestCase.java:465)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:443)
18:27:33.372 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>]
junit.framework.AssertionFailedError: expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotSame(Assert.java:325)
    at junit.framework.Assert.assertSame(Assert.java:288)
    at junit.framework.Assert.assertSame(Assert.java:296)
    at junit.framework.TestCase.assertSame(TestCase.java:465)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:443)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:33.377 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:33.379 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>]
18:27:33.379 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:33.380 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:286.
18:27:33.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
18:27:33.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:284 which is executed by 1 tests
-723213736
18:27:33.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:33.553 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)
18:27:33.970 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:33.976 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:33.977 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): null]
18:27:33.977 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:33.977 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:284.
18:27:33.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
18:27:33.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:283 which is executed by 1 tests
-723213736
18:27:34.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
18:27:34.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:282 which is executed by 1 tests
-723213736
18:27:34.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.238 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.507 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.513 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:34.518 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:34.518 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:34.518 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:282.
18:27:34.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
18:27:34.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:279 which is executed by 1 tests
-723213736
18:27:34.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.689 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.938 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:34.942 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:34.943 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:34.943 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:34.943 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:279.
18:27:34.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
18:27:34.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:276 which is executed by 1 tests
-723213736
18:27:35.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.079 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.352 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.356 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:35.357 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:35.357 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:35.357 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:276.
18:27:35.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.369 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.619 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.623 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:35.630 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:35.630 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:35.630 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:276.
18:27:35.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
18:27:35.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:275 which is executed by 1 tests
-723213736
18:27:35.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
18:27:35.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:274 which is executed by 1 tests
-723213736
18:27:35.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:35.920 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:36.194 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:36.206 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:36.207 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:36.208 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:36.208 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:274.
18:27:36.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
18:27:36.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:273 which is executed by 1 tests
-723213736
18:27:36.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
18:27:36.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:272 which is executed by 1 tests
-723213736
18:27:36.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:36.451 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

java.lang.NullPointerException
    at org.apache.commons.lang.LocaleUtils.countriesByLanguage(LocaleUtils.java:143)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:440)
    at org.apache.commons.lang.LocaleUtilsTest.testCountriesByLanguage(LocaleUtilsTest.java:474)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:36.661 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[null]
java.lang.NullPointerException    at org.apache.commons.lang.LocaleUtils.countriesByLanguage(LocaleUtils.java:143)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:440)
    at org.apache.commons.lang.LocaleUtilsTest.testCountriesByLanguage(LocaleUtilsTest.java:474)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:36.672 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:36.690 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): null]
18:27:36.690 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:36.691 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:272.
18:27:36.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
18:27:36.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:271 which is executed by 1 tests
-723213736
18:27:36.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:36.822 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)
18:27:37.040 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.045 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:37.045 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): null]
18:27:37.046 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:37.046 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:271.
18:27:37.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.058 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.298 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError: expected:<4> but was:<0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.301 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<0>]
junit.framework.AssertionFailedError: expected:<4> but was:<0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:37.302 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:37.302 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<0>]
18:27:37.302 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:271.
18:27:37.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
18:27:37.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:270 which is executed by 1 tests
-723213736
18:27:37.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.431 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)
18:27:37.645 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)

junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.649 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

18:27:37.650 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): null]
18:27:37.651 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected:<4> but was:<5>]
18:27:37.651 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:270.
18:27:37.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<4> but was:<5>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
18:27:37.662 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected:<4> but was:<5>]
junit.framework.AssertionFailedError: expected:<4> but was:<5>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)
18:27:37.859 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:442)

junit.framework.AssertionFailedError: expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotSame(Assert.java:325)
    at junit.framework.Assert.assertSame(Assert.java:288)
    at junit.framework.Assert.assertSame(Assert.java:296)
    at junit.framework.TestCase.assertSame(TestCase.java:465)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:443)
18:27:37.862 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest)
[expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>]
junit.framework.AssertionFailedError: expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotSame(Assert.java:325)
    at junit.framework.Assert.assertSame(Assert.java:288)
    at junit.framework.Assert.assertSame(Assert.java:296)
    at junit.framework.TestCase.assertSame(TestCase.java:465)
    at org.apache.commons.lang.LocaleUtilsTest.assertCountriesByLanguage(LocaleUtilsTest.java:443)

18:27:37.863 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): null]
18:27:37.863 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[testCountriesByLanguage(org.apache.commons.lang.LocaleUtilsTest): expected same:<[de_CH, de_AT, de_LU, de_DE, de_GR]> was not:<[de_CH, de_AT, de_LU, de_DE, de_GR]>]
18:27:37.863 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.LocaleUtils:270.
18:27:37.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
18:27:37.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:269 which is executed by 1 tests
-723213736
18:27:37.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
18:27:37.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:853 which is executed by 3 tests
-2037470238
18:27:38.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
18:27:38.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:852 which is executed by 3 tests
-2037470238
18:27:38.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
18:27:38.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:848 which is executed by 3 tests
-2037470238
18:27:38.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:38.430 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (11 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:39.204 [pool-51-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Entities.java:382: error: variable entityValue might not have been initialized
                if (entityValue == (-1)) {
                    ^
18:27:39.294 [pool-51-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class Entities {
    private static final java.lang.String[][] BASIC_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "quot", "34" }, new java.lang.String[]{ "amp", "38" }, new java.lang.String[]{ "lt", "60" }, new java.lang.String[]{ "gt", "62" } };

    private static final java.lang.String[][] APOS_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "apos", "39" } };

    static final java.lang.String[][] ISO8859_1_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "nbsp", "160" }, new java.lang.String[]{ "iexcl", "161" }, new java.lang.String[]{ "cent", "162" }, new java.lang.String[]{ "pound", "163" }, new java.lang.String[]{ "curren", "164" }, new java.lang.String[]{ "yen", "165" }, new java.lang.String[]{ "brvbar", "166" }, new java.lang.String[]{ "sect", "167" }, new java.lang.String[]{ "uml", "168" }, new java.lang.String[]{ "copy", "169" }, new java.lang.String[]{ "ordf", "170" }, new java.lang.String[]{ "laquo", "171" }, new java.lang.String[]{ "not", "172" }, new java.lang.String[]{ "shy", "173" }, new java.lang.String[]{ "reg", "174" }, new java.lang.String[]{ "macr", "175" }, new java.lang.String[]{ "deg", "176" }, new java.lang.String[]{ "plusmn", "177" }, new java.lang.String[]{ "sup2", "178" }, new java.lang.String[]{ "sup3", "179" }, new java.lang.String[]{ "acute", "180" }, new java.lang.String[]{ "micro", "181" }, new java.lang.String[]{ "para", "182" }, new java.lang.String[]{ "middot", "183" }, new java.lang.String[]{ "cedil", "184" }, new java.lang.String[]{ "sup1", "185" }, new java.lang.String[]{ "ordm", "186" }, new java.lang.String[]{ "raquo", "187" }, new java.lang.String[]{ "frac14", "188" }, new java.lang.String[]{ "frac12", "189" }, new java.lang.String[]{ "frac34", "190" }, new java.lang.String[]{ "iquest", "191" }, new java.lang.String[]{ "Agrave", "192" }, new java.lang.String[]{ "Aacute", "193" }, new java.lang.String[]{ "Acirc", "194" }, new java.lang.String[]{ "Atilde", "195" }, new java.lang.String[]{ "Auml", "196" }, new java.lang.String[]{ "Aring", "197" }, new java.lang.String[]{ "AElig", "198" }, new java.lang.String[]{ "Ccedil", "199" }, new java.lang.String[]{ "Egrave", "200" }, new java.lang.String[]{ "Eacute", "201" }, new java.lang.String[]{ "Ecirc", "202" }, new java.lang.String[]{ "Euml", "203" }, new java.lang.String[]{ "Igrave", "204" }, new java.lang.String[]{ "Iacute", "205" }, new java.lang.String[]{ "Icirc", "206" }, new java.lang.String[]{ "Iuml", "207" }, new java.lang.String[]{ "ETH", "208" }, new java.lang.String[]{ "Ntilde", "209" }, new java.lang.String[]{ "Ograve", "210" }, new java.lang.String[]{ "Oacute", "211" }, new java.lang.String[]{ "Ocirc", "212" }, new java.lang.String[]{ "Otilde", "213" }, new java.lang.String[]{ "Ouml", "214" }, new java.lang.String[]{ "times", "215" }, new java.lang.String[]{ "Oslash", "216" }, new java.lang.String[]{ "Ugrave", "217" }, new java.lang.String[]{ "Uacute", "218" }, new java.lang.String[]{ "Ucirc", "219" }, new java.lang.String[]{ "Uuml", "220" }, new java.lang.String[]{ "Yacute", "221" }, new java.lang.String[]{ "THORN", "222" }, new java.lang.String[]{ "szlig", "223" }, new java.lang.String[]{ "agrave", "224" }, new java.lang.String[]{ "aacute", "225" }, new java.lang.String[]{ "acirc", "226" }, new java.lang.String[]{ "atilde", "227" }, new java.lang.String[]{ "auml", "228" }, new java.lang.String[]{ "aring", "229" }, new java.lang.String[]{ "aelig", "230" }, new java.lang.String[]{ "ccedil", "231" }, new java.lang.String[]{ "egrave", "232" }, new java.lang.String[]{ "eacute", "233" }, new java.lang.String[]{ "ecirc", "234" }, new java.lang.String[]{ "euml", "235" }, new java.lang.String[]{ "igrave", "236" }, new java.lang.String[]{ "iacute", "237" }, new java.lang.String[]{ "icirc", "238" }, new java.lang.String[]{ "iuml", "239" }, new java.lang.String[]{ "eth", "240" }, new java.lang.String[]{ "ntilde", "241" }, new java.lang.String[]{ "ograve", "242" }, new java.lang.String[]{ "oacute", "243" }, new java.lang.String[]{ "ocirc", "244" }, new java.lang.String[]{ "otilde", "245" }, new java.lang.String[]{ "ouml", "246" }, new java.lang.String[]{ "divide", "247" }, new java.lang.String[]{ "oslash", "248" }, new java.lang.String[]{ "ugrave", "249" }, new java.lang.String[]{ "uacute", "250" }, new java.lang.String[]{ "ucirc", "251" }, new java.lang.String[]{ "uuml", "252" }, new java.lang.String[]{ "yacute", "253" }, new java.lang.String[]{ "thorn", "254" }, new java.lang.String[]{ "yuml", "255" } };

    static final java.lang.String[][] HTML40_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "fnof", "402" }, new java.lang.String[]{ "Alpha", "913" }, new java.lang.String[]{ "Beta", "914" }, new java.lang.String[]{ "Gamma", "915" }, new java.lang.String[]{ "Delta", "916" }, new java.lang.String[]{ "Epsilon", "917" }, new java.lang.String[]{ "Zeta", "918" }, new java.lang.String[]{ "Eta", "919" }, new java.lang.String[]{ "Theta", "920" }, new java.lang.String[]{ "Iota", "921" }, new java.lang.String[]{ "Kappa", "922" }, new java.lang.String[]{ "Lambda", "923" }, new java.lang.String[]{ "Mu", "924" }, new java.lang.String[]{ "Nu", "925" }, new java.lang.String[]{ "Xi", "926" }, new java.lang.String[]{ "Omicron", "927" }, new java.lang.String[]{ "Pi", "928" }, new java.lang.String[]{ "Rho", "929" }, new java.lang.String[]{ "Sigma", "931" }, new java.lang.String[]{ "Tau", "932" }, new java.lang.String[]{ "Upsilon", "933" }, new java.lang.String[]{ "Phi", "934" }, new java.lang.String[]{ "Chi", "935" }, new java.lang.String[]{ "Psi", "936" }, new java.lang.String[]{ "Omega", "937" }, new java.lang.String[]{ "alpha", "945" }, new java.lang.String[]{ "beta", "946" }, new java.lang.String[]{ "gamma", "947" }, new java.lang.String[]{ "delta", "948" }, new java.lang.String[]{ "epsilon", "949" }, new java.lang.String[]{ "zeta", "950" }, new java.lang.String[]{ "eta", "951" }, new java.lang.String[]{ "theta", "952" }, new java.lang.String[]{ "iota", "953" }, new java.lang.String[]{ "kappa", "954" }, new java.lang.String[]{ "lambda", "955" }, new java.lang.String[]{ "mu", "956" }, new java.lang.String[]{ "nu", "957" }, new java.lang.String[]{ "xi", "958" }, new java.lang.String[]{ "omicron", "959" }, new java.lang.String[]{ "pi", "960" }, new java.lang.String[]{ "rho", "961" }, new java.lang.String[]{ "sigmaf", "962" }, new java.lang.String[]{ "sigma", "963" }, new java.lang.String[]{ "tau", "964" }, new java.lang.String[]{ "upsilon", "965" }, new java.lang.String[]{ "phi", "966" }, new java.lang.String[]{ "chi", "967" }, new java.lang.String[]{ "psi", "968" }, new java.lang.String[]{ "omega", "969" }, new java.lang.String[]{ "thetasym", "977" }, new java.lang.String[]{ "upsih", "978" }, new java.lang.String[]{ "piv", "982" }, new java.lang.String[]{ "bull", "8226" }, new java.lang.String[]{ "hellip", "8230" }, new java.lang.String[]{ "prime", "8242" }, new java.lang.String[]{ "Prime", "8243" }, new java.lang.String[]{ "oline", "8254" }, new java.lang.String[]{ "frasl", "8260" }, new java.lang.String[]{ "weierp", "8472" }, new java.lang.String[]{ "image", "8465" }, new java.lang.String[]{ "real", "8476" }, new java.lang.String[]{ "trade", "8482" }, new java.lang.String[]{ "alefsym", "8501" }, new java.lang.String[]{ "larr", "8592" }, new java.lang.String[]{ "uarr", "8593" }, new java.lang.String[]{ "rarr", "8594" }, new java.lang.String[]{ "darr", "8595" }, new java.lang.String[]{ "harr", "8596" }, new java.lang.String[]{ "crarr", "8629" }, new java.lang.String[]{ "lArr", "8656" }, new java.lang.String[]{ "uArr", "8657" }, new java.lang.String[]{ "rArr", "8658" }, new java.lang.String[]{ "dArr", "8659" }, new java.lang.String[]{ "hArr", "8660" }, new java.lang.String[]{ "forall", "8704" }, new java.lang.String[]{ "part", "8706" }, new java.lang.String[]{ "exist", "8707" }, new java.lang.String[]{ "empty", "8709" }, new java.lang.String[]{ "nabla", "8711" }, new java.lang.String[]{ "isin", "8712" }, new java.lang.String[]{ "notin", "8713" }, new java.lang.String[]{ "ni", "8715" }, new java.lang.String[]{ "prod", "8719" }, new java.lang.String[]{ "sum", "8721" }, new java.lang.String[]{ "minus", "8722" }, new java.lang.String[]{ "lowast", "8727" }, new java.lang.String[]{ "radic", "8730" }, new java.lang.String[]{ "prop", "8733" }, new java.lang.String[]{ "infin", "8734" }, new java.lang.String[]{ "ang", "8736" }, new java.lang.String[]{ "and", "8743" }, new java.lang.String[]{ "or", "8744" }, new java.lang.String[]{ "cap", "8745" }, new java.lang.String[]{ "cup", "8746" }, new java.lang.String[]{ "int", "8747" }, new java.lang.String[]{ "there4", "8756" }, new java.lang.String[]{ "sim", "8764" }, new java.lang.String[]{ "cong", "8773" }, new java.lang.String[]{ "asymp", "8776" }, new java.lang.String[]{ "ne", "8800" }, new java.lang.String[]{ "equiv", "8801" }, new java.lang.String[]{ "le", "8804" }, new java.lang.String[]{ "ge", "8805" }, new java.lang.String[]{ "sub", "8834" }, new java.lang.String[]{ "sup", "8835" }, new java.lang.String[]{ "sube", "8838" }, new java.lang.String[]{ "supe", "8839" }, new java.lang.String[]{ "oplus", "8853" }, new java.lang.String[]{ "otimes", "8855" }, new java.lang.String[]{ "perp", "8869" }, new java.lang.String[]{ "sdot", "8901" }, new java.lang.String[]{ "lceil", "8968" }, new java.lang.String[]{ "rceil", "8969" }, new java.lang.String[]{ "lfloor", "8970" }, new java.lang.String[]{ "rfloor", "8971" }, new java.lang.String[]{ "lang", "9001" }, new java.lang.String[]{ "rang", "9002" }, new java.lang.String[]{ "loz", "9674" }, new java.lang.String[]{ "spades", "9824" }, new java.lang.String[]{ "clubs", "9827" }, new java.lang.String[]{ "hearts", "9829" }, new java.lang.String[]{ "diams", "9830" }, new java.lang.String[]{ "OElig", "338" }, new java.lang.String[]{ "oelig", "339" }, new java.lang.String[]{ "Scaron", "352" }, new java.lang.String[]{ "scaron", "353" }, new java.lang.String[]{ "Yuml", "376" }, new java.lang.String[]{ "circ", "710" }, new java.lang.String[]{ "tilde", "732" }, new java.lang.String[]{ "ensp", "8194" }, new java.lang.String[]{ "emsp", "8195" }, new java.lang.String[]{ "thinsp", "8201" }, new java.lang.String[]{ "zwnj", "8204" }, new java.lang.String[]{ "zwj", "8205" }, new java.lang.String[]{ "lrm", "8206" }, new java.lang.String[]{ "rlm", "8207" }, new java.lang.String[]{ "ndash", "8211" }, new java.lang.String[]{ "mdash", "8212" }, new java.lang.String[]{ "lsquo", "8216" }, new java.lang.String[]{ "rsquo", "8217" }, new java.lang.String[]{ "sbquo", "8218" }, new java.lang.String[]{ "ldquo", "8220" }, new java.lang.String[]{ "rdquo", "8221" }, new java.lang.String[]{ "bdquo", "8222" }, new java.lang.String[]{ "dagger", "8224" }, new java.lang.String[]{ "Dagger", "8225" }, new java.lang.String[]{ "permil", "8240" }, new java.lang.String[]{ "lsaquo", "8249" }, new java.lang.String[]{ "rsaquo", "8250" }, new java.lang.String[]{ "euro", "8364" } };

    public static final org.apache.commons.lang.Entities XML;

    public static final org.apache.commons.lang.Entities HTML32;

    public static final org.apache.commons.lang.Entities HTML40;

    static {
        XML = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.APOS_ARRAY);
    }

    static {
        HTML32 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
    }

    static {
        HTML40 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.fillWithHtml40Entities(org.apache.commons.lang.Entities.HTML40);
    }

    static void fillWithHtml40Entities(org.apache.commons.lang.Entities entities) {
        entities.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.HTML40_ARRAY);
    }

    static interface EntityMap {
        void add(java.lang.String name, int value);

        java.lang.String name(int value);

        int value(java.lang.String name);
    }

    static class PrimitiveEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        private java.util.Map mapNameToValue = new java.util.HashMap();

        private org.apache.commons.lang.IntHashMap mapValueToName = new org.apache.commons.lang.IntHashMap();

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(value, name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(value)));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    abstract static class MapIntMap implements org.apache.commons.lang.Entities.EntityMap {
        protected java.util.Map mapNameToValue;

        protected java.util.Map mapValueToName;

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(new java.lang.Integer(value), name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(new java.lang.Integer(value))));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    static class HashEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public HashEntityMap() {
            mapNameToValue = new java.util.HashMap();
            mapValueToName = new java.util.HashMap();
        }
    }

    static class TreeEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public TreeEntityMap() {
            mapNameToValue = new java.util.TreeMap();
            mapValueToName = new java.util.TreeMap();
        }
    }

    static class LookupEntityMap extends org.apache.commons.lang.Entities.PrimitiveEntityMap {
        private java.lang.String[] lookupTable;

        private int LOOKUP_TABLE_SIZE = 256;

        public java.lang.String name(int value) {
            if (value < (LOOKUP_TABLE_SIZE)) {
                return lookupTable()[value];
            }
            return super.name(value);
        }

        private java.lang.String[] lookupTable() {
            if ((lookupTable) == null) {
                createLookupTable();
            }
            return lookupTable;
        }

        private void createLookupTable() {
            lookupTable = new java.lang.String[LOOKUP_TABLE_SIZE];
            for (int i = 0; i < (LOOKUP_TABLE_SIZE); ++i) {
                lookupTable[i] = super.name(i);
            }
        }
    }

    static class ArrayEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        protected int growBy = 100;

        protected int size = 0;

        protected java.lang.String[] names;

        protected int[] values;

        public ArrayEntityMap() {
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public ArrayEntityMap(int growBy) {
            this.growBy = growBy;
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            names[size] = name;
            values[size] = value;
            (size)++;
        }

        protected void ensureCapacity(int capacity) {
            if (capacity > (names.length)) {
                int newSize = java.lang.Math.max(capacity, ((size) + (growBy)));
                java.lang.String[] newNames = new java.lang.String[newSize];
                java.lang.System.arraycopy(names, 0, newNames, 0, size);
                names = newNames;
                int[] newValues = new int[newSize];
                java.lang.System.arraycopy(values, 0, newValues, 0, size);
                values = newValues;
            }
        }

        public java.lang.String name(int value) {
            for (int i = 0; i < (size); ++i) {
                if ((values[i]) == value) {
                    return names[i];
                }
            }
            return null;
        }

        public int value(java.lang.String name) {
            for (int i = 0; i < (size); ++i) {
                if (names[i].equals(name)) {
                    return values[i];
                }
            }
            return -1;
        }
    }

    static class BinaryEntityMap extends org.apache.commons.lang.Entities.ArrayEntityMap {
        public BinaryEntityMap() {
            super();
        }

        public BinaryEntityMap(int growBy) {
            super(growBy);
        }

        private int binarySearch(int key) {
            int low = 0;
            int high = (size) - 1;
            while (low <= high) {
                int mid = (low + high) >> 1;
                int midVal = values[mid];
                if (midVal < key) {
                    low = mid + 1;
                }else
                    if (midVal > key) {
                        high = mid - 1;
                    }else {
                        return mid;
                    }

            } 
            return -(low + 1);
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            int insertAt = binarySearch(value);
            if (insertAt > 0) {
                return;
            }
            insertAt = -(insertAt + 1);
            java.lang.System.arraycopy(values, insertAt, values, (insertAt + 1), ((size) - insertAt));
            values[insertAt] = value;
            java.lang.System.arraycopy(names, insertAt, names, (insertAt + 1), ((size) - insertAt));
            names[insertAt] = name;
            (size)++;
        }

        public java.lang.String name(int value) {
            int index = binarySearch(value);
            if (index < 0) {
                return null;
            }
            return names[index];
        }
    }

    org.apache.commons.lang.Entities.EntityMap map = new org.apache.commons.lang.Entities.LookupEntityMap();

    public void addEntities(java.lang.String[][] entityArray) {
        for (int i = 0; i < (entityArray.length); ++i) {
            addEntity(entityArray[i][0], java.lang.Integer.parseInt(entityArray[i][1]));
        }
    }

    public void addEntity(java.lang.String name, int value) {
        map.add(name, value);
    }

    public java.lang.String entityName(int value) {
        return map.name(value);
    }

    public int entityValue(java.lang.String name) {
        return map.value(name);
    }

    public java.lang.String escape(java.lang.String str) {
        java.lang.StringBuffer buf = new java.lang.StringBuffer(((str.length()) * 2));
        int i;
        for (i = 0; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            java.lang.String entityName = this.entityName(ch);
            if (entityName == null) {
                if (ch > 127) {
                    int intValue = ch;
                    buf.append("&#");
                    buf.append(intValue);
                    buf.append(';');
                }else {
                    buf.append(ch);
                }
            }else {
                buf.append('&');
                buf.append(entityName);
                buf.append(';');
            }
        }
        return buf.toString();
    }

    public void escape(java.io.Writer writer, java.lang.String str) throws java.io.IOException {
        int len = str.length();
        for (int i = 0; i < len; i++) {
            char c = str.charAt(i);
            java.lang.String entityName = this.entityName(c);
            if (entityName == null) {
                if (c > 127) {
                    writer.write("&#");
                    writer.write(java.lang.Integer.toString(c, 10));
                    writer.write(';');
                }else {
                    writer.write(c);
                }
            }else {
                writer.write('&');
                writer.write(entityName);
                writer.write(';');
            }
        }
    }

    public java.lang.String unescape(java.lang.String str) {
        int firstAmp = str.indexOf('&');
        if (firstAmp < 0) {
            return str;
        }
        java.lang.StringBuffer buf = new java.lang.StringBuffer(str.length());
        buf.append(str.substring(0, firstAmp));
        for (int i = firstAmp; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            if (ch == '&') {
                int semi = str.indexOf(';', (i + 1));
                if (semi == (-1)) {
                    buf.append(ch);
                    continue;
                }
                int amph = str.indexOf('&', (i + 1));
                if ((amph != (-1)) && (amph < semi)) {
                    buf.append(ch);
                    continue;
                }
                java.lang.String entityName = str.substring((i + 1), semi);
                int entityValue;
                if ((entityName.length()) == 0) {
                    entityValue = -1;
                }else
                    if ((entityName.charAt(0)) == '#') {
                        if ((entityName.length()) == 1) {
                            entityValue = -1;
                        }else {
                            char charAt1 = entityName.charAt(1);
                            try {
                                if ((charAt1 == 'x') || (charAt1 == 'X')) {
                                    entityValue = java.lang.Integer.valueOf(entityName.substring(2), 16).intValue();
                                }else {
                                    boolean spoonDefaultValue = false;
                                    try {
                                        spoonDefaultValue = true;
                                    } catch (java.lang.Exception __NopolProcessorException) {
                                    }
                                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(12).isEnabled()) {
                                        fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectionStarts();
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("charAt1",charAt1);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.HTML32",org.apache.commons.lang.Entities.HTML32);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("ch",ch);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.ISO8859_1_ARRAY",org.apache.commons.lang.Entities.ISO8859_1_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.HTML40",org.apache.commons.lang.Entities.HTML40);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("amph",amph);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.APOS_ARRAY",org.apache.commons.lang.Entities.APOS_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.BASIC_ARRAY",org.apache.commons.lang.Entities.BASIC_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("firstAmp",firstAmp);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("str",str);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.XML",org.apache.commons.lang.Entities.XML);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("buf",buf);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.this.map",org.apache.commons.lang.Entities.this.map);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("entityName",entityName);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("semi",semi);} catch (Exception ex1) {ex1.printStackTrace();};
                                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.commons.lang.Entities.HTML40_ARRAY",org.apache.commons.lang.Entities.HTML40_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                        fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectOutput(runtimeAngelicValue);
                                        fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectionEnds();
                                    }
                                    if (runtimeAngelicValue)
                                        entityValue = java.lang.Integer.parseInt(entityName.substring(1));

                                }
                            } catch (java.lang.NumberFormatException ex) {
                                entityValue = -1;
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityName);
                    }

                if (entityValue == (-1)) {
                    buf.append('&');
                    buf.append(entityName);
                    buf.append(';');
                }else {
                    buf.append(((char) (entityValue)));
                }
                i = semi;
            }else {
                buf.append(ch);
            }
        }
        return buf.toString();
    }

    public void unescape(java.io.Writer writer, java.lang.String string) throws java.io.IOException {
        int firstAmp = string.indexOf('&');
        if (firstAmp < 0) {
            writer.write(string);
            return;
        }
        writer.write(string, 0, firstAmp);
        int len = string.length();
        for (int i = firstAmp; i < len; i++) {
            char c = string.charAt(i);
            if (c == '&') {
                int nextIdx = i + 1;
                int semiColonIdx = string.indexOf(';', nextIdx);
                if (semiColonIdx == (-1)) {
                    writer.write(c);
                    continue;
                }
                int amphersandIdx = string.indexOf('&', (i + 1));
                if ((amphersandIdx != (-1)) && (amphersandIdx < semiColonIdx)) {
                    writer.write(c);
                    continue;
                }
                java.lang.String entityContent = string.substring(nextIdx, semiColonIdx);
                int entityValue = -1;
                int entityContentLen = entityContent.length();
                if (entityContentLen > 0) {
                    if ((entityContent.charAt(0)) == '#') {
                        if (entityContentLen > 1) {
                            char isHexChar = entityContent.charAt(1);
                            try {
                                switch (isHexChar) {
                                    case 'X' :
                                    case 'x' :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(2), 16);
                                        }
                                    default :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(1), 10);
                                        }
                                }
                            } catch (java.lang.NumberFormatException e) {
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityContent);
                    }
                }
                if (entityValue == (-1)) {
                    writer.write('&');
                    writer.write(entityContent);
                    writer.write(';');
                }else {
                    writer.write(entityValue);
                }
                i = semiColonIdx;
            }else {
                writer.write(c);
            }
        }
    }
}
18:27:39.295 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
18:27:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
18:27:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:845 which is executed by 3 tests
-2037470238
18:27:39.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:39.456 [pool-54-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:39.832 [pool-53-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Entities.java:385: error: variable entityValue might not have been initialized
                if (entityValue == (-1)) {
                    ^
18:27:39.921 [pool-53-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class Entities {
    private static final java.lang.String[][] BASIC_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "quot", "34" }, new java.lang.String[]{ "amp", "38" }, new java.lang.String[]{ "lt", "60" }, new java.lang.String[]{ "gt", "62" } };

    private static final java.lang.String[][] APOS_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "apos", "39" } };

    static final java.lang.String[][] ISO8859_1_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "nbsp", "160" }, new java.lang.String[]{ "iexcl", "161" }, new java.lang.String[]{ "cent", "162" }, new java.lang.String[]{ "pound", "163" }, new java.lang.String[]{ "curren", "164" }, new java.lang.String[]{ "yen", "165" }, new java.lang.String[]{ "brvbar", "166" }, new java.lang.String[]{ "sect", "167" }, new java.lang.String[]{ "uml", "168" }, new java.lang.String[]{ "copy", "169" }, new java.lang.String[]{ "ordf", "170" }, new java.lang.String[]{ "laquo", "171" }, new java.lang.String[]{ "not", "172" }, new java.lang.String[]{ "shy", "173" }, new java.lang.String[]{ "reg", "174" }, new java.lang.String[]{ "macr", "175" }, new java.lang.String[]{ "deg", "176" }, new java.lang.String[]{ "plusmn", "177" }, new java.lang.String[]{ "sup2", "178" }, new java.lang.String[]{ "sup3", "179" }, new java.lang.String[]{ "acute", "180" }, new java.lang.String[]{ "micro", "181" }, new java.lang.String[]{ "para", "182" }, new java.lang.String[]{ "middot", "183" }, new java.lang.String[]{ "cedil", "184" }, new java.lang.String[]{ "sup1", "185" }, new java.lang.String[]{ "ordm", "186" }, new java.lang.String[]{ "raquo", "187" }, new java.lang.String[]{ "frac14", "188" }, new java.lang.String[]{ "frac12", "189" }, new java.lang.String[]{ "frac34", "190" }, new java.lang.String[]{ "iquest", "191" }, new java.lang.String[]{ "Agrave", "192" }, new java.lang.String[]{ "Aacute", "193" }, new java.lang.String[]{ "Acirc", "194" }, new java.lang.String[]{ "Atilde", "195" }, new java.lang.String[]{ "Auml", "196" }, new java.lang.String[]{ "Aring", "197" }, new java.lang.String[]{ "AElig", "198" }, new java.lang.String[]{ "Ccedil", "199" }, new java.lang.String[]{ "Egrave", "200" }, new java.lang.String[]{ "Eacute", "201" }, new java.lang.String[]{ "Ecirc", "202" }, new java.lang.String[]{ "Euml", "203" }, new java.lang.String[]{ "Igrave", "204" }, new java.lang.String[]{ "Iacute", "205" }, new java.lang.String[]{ "Icirc", "206" }, new java.lang.String[]{ "Iuml", "207" }, new java.lang.String[]{ "ETH", "208" }, new java.lang.String[]{ "Ntilde", "209" }, new java.lang.String[]{ "Ograve", "210" }, new java.lang.String[]{ "Oacute", "211" }, new java.lang.String[]{ "Ocirc", "212" }, new java.lang.String[]{ "Otilde", "213" }, new java.lang.String[]{ "Ouml", "214" }, new java.lang.String[]{ "times", "215" }, new java.lang.String[]{ "Oslash", "216" }, new java.lang.String[]{ "Ugrave", "217" }, new java.lang.String[]{ "Uacute", "218" }, new java.lang.String[]{ "Ucirc", "219" }, new java.lang.String[]{ "Uuml", "220" }, new java.lang.String[]{ "Yacute", "221" }, new java.lang.String[]{ "THORN", "222" }, new java.lang.String[]{ "szlig", "223" }, new java.lang.String[]{ "agrave", "224" }, new java.lang.String[]{ "aacute", "225" }, new java.lang.String[]{ "acirc", "226" }, new java.lang.String[]{ "atilde", "227" }, new java.lang.String[]{ "auml", "228" }, new java.lang.String[]{ "aring", "229" }, new java.lang.String[]{ "aelig", "230" }, new java.lang.String[]{ "ccedil", "231" }, new java.lang.String[]{ "egrave", "232" }, new java.lang.String[]{ "eacute", "233" }, new java.lang.String[]{ "ecirc", "234" }, new java.lang.String[]{ "euml", "235" }, new java.lang.String[]{ "igrave", "236" }, new java.lang.String[]{ "iacute", "237" }, new java.lang.String[]{ "icirc", "238" }, new java.lang.String[]{ "iuml", "239" }, new java.lang.String[]{ "eth", "240" }, new java.lang.String[]{ "ntilde", "241" }, new java.lang.String[]{ "ograve", "242" }, new java.lang.String[]{ "oacute", "243" }, new java.lang.String[]{ "ocirc", "244" }, new java.lang.String[]{ "otilde", "245" }, new java.lang.String[]{ "ouml", "246" }, new java.lang.String[]{ "divide", "247" }, new java.lang.String[]{ "oslash", "248" }, new java.lang.String[]{ "ugrave", "249" }, new java.lang.String[]{ "uacute", "250" }, new java.lang.String[]{ "ucirc", "251" }, new java.lang.String[]{ "uuml", "252" }, new java.lang.String[]{ "yacute", "253" }, new java.lang.String[]{ "thorn", "254" }, new java.lang.String[]{ "yuml", "255" } };

    static final java.lang.String[][] HTML40_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "fnof", "402" }, new java.lang.String[]{ "Alpha", "913" }, new java.lang.String[]{ "Beta", "914" }, new java.lang.String[]{ "Gamma", "915" }, new java.lang.String[]{ "Delta", "916" }, new java.lang.String[]{ "Epsilon", "917" }, new java.lang.String[]{ "Zeta", "918" }, new java.lang.String[]{ "Eta", "919" }, new java.lang.String[]{ "Theta", "920" }, new java.lang.String[]{ "Iota", "921" }, new java.lang.String[]{ "Kappa", "922" }, new java.lang.String[]{ "Lambda", "923" }, new java.lang.String[]{ "Mu", "924" }, new java.lang.String[]{ "Nu", "925" }, new java.lang.String[]{ "Xi", "926" }, new java.lang.String[]{ "Omicron", "927" }, new java.lang.String[]{ "Pi", "928" }, new java.lang.String[]{ "Rho", "929" }, new java.lang.String[]{ "Sigma", "931" }, new java.lang.String[]{ "Tau", "932" }, new java.lang.String[]{ "Upsilon", "933" }, new java.lang.String[]{ "Phi", "934" }, new java.lang.String[]{ "Chi", "935" }, new java.lang.String[]{ "Psi", "936" }, new java.lang.String[]{ "Omega", "937" }, new java.lang.String[]{ "alpha", "945" }, new java.lang.String[]{ "beta", "946" }, new java.lang.String[]{ "gamma", "947" }, new java.lang.String[]{ "delta", "948" }, new java.lang.String[]{ "epsilon", "949" }, new java.lang.String[]{ "zeta", "950" }, new java.lang.String[]{ "eta", "951" }, new java.lang.String[]{ "theta", "952" }, new java.lang.String[]{ "iota", "953" }, new java.lang.String[]{ "kappa", "954" }, new java.lang.String[]{ "lambda", "955" }, new java.lang.String[]{ "mu", "956" }, new java.lang.String[]{ "nu", "957" }, new java.lang.String[]{ "xi", "958" }, new java.lang.String[]{ "omicron", "959" }, new java.lang.String[]{ "pi", "960" }, new java.lang.String[]{ "rho", "961" }, new java.lang.String[]{ "sigmaf", "962" }, new java.lang.String[]{ "sigma", "963" }, new java.lang.String[]{ "tau", "964" }, new java.lang.String[]{ "upsilon", "965" }, new java.lang.String[]{ "phi", "966" }, new java.lang.String[]{ "chi", "967" }, new java.lang.String[]{ "psi", "968" }, new java.lang.String[]{ "omega", "969" }, new java.lang.String[]{ "thetasym", "977" }, new java.lang.String[]{ "upsih", "978" }, new java.lang.String[]{ "piv", "982" }, new java.lang.String[]{ "bull", "8226" }, new java.lang.String[]{ "hellip", "8230" }, new java.lang.String[]{ "prime", "8242" }, new java.lang.String[]{ "Prime", "8243" }, new java.lang.String[]{ "oline", "8254" }, new java.lang.String[]{ "frasl", "8260" }, new java.lang.String[]{ "weierp", "8472" }, new java.lang.String[]{ "image", "8465" }, new java.lang.String[]{ "real", "8476" }, new java.lang.String[]{ "trade", "8482" }, new java.lang.String[]{ "alefsym", "8501" }, new java.lang.String[]{ "larr", "8592" }, new java.lang.String[]{ "uarr", "8593" }, new java.lang.String[]{ "rarr", "8594" }, new java.lang.String[]{ "darr", "8595" }, new java.lang.String[]{ "harr", "8596" }, new java.lang.String[]{ "crarr", "8629" }, new java.lang.String[]{ "lArr", "8656" }, new java.lang.String[]{ "uArr", "8657" }, new java.lang.String[]{ "rArr", "8658" }, new java.lang.String[]{ "dArr", "8659" }, new java.lang.String[]{ "hArr", "8660" }, new java.lang.String[]{ "forall", "8704" }, new java.lang.String[]{ "part", "8706" }, new java.lang.String[]{ "exist", "8707" }, new java.lang.String[]{ "empty", "8709" }, new java.lang.String[]{ "nabla", "8711" }, new java.lang.String[]{ "isin", "8712" }, new java.lang.String[]{ "notin", "8713" }, new java.lang.String[]{ "ni", "8715" }, new java.lang.String[]{ "prod", "8719" }, new java.lang.String[]{ "sum", "8721" }, new java.lang.String[]{ "minus", "8722" }, new java.lang.String[]{ "lowast", "8727" }, new java.lang.String[]{ "radic", "8730" }, new java.lang.String[]{ "prop", "8733" }, new java.lang.String[]{ "infin", "8734" }, new java.lang.String[]{ "ang", "8736" }, new java.lang.String[]{ "and", "8743" }, new java.lang.String[]{ "or", "8744" }, new java.lang.String[]{ "cap", "8745" }, new java.lang.String[]{ "cup", "8746" }, new java.lang.String[]{ "int", "8747" }, new java.lang.String[]{ "there4", "8756" }, new java.lang.String[]{ "sim", "8764" }, new java.lang.String[]{ "cong", "8773" }, new java.lang.String[]{ "asymp", "8776" }, new java.lang.String[]{ "ne", "8800" }, new java.lang.String[]{ "equiv", "8801" }, new java.lang.String[]{ "le", "8804" }, new java.lang.String[]{ "ge", "8805" }, new java.lang.String[]{ "sub", "8834" }, new java.lang.String[]{ "sup", "8835" }, new java.lang.String[]{ "sube", "8838" }, new java.lang.String[]{ "supe", "8839" }, new java.lang.String[]{ "oplus", "8853" }, new java.lang.String[]{ "otimes", "8855" }, new java.lang.String[]{ "perp", "8869" }, new java.lang.String[]{ "sdot", "8901" }, new java.lang.String[]{ "lceil", "8968" }, new java.lang.String[]{ "rceil", "8969" }, new java.lang.String[]{ "lfloor", "8970" }, new java.lang.String[]{ "rfloor", "8971" }, new java.lang.String[]{ "lang", "9001" }, new java.lang.String[]{ "rang", "9002" }, new java.lang.String[]{ "loz", "9674" }, new java.lang.String[]{ "spades", "9824" }, new java.lang.String[]{ "clubs", "9827" }, new java.lang.String[]{ "hearts", "9829" }, new java.lang.String[]{ "diams", "9830" }, new java.lang.String[]{ "OElig", "338" }, new java.lang.String[]{ "oelig", "339" }, new java.lang.String[]{ "Scaron", "352" }, new java.lang.String[]{ "scaron", "353" }, new java.lang.String[]{ "Yuml", "376" }, new java.lang.String[]{ "circ", "710" }, new java.lang.String[]{ "tilde", "732" }, new java.lang.String[]{ "ensp", "8194" }, new java.lang.String[]{ "emsp", "8195" }, new java.lang.String[]{ "thinsp", "8201" }, new java.lang.String[]{ "zwnj", "8204" }, new java.lang.String[]{ "zwj", "8205" }, new java.lang.String[]{ "lrm", "8206" }, new java.lang.String[]{ "rlm", "8207" }, new java.lang.String[]{ "ndash", "8211" }, new java.lang.String[]{ "mdash", "8212" }, new java.lang.String[]{ "lsquo", "8216" }, new java.lang.String[]{ "rsquo", "8217" }, new java.lang.String[]{ "sbquo", "8218" }, new java.lang.String[]{ "ldquo", "8220" }, new java.lang.String[]{ "rdquo", "8221" }, new java.lang.String[]{ "bdquo", "8222" }, new java.lang.String[]{ "dagger", "8224" }, new java.lang.String[]{ "Dagger", "8225" }, new java.lang.String[]{ "permil", "8240" }, new java.lang.String[]{ "lsaquo", "8249" }, new java.lang.String[]{ "rsaquo", "8250" }, new java.lang.String[]{ "euro", "8364" } };

    public static final org.apache.commons.lang.Entities XML;

    public static final org.apache.commons.lang.Entities HTML32;

    public static final org.apache.commons.lang.Entities HTML40;

    static {
        XML = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.APOS_ARRAY);
    }

    static {
        HTML32 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
    }

    static {
        HTML40 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.fillWithHtml40Entities(org.apache.commons.lang.Entities.HTML40);
    }

    static void fillWithHtml40Entities(org.apache.commons.lang.Entities entities) {
        entities.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.HTML40_ARRAY);
    }

    static interface EntityMap {
        void add(java.lang.String name, int value);

        java.lang.String name(int value);

        int value(java.lang.String name);
    }

    static class PrimitiveEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        private java.util.Map mapNameToValue = new java.util.HashMap();

        private org.apache.commons.lang.IntHashMap mapValueToName = new org.apache.commons.lang.IntHashMap();

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(value, name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(value)));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    abstract static class MapIntMap implements org.apache.commons.lang.Entities.EntityMap {
        protected java.util.Map mapNameToValue;

        protected java.util.Map mapValueToName;

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(new java.lang.Integer(value), name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(new java.lang.Integer(value))));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    static class HashEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public HashEntityMap() {
            mapNameToValue = new java.util.HashMap();
            mapValueToName = new java.util.HashMap();
        }
    }

    static class TreeEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public TreeEntityMap() {
            mapNameToValue = new java.util.TreeMap();
            mapValueToName = new java.util.TreeMap();
        }
    }

    static class LookupEntityMap extends org.apache.commons.lang.Entities.PrimitiveEntityMap {
        private java.lang.String[] lookupTable;

        private int LOOKUP_TABLE_SIZE = 256;

        public java.lang.String name(int value) {
            if (value < (LOOKUP_TABLE_SIZE)) {
                return lookupTable()[value];
            }
            return super.name(value);
        }

        private java.lang.String[] lookupTable() {
            if ((lookupTable) == null) {
                createLookupTable();
            }
            return lookupTable;
        }

        private void createLookupTable() {
            lookupTable = new java.lang.String[LOOKUP_TABLE_SIZE];
            for (int i = 0; i < (LOOKUP_TABLE_SIZE); ++i) {
                lookupTable[i] = super.name(i);
            }
        }
    }

    static class ArrayEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        protected int growBy = 100;

        protected int size = 0;

        protected java.lang.String[] names;

        protected int[] values;

        public ArrayEntityMap() {
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public ArrayEntityMap(int growBy) {
            this.growBy = growBy;
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            names[size] = name;
            values[size] = value;
            (size)++;
        }

        protected void ensureCapacity(int capacity) {
            if (capacity > (names.length)) {
                int newSize = java.lang.Math.max(capacity, ((size) + (growBy)));
                java.lang.String[] newNames = new java.lang.String[newSize];
                java.lang.System.arraycopy(names, 0, newNames, 0, size);
                names = newNames;
                int[] newValues = new int[newSize];
                java.lang.System.arraycopy(values, 0, newValues, 0, size);
                values = newValues;
            }
        }

        public java.lang.String name(int value) {
            for (int i = 0; i < (size); ++i) {
                if ((values[i]) == value) {
                    return names[i];
                }
            }
            return null;
        }

        public int value(java.lang.String name) {
            for (int i = 0; i < (size); ++i) {
                if (names[i].equals(name)) {
                    return values[i];
                }
            }
            return -1;
        }
    }

    static class BinaryEntityMap extends org.apache.commons.lang.Entities.ArrayEntityMap {
        public BinaryEntityMap() {
            super();
        }

        public BinaryEntityMap(int growBy) {
            super(growBy);
        }

        private int binarySearch(int key) {
            int low = 0;
            int high = (size) - 1;
            while (low <= high) {
                int mid = (low + high) >> 1;
                int midVal = values[mid];
                if (midVal < key) {
                    low = mid + 1;
                }else
                    if (midVal > key) {
                        high = mid - 1;
                    }else {
                        return mid;
                    }

            } 
            return -(low + 1);
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            int insertAt = binarySearch(value);
            if (insertAt > 0) {
                return;
            }
            insertAt = -(insertAt + 1);
            java.lang.System.arraycopy(values, insertAt, values, (insertAt + 1), ((size) - insertAt));
            values[insertAt] = value;
            java.lang.System.arraycopy(names, insertAt, names, (insertAt + 1), ((size) - insertAt));
            names[insertAt] = name;
            (size)++;
        }

        public java.lang.String name(int value) {
            int index = binarySearch(value);
            if (index < 0) {
                return null;
            }
            return names[index];
        }
    }

    org.apache.commons.lang.Entities.EntityMap map = new org.apache.commons.lang.Entities.LookupEntityMap();

    public void addEntities(java.lang.String[][] entityArray) {
        for (int i = 0; i < (entityArray.length); ++i) {
            addEntity(entityArray[i][0], java.lang.Integer.parseInt(entityArray[i][1]));
        }
    }

    public void addEntity(java.lang.String name, int value) {
        map.add(name, value);
    }

    public java.lang.String entityName(int value) {
        return map.name(value);
    }

    public int entityValue(java.lang.String name) {
        return map.value(name);
    }

    public java.lang.String escape(java.lang.String str) {
        java.lang.StringBuffer buf = new java.lang.StringBuffer(((str.length()) * 2));
        int i;
        for (i = 0; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            java.lang.String entityName = this.entityName(ch);
            if (entityName == null) {
                if (ch > 127) {
                    int intValue = ch;
                    buf.append("&#");
                    buf.append(intValue);
                    buf.append(';');
                }else {
                    buf.append(ch);
                }
            }else {
                buf.append('&');
                buf.append(entityName);
                buf.append(';');
            }
        }
        return buf.toString();
    }

    public void escape(java.io.Writer writer, java.lang.String str) throws java.io.IOException {
        int len = str.length();
        for (int i = 0; i < len; i++) {
            char c = str.charAt(i);
            java.lang.String entityName = this.entityName(c);
            if (entityName == null) {
                if (c > 127) {
                    writer.write("&#");
                    writer.write(java.lang.Integer.toString(c, 10));
                    writer.write(';');
                }else {
                    writer.write(c);
                }
            }else {
                writer.write('&');
                writer.write(entityName);
                writer.write(';');
            }
        }
    }

    public java.lang.String unescape(java.lang.String str) {
        int firstAmp = str.indexOf('&');
        if (firstAmp < 0) {
            return str;
        }
        java.lang.StringBuffer buf = new java.lang.StringBuffer(str.length());
        buf.append(str.substring(0, firstAmp));
        for (int i = firstAmp; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            if (ch == '&') {
                int semi = str.indexOf(';', (i + 1));
                if (semi == (-1)) {
                    buf.append(ch);
                    continue;
                }
                int amph = str.indexOf('&', (i + 1));
                if ((amph != (-1)) && (amph < semi)) {
                    buf.append(ch);
                    continue;
                }
                java.lang.String entityName = str.substring((i + 1), semi);
                int entityValue;
                if ((entityName.length()) == 0) {
                    entityValue = -1;
                }else
                    if ((entityName.charAt(0)) == '#') {
                        if ((entityName.length()) == 1) {
                            entityValue = -1;
                        }else {
                            char charAt1 = entityName.charAt(1);
                            try {
                                boolean spoonDefaultValue = false;
                                try {
                                    spoonDefaultValue = true;
                                } catch (java.lang.Exception __NopolProcessorException) {
                                }
                                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                                if (fr.inria.lille.commons.trace.RuntimeValues.instance(13).isEnabled()) {
                                    fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectionStarts();
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("charAt1",charAt1);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.HTML32",org.apache.commons.lang.Entities.HTML32);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("ch",ch);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.ISO8859_1_ARRAY",org.apache.commons.lang.Entities.ISO8859_1_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("(charAt1 == 'x') || (charAt1 == 'X')",(charAt1 == 'x') || (charAt1 == 'X'));} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.HTML40",org.apache.commons.lang.Entities.HTML40);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("amph",amph);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.APOS_ARRAY",org.apache.commons.lang.Entities.APOS_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.BASIC_ARRAY",org.apache.commons.lang.Entities.BASIC_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("firstAmp",firstAmp);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("str",str);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.XML",org.apache.commons.lang.Entities.XML);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("buf",buf);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("(charAt1 == 'x')",(charAt1 == 'x'));} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.this.map",org.apache.commons.lang.Entities.this.map);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("(charAt1 == 'X')",(charAt1 == 'X'));} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("entityName",entityName);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("'x'",'x');} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("'X'",'X');} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("semi",semi);} catch (Exception ex1) {ex1.printStackTrace();};
                                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectInput("org.apache.commons.lang.Entities.HTML40_ARRAY",org.apache.commons.lang.Entities.HTML40_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                                    fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectOutput(runtimeAngelicValue);
                                    fr.inria.lille.commons.trace.RuntimeValues.instance(13).collectionEnds();
                                }
                                if (runtimeAngelicValue) if ((charAt1 == 'x') || (charAt1 == 'X')) {
                                    entityValue = java.lang.Integer.valueOf(entityName.substring(2), 16).intValue();
                                }else {
                                    entityValue = java.lang.Integer.parseInt(entityName.substring(1));
                                }
                            } catch (java.lang.NumberFormatException ex) {
                                entityValue = -1;
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityName);
                    }

                if (entityValue == (-1)) {
                    buf.append('&');
                    buf.append(entityName);
                    buf.append(';');
                }else {
                    buf.append(((char) (entityValue)));
                }
                i = semi;
            }else {
                buf.append(ch);
            }
        }
        return buf.toString();
    }

    public void unescape(java.io.Writer writer, java.lang.String string) throws java.io.IOException {
        int firstAmp = string.indexOf('&');
        if (firstAmp < 0) {
            writer.write(string);
            return;
        }
        writer.write(string, 0, firstAmp);
        int len = string.length();
        for (int i = firstAmp; i < len; i++) {
            char c = string.charAt(i);
            if (c == '&') {
                int nextIdx = i + 1;
                int semiColonIdx = string.indexOf(';', nextIdx);
                if (semiColonIdx == (-1)) {
                    writer.write(c);
                    continue;
                }
                int amphersandIdx = string.indexOf('&', (i + 1));
                if ((amphersandIdx != (-1)) && (amphersandIdx < semiColonIdx)) {
                    writer.write(c);
                    continue;
                }
                java.lang.String entityContent = string.substring(nextIdx, semiColonIdx);
                int entityValue = -1;
                int entityContentLen = entityContent.length();
                if (entityContentLen > 0) {
                    if ((entityContent.charAt(0)) == '#') {
                        if (entityContentLen > 1) {
                            char isHexChar = entityContent.charAt(1);
                            try {
                                switch (isHexChar) {
                                    case 'X' :
                                    case 'x' :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(2), 16);
                                        }
                                    default :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(1), 10);
                                        }
                                }
                            } catch (java.lang.NumberFormatException e) {
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityContent);
                    }
                }
                if (entityValue == (-1)) {
                    writer.write('&');
                    writer.write(entityContent);
                    writer.write(';');
                }else {
                    writer.write(entityValue);
                }
                i = semiColonIdx;
            }else {
                writer.write(c);
            }
        }
    }
}
18:27:39.922 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
18:27:39.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:39.937 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:40.315 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[噸]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:40.318 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[噸]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[噸]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:40.319 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:40.319 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[噸]>]
18:27:40.320 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:845.
18:27:40.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
18:27:40.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:843 which is executed by 3 tests
-2037470238
18:27:40.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
18:27:40.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:840 which is executed by 3 tests
-2037470238
18:27:40.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:40.606 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:40.989 [pool-59-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Entities.java:380: error: variable entityValue might not have been initialized
                if (entityValue == (-1)) {
                    ^
18:27:41.066 [pool-59-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class Entities {
    private static final java.lang.String[][] BASIC_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "quot", "34" }, new java.lang.String[]{ "amp", "38" }, new java.lang.String[]{ "lt", "60" }, new java.lang.String[]{ "gt", "62" } };

    private static final java.lang.String[][] APOS_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "apos", "39" } };

    static final java.lang.String[][] ISO8859_1_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "nbsp", "160" }, new java.lang.String[]{ "iexcl", "161" }, new java.lang.String[]{ "cent", "162" }, new java.lang.String[]{ "pound", "163" }, new java.lang.String[]{ "curren", "164" }, new java.lang.String[]{ "yen", "165" }, new java.lang.String[]{ "brvbar", "166" }, new java.lang.String[]{ "sect", "167" }, new java.lang.String[]{ "uml", "168" }, new java.lang.String[]{ "copy", "169" }, new java.lang.String[]{ "ordf", "170" }, new java.lang.String[]{ "laquo", "171" }, new java.lang.String[]{ "not", "172" }, new java.lang.String[]{ "shy", "173" }, new java.lang.String[]{ "reg", "174" }, new java.lang.String[]{ "macr", "175" }, new java.lang.String[]{ "deg", "176" }, new java.lang.String[]{ "plusmn", "177" }, new java.lang.String[]{ "sup2", "178" }, new java.lang.String[]{ "sup3", "179" }, new java.lang.String[]{ "acute", "180" }, new java.lang.String[]{ "micro", "181" }, new java.lang.String[]{ "para", "182" }, new java.lang.String[]{ "middot", "183" }, new java.lang.String[]{ "cedil", "184" }, new java.lang.String[]{ "sup1", "185" }, new java.lang.String[]{ "ordm", "186" }, new java.lang.String[]{ "raquo", "187" }, new java.lang.String[]{ "frac14", "188" }, new java.lang.String[]{ "frac12", "189" }, new java.lang.String[]{ "frac34", "190" }, new java.lang.String[]{ "iquest", "191" }, new java.lang.String[]{ "Agrave", "192" }, new java.lang.String[]{ "Aacute", "193" }, new java.lang.String[]{ "Acirc", "194" }, new java.lang.String[]{ "Atilde", "195" }, new java.lang.String[]{ "Auml", "196" }, new java.lang.String[]{ "Aring", "197" }, new java.lang.String[]{ "AElig", "198" }, new java.lang.String[]{ "Ccedil", "199" }, new java.lang.String[]{ "Egrave", "200" }, new java.lang.String[]{ "Eacute", "201" }, new java.lang.String[]{ "Ecirc", "202" }, new java.lang.String[]{ "Euml", "203" }, new java.lang.String[]{ "Igrave", "204" }, new java.lang.String[]{ "Iacute", "205" }, new java.lang.String[]{ "Icirc", "206" }, new java.lang.String[]{ "Iuml", "207" }, new java.lang.String[]{ "ETH", "208" }, new java.lang.String[]{ "Ntilde", "209" }, new java.lang.String[]{ "Ograve", "210" }, new java.lang.String[]{ "Oacute", "211" }, new java.lang.String[]{ "Ocirc", "212" }, new java.lang.String[]{ "Otilde", "213" }, new java.lang.String[]{ "Ouml", "214" }, new java.lang.String[]{ "times", "215" }, new java.lang.String[]{ "Oslash", "216" }, new java.lang.String[]{ "Ugrave", "217" }, new java.lang.String[]{ "Uacute", "218" }, new java.lang.String[]{ "Ucirc", "219" }, new java.lang.String[]{ "Uuml", "220" }, new java.lang.String[]{ "Yacute", "221" }, new java.lang.String[]{ "THORN", "222" }, new java.lang.String[]{ "szlig", "223" }, new java.lang.String[]{ "agrave", "224" }, new java.lang.String[]{ "aacute", "225" }, new java.lang.String[]{ "acirc", "226" }, new java.lang.String[]{ "atilde", "227" }, new java.lang.String[]{ "auml", "228" }, new java.lang.String[]{ "aring", "229" }, new java.lang.String[]{ "aelig", "230" }, new java.lang.String[]{ "ccedil", "231" }, new java.lang.String[]{ "egrave", "232" }, new java.lang.String[]{ "eacute", "233" }, new java.lang.String[]{ "ecirc", "234" }, new java.lang.String[]{ "euml", "235" }, new java.lang.String[]{ "igrave", "236" }, new java.lang.String[]{ "iacute", "237" }, new java.lang.String[]{ "icirc", "238" }, new java.lang.String[]{ "iuml", "239" }, new java.lang.String[]{ "eth", "240" }, new java.lang.String[]{ "ntilde", "241" }, new java.lang.String[]{ "ograve", "242" }, new java.lang.String[]{ "oacute", "243" }, new java.lang.String[]{ "ocirc", "244" }, new java.lang.String[]{ "otilde", "245" }, new java.lang.String[]{ "ouml", "246" }, new java.lang.String[]{ "divide", "247" }, new java.lang.String[]{ "oslash", "248" }, new java.lang.String[]{ "ugrave", "249" }, new java.lang.String[]{ "uacute", "250" }, new java.lang.String[]{ "ucirc", "251" }, new java.lang.String[]{ "uuml", "252" }, new java.lang.String[]{ "yacute", "253" }, new java.lang.String[]{ "thorn", "254" }, new java.lang.String[]{ "yuml", "255" } };

    static final java.lang.String[][] HTML40_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "fnof", "402" }, new java.lang.String[]{ "Alpha", "913" }, new java.lang.String[]{ "Beta", "914" }, new java.lang.String[]{ "Gamma", "915" }, new java.lang.String[]{ "Delta", "916" }, new java.lang.String[]{ "Epsilon", "917" }, new java.lang.String[]{ "Zeta", "918" }, new java.lang.String[]{ "Eta", "919" }, new java.lang.String[]{ "Theta", "920" }, new java.lang.String[]{ "Iota", "921" }, new java.lang.String[]{ "Kappa", "922" }, new java.lang.String[]{ "Lambda", "923" }, new java.lang.String[]{ "Mu", "924" }, new java.lang.String[]{ "Nu", "925" }, new java.lang.String[]{ "Xi", "926" }, new java.lang.String[]{ "Omicron", "927" }, new java.lang.String[]{ "Pi", "928" }, new java.lang.String[]{ "Rho", "929" }, new java.lang.String[]{ "Sigma", "931" }, new java.lang.String[]{ "Tau", "932" }, new java.lang.String[]{ "Upsilon", "933" }, new java.lang.String[]{ "Phi", "934" }, new java.lang.String[]{ "Chi", "935" }, new java.lang.String[]{ "Psi", "936" }, new java.lang.String[]{ "Omega", "937" }, new java.lang.String[]{ "alpha", "945" }, new java.lang.String[]{ "beta", "946" }, new java.lang.String[]{ "gamma", "947" }, new java.lang.String[]{ "delta", "948" }, new java.lang.String[]{ "epsilon", "949" }, new java.lang.String[]{ "zeta", "950" }, new java.lang.String[]{ "eta", "951" }, new java.lang.String[]{ "theta", "952" }, new java.lang.String[]{ "iota", "953" }, new java.lang.String[]{ "kappa", "954" }, new java.lang.String[]{ "lambda", "955" }, new java.lang.String[]{ "mu", "956" }, new java.lang.String[]{ "nu", "957" }, new java.lang.String[]{ "xi", "958" }, new java.lang.String[]{ "omicron", "959" }, new java.lang.String[]{ "pi", "960" }, new java.lang.String[]{ "rho", "961" }, new java.lang.String[]{ "sigmaf", "962" }, new java.lang.String[]{ "sigma", "963" }, new java.lang.String[]{ "tau", "964" }, new java.lang.String[]{ "upsilon", "965" }, new java.lang.String[]{ "phi", "966" }, new java.lang.String[]{ "chi", "967" }, new java.lang.String[]{ "psi", "968" }, new java.lang.String[]{ "omega", "969" }, new java.lang.String[]{ "thetasym", "977" }, new java.lang.String[]{ "upsih", "978" }, new java.lang.String[]{ "piv", "982" }, new java.lang.String[]{ "bull", "8226" }, new java.lang.String[]{ "hellip", "8230" }, new java.lang.String[]{ "prime", "8242" }, new java.lang.String[]{ "Prime", "8243" }, new java.lang.String[]{ "oline", "8254" }, new java.lang.String[]{ "frasl", "8260" }, new java.lang.String[]{ "weierp", "8472" }, new java.lang.String[]{ "image", "8465" }, new java.lang.String[]{ "real", "8476" }, new java.lang.String[]{ "trade", "8482" }, new java.lang.String[]{ "alefsym", "8501" }, new java.lang.String[]{ "larr", "8592" }, new java.lang.String[]{ "uarr", "8593" }, new java.lang.String[]{ "rarr", "8594" }, new java.lang.String[]{ "darr", "8595" }, new java.lang.String[]{ "harr", "8596" }, new java.lang.String[]{ "crarr", "8629" }, new java.lang.String[]{ "lArr", "8656" }, new java.lang.String[]{ "uArr", "8657" }, new java.lang.String[]{ "rArr", "8658" }, new java.lang.String[]{ "dArr", "8659" }, new java.lang.String[]{ "hArr", "8660" }, new java.lang.String[]{ "forall", "8704" }, new java.lang.String[]{ "part", "8706" }, new java.lang.String[]{ "exist", "8707" }, new java.lang.String[]{ "empty", "8709" }, new java.lang.String[]{ "nabla", "8711" }, new java.lang.String[]{ "isin", "8712" }, new java.lang.String[]{ "notin", "8713" }, new java.lang.String[]{ "ni", "8715" }, new java.lang.String[]{ "prod", "8719" }, new java.lang.String[]{ "sum", "8721" }, new java.lang.String[]{ "minus", "8722" }, new java.lang.String[]{ "lowast", "8727" }, new java.lang.String[]{ "radic", "8730" }, new java.lang.String[]{ "prop", "8733" }, new java.lang.String[]{ "infin", "8734" }, new java.lang.String[]{ "ang", "8736" }, new java.lang.String[]{ "and", "8743" }, new java.lang.String[]{ "or", "8744" }, new java.lang.String[]{ "cap", "8745" }, new java.lang.String[]{ "cup", "8746" }, new java.lang.String[]{ "int", "8747" }, new java.lang.String[]{ "there4", "8756" }, new java.lang.String[]{ "sim", "8764" }, new java.lang.String[]{ "cong", "8773" }, new java.lang.String[]{ "asymp", "8776" }, new java.lang.String[]{ "ne", "8800" }, new java.lang.String[]{ "equiv", "8801" }, new java.lang.String[]{ "le", "8804" }, new java.lang.String[]{ "ge", "8805" }, new java.lang.String[]{ "sub", "8834" }, new java.lang.String[]{ "sup", "8835" }, new java.lang.String[]{ "sube", "8838" }, new java.lang.String[]{ "supe", "8839" }, new java.lang.String[]{ "oplus", "8853" }, new java.lang.String[]{ "otimes", "8855" }, new java.lang.String[]{ "perp", "8869" }, new java.lang.String[]{ "sdot", "8901" }, new java.lang.String[]{ "lceil", "8968" }, new java.lang.String[]{ "rceil", "8969" }, new java.lang.String[]{ "lfloor", "8970" }, new java.lang.String[]{ "rfloor", "8971" }, new java.lang.String[]{ "lang", "9001" }, new java.lang.String[]{ "rang", "9002" }, new java.lang.String[]{ "loz", "9674" }, new java.lang.String[]{ "spades", "9824" }, new java.lang.String[]{ "clubs", "9827" }, new java.lang.String[]{ "hearts", "9829" }, new java.lang.String[]{ "diams", "9830" }, new java.lang.String[]{ "OElig", "338" }, new java.lang.String[]{ "oelig", "339" }, new java.lang.String[]{ "Scaron", "352" }, new java.lang.String[]{ "scaron", "353" }, new java.lang.String[]{ "Yuml", "376" }, new java.lang.String[]{ "circ", "710" }, new java.lang.String[]{ "tilde", "732" }, new java.lang.String[]{ "ensp", "8194" }, new java.lang.String[]{ "emsp", "8195" }, new java.lang.String[]{ "thinsp", "8201" }, new java.lang.String[]{ "zwnj", "8204" }, new java.lang.String[]{ "zwj", "8205" }, new java.lang.String[]{ "lrm", "8206" }, new java.lang.String[]{ "rlm", "8207" }, new java.lang.String[]{ "ndash", "8211" }, new java.lang.String[]{ "mdash", "8212" }, new java.lang.String[]{ "lsquo", "8216" }, new java.lang.String[]{ "rsquo", "8217" }, new java.lang.String[]{ "sbquo", "8218" }, new java.lang.String[]{ "ldquo", "8220" }, new java.lang.String[]{ "rdquo", "8221" }, new java.lang.String[]{ "bdquo", "8222" }, new java.lang.String[]{ "dagger", "8224" }, new java.lang.String[]{ "Dagger", "8225" }, new java.lang.String[]{ "permil", "8240" }, new java.lang.String[]{ "lsaquo", "8249" }, new java.lang.String[]{ "rsaquo", "8250" }, new java.lang.String[]{ "euro", "8364" } };

    public static final org.apache.commons.lang.Entities XML;

    public static final org.apache.commons.lang.Entities HTML32;

    public static final org.apache.commons.lang.Entities HTML40;

    static {
        XML = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.APOS_ARRAY);
    }

    static {
        HTML32 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
    }

    static {
        HTML40 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.fillWithHtml40Entities(org.apache.commons.lang.Entities.HTML40);
    }

    static void fillWithHtml40Entities(org.apache.commons.lang.Entities entities) {
        entities.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.HTML40_ARRAY);
    }

    static interface EntityMap {
        void add(java.lang.String name, int value);

        java.lang.String name(int value);

        int value(java.lang.String name);
    }

    static class PrimitiveEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        private java.util.Map mapNameToValue = new java.util.HashMap();

        private org.apache.commons.lang.IntHashMap mapValueToName = new org.apache.commons.lang.IntHashMap();

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(value, name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(value)));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    abstract static class MapIntMap implements org.apache.commons.lang.Entities.EntityMap {
        protected java.util.Map mapNameToValue;

        protected java.util.Map mapValueToName;

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(new java.lang.Integer(value), name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(new java.lang.Integer(value))));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    static class HashEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public HashEntityMap() {
            mapNameToValue = new java.util.HashMap();
            mapValueToName = new java.util.HashMap();
        }
    }

    static class TreeEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public TreeEntityMap() {
            mapNameToValue = new java.util.TreeMap();
            mapValueToName = new java.util.TreeMap();
        }
    }

    static class LookupEntityMap extends org.apache.commons.lang.Entities.PrimitiveEntityMap {
        private java.lang.String[] lookupTable;

        private int LOOKUP_TABLE_SIZE = 256;

        public java.lang.String name(int value) {
            if (value < (LOOKUP_TABLE_SIZE)) {
                return lookupTable()[value];
            }
            return super.name(value);
        }

        private java.lang.String[] lookupTable() {
            if ((lookupTable) == null) {
                createLookupTable();
            }
            return lookupTable;
        }

        private void createLookupTable() {
            lookupTable = new java.lang.String[LOOKUP_TABLE_SIZE];
            for (int i = 0; i < (LOOKUP_TABLE_SIZE); ++i) {
                lookupTable[i] = super.name(i);
            }
        }
    }

    static class ArrayEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        protected int growBy = 100;

        protected int size = 0;

        protected java.lang.String[] names;

        protected int[] values;

        public ArrayEntityMap() {
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public ArrayEntityMap(int growBy) {
            this.growBy = growBy;
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            names[size] = name;
            values[size] = value;
            (size)++;
        }

        protected void ensureCapacity(int capacity) {
            if (capacity > (names.length)) {
                int newSize = java.lang.Math.max(capacity, ((size) + (growBy)));
                java.lang.String[] newNames = new java.lang.String[newSize];
                java.lang.System.arraycopy(names, 0, newNames, 0, size);
                names = newNames;
                int[] newValues = new int[newSize];
                java.lang.System.arraycopy(values, 0, newValues, 0, size);
                values = newValues;
            }
        }

        public java.lang.String name(int value) {
            for (int i = 0; i < (size); ++i) {
                if ((values[i]) == value) {
                    return names[i];
                }
            }
            return null;
        }

        public int value(java.lang.String name) {
            for (int i = 0; i < (size); ++i) {
                if (names[i].equals(name)) {
                    return values[i];
                }
            }
            return -1;
        }
    }

    static class BinaryEntityMap extends org.apache.commons.lang.Entities.ArrayEntityMap {
        public BinaryEntityMap() {
            super();
        }

        public BinaryEntityMap(int growBy) {
            super(growBy);
        }

        private int binarySearch(int key) {
            int low = 0;
            int high = (size) - 1;
            while (low <= high) {
                int mid = (low + high) >> 1;
                int midVal = values[mid];
                if (midVal < key) {
                    low = mid + 1;
                }else
                    if (midVal > key) {
                        high = mid - 1;
                    }else {
                        return mid;
                    }

            } 
            return -(low + 1);
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            int insertAt = binarySearch(value);
            if (insertAt > 0) {
                return;
            }
            insertAt = -(insertAt + 1);
            java.lang.System.arraycopy(values, insertAt, values, (insertAt + 1), ((size) - insertAt));
            values[insertAt] = value;
            java.lang.System.arraycopy(names, insertAt, names, (insertAt + 1), ((size) - insertAt));
            names[insertAt] = name;
            (size)++;
        }

        public java.lang.String name(int value) {
            int index = binarySearch(value);
            if (index < 0) {
                return null;
            }
            return names[index];
        }
    }

    org.apache.commons.lang.Entities.EntityMap map = new org.apache.commons.lang.Entities.LookupEntityMap();

    public void addEntities(java.lang.String[][] entityArray) {
        for (int i = 0; i < (entityArray.length); ++i) {
            addEntity(entityArray[i][0], java.lang.Integer.parseInt(entityArray[i][1]));
        }
    }

    public void addEntity(java.lang.String name, int value) {
        map.add(name, value);
    }

    public java.lang.String entityName(int value) {
        return map.name(value);
    }

    public int entityValue(java.lang.String name) {
        return map.value(name);
    }

    public java.lang.String escape(java.lang.String str) {
        java.lang.StringBuffer buf = new java.lang.StringBuffer(((str.length()) * 2));
        int i;
        for (i = 0; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            java.lang.String entityName = this.entityName(ch);
            if (entityName == null) {
                if (ch > 127) {
                    int intValue = ch;
                    buf.append("&#");
                    buf.append(intValue);
                    buf.append(';');
                }else {
                    buf.append(ch);
                }
            }else {
                buf.append('&');
                buf.append(entityName);
                buf.append(';');
            }
        }
        return buf.toString();
    }

    public void escape(java.io.Writer writer, java.lang.String str) throws java.io.IOException {
        int len = str.length();
        for (int i = 0; i < len; i++) {
            char c = str.charAt(i);
            java.lang.String entityName = this.entityName(c);
            if (entityName == null) {
                if (c > 127) {
                    writer.write("&#");
                    writer.write(java.lang.Integer.toString(c, 10));
                    writer.write(';');
                }else {
                    writer.write(c);
                }
            }else {
                writer.write('&');
                writer.write(entityName);
                writer.write(';');
            }
        }
    }

    public java.lang.String unescape(java.lang.String str) {
        int firstAmp = str.indexOf('&');
        if (firstAmp < 0) {
            return str;
        }
        java.lang.StringBuffer buf = new java.lang.StringBuffer(str.length());
        buf.append(str.substring(0, firstAmp));
        for (int i = firstAmp; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            if (ch == '&') {
                int semi = str.indexOf(';', (i + 1));
                if (semi == (-1)) {
                    buf.append(ch);
                    continue;
                }
                int amph = str.indexOf('&', (i + 1));
                if ((amph != (-1)) && (amph < semi)) {
                    buf.append(ch);
                    continue;
                }
                java.lang.String entityName = str.substring((i + 1), semi);
                int entityValue;
                if ((entityName.length()) == 0) {
                    entityValue = -1;
                }else
                    if ((entityName.charAt(0)) == '#') {
                        boolean spoonDefaultValue = false;
                        try {
                            spoonDefaultValue = true;
                        } catch (java.lang.Exception __NopolProcessorException) {
                        }
                        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                        if (fr.inria.lille.commons.trace.RuntimeValues.instance(15).isEnabled()) {
                            fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectionStarts();
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.HTML32",org.apache.commons.lang.Entities.HTML32);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("ch",ch);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.ISO8859_1_ARRAY",org.apache.commons.lang.Entities.ISO8859_1_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.HTML40",org.apache.commons.lang.Entities.HTML40);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("amph",amph);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.APOS_ARRAY",org.apache.commons.lang.Entities.APOS_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.BASIC_ARRAY",org.apache.commons.lang.Entities.BASIC_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("firstAmp",firstAmp);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("str",str);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.XML",org.apache.commons.lang.Entities.XML);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("1",1);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("buf",buf);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.this.map",org.apache.commons.lang.Entities.this.map);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("entityName",entityName);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("semi",semi);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectInput("org.apache.commons.lang.Entities.HTML40_ARRAY",org.apache.commons.lang.Entities.HTML40_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                            fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectOutput(runtimeAngelicValue);
                            fr.inria.lille.commons.trace.RuntimeValues.instance(15).collectionEnds();
                        }
                        if (runtimeAngelicValue) if ((entityName.length()) == 1) {
                            entityValue = -1;
                        }else {
                            char charAt1 = entityName.charAt(1);
                            try {
                                if ((charAt1 == 'x') || (charAt1 == 'X')) {
                                    entityValue = java.lang.Integer.valueOf(entityName.substring(2), 16).intValue();
                                }else {
                                    entityValue = java.lang.Integer.parseInt(entityName.substring(1));
                                }
                            } catch (java.lang.NumberFormatException ex) {
                                entityValue = -1;
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityName);
                    }

                if (entityValue == (-1)) {
                    buf.append('&');
                    buf.append(entityName);
                    buf.append(';');
                }else {
                    buf.append(((char) (entityValue)));
                }
                i = semi;
            }else {
                buf.append(ch);
            }
        }
        return buf.toString();
    }

    public void unescape(java.io.Writer writer, java.lang.String string) throws java.io.IOException {
        int firstAmp = string.indexOf('&');
        if (firstAmp < 0) {
            writer.write(string);
            return;
        }
        writer.write(string, 0, firstAmp);
        int len = string.length();
        for (int i = firstAmp; i < len; i++) {
            char c = string.charAt(i);
            if (c == '&') {
                int nextIdx = i + 1;
                int semiColonIdx = string.indexOf(';', nextIdx);
                if (semiColonIdx == (-1)) {
                    writer.write(c);
                    continue;
                }
                int amphersandIdx = string.indexOf('&', (i + 1));
                if ((amphersandIdx != (-1)) && (amphersandIdx < semiColonIdx)) {
                    writer.write(c);
                    continue;
                }
                java.lang.String entityContent = string.substring(nextIdx, semiColonIdx);
                int entityValue = -1;
                int entityContentLen = entityContent.length();
                if (entityContentLen > 0) {
                    if ((entityContent.charAt(0)) == '#') {
                        if (entityContentLen > 1) {
                            char isHexChar = entityContent.charAt(1);
                            try {
                                switch (isHexChar) {
                                    case 'X' :
                                    case 'x' :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(2), 16);
                                        }
                                    default :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(1), 10);
                                        }
                                }
                            } catch (java.lang.NumberFormatException e) {
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityContent);
                    }
                }
                if (entityValue == (-1)) {
                    writer.write('&');
                    writer.write(entityContent);
                    writer.write(';');
                }else {
                    writer.write(entityValue);
                }
                i = semiColonIdx;
            }else {
                writer.write(c);
            }
        }
    }
}
18:27:41.067 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
18:27:41.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:41.082 [pool-62-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:41.435 [pool-63-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:41.438 [pool-64-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:41.438 [pool-61-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:41.438 [pool-61-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:41.439 [pool-61-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:840.
18:27:41.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
18:27:41.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.LocaleUtils:192 which is executed by 4 tests
-723213736
18:27:41.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
18:27:41.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:862 which is executed by 5 tests
-2037470238
18:27:41.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:41.697 [pool-66-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:42.041 [pool-67-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:42.044 [pool-68-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:42.045 [pool-65-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[]>]
18:27:42.045 [pool-65-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:42.045 [pool-65-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:862.
18:27:42.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
18:27:42.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:869 which is executed by 6 tests
-2037470238
18:27:42.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
18:27:42.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:865 which is executed by 6 tests
-2037470238
18:27:42.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
18:27:42.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:864 which is executed by 6 tests
-2037470238
18:27:42.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:42.452 [pool-70-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&]#12345678;> but was:<[慎]#12345678;>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:42.865 [pool-71-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&]#12345678;> but was:<[慎]#12345678;>]
junit.framework.ComparisonFailure: expected:<[&]#12345678;> but was:<[慎]#12345678;>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:42.868 [pool-72-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:42.869 [pool-69-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&]#12345678;> but was:<[慎]#12345678;>]
18:27:42.869 [pool-69-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:42.870 [pool-69-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:864.
18:27:42.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
18:27:42.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:857 which is executed by 6 tests
-2037470238
18:27:43.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.046 [pool-74-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.404 [pool-75-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.406 [pool-76-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:43.410 [pool-73-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[]>]
18:27:43.411 [pool-73-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:43.411 [pool-73-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:857.
18:27:43.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.423 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.744 [pool-79-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.747 [pool-80-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:43.748 [pool-77-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:43.748 [pool-77-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:43.748 [pool-77-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:857.
18:27:43.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
18:27:43.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:839 which is executed by 6 tests
-2037470238
18:27:43.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:43.893 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:44.192 [pool-81-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Entities.java:381: error: variable entityValue might not have been initialized
                if (entityValue == (-1)) {
                    ^
18:27:44.263 [pool-81-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class Entities {
    private static final java.lang.String[][] BASIC_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "quot", "34" }, new java.lang.String[]{ "amp", "38" }, new java.lang.String[]{ "lt", "60" }, new java.lang.String[]{ "gt", "62" } };

    private static final java.lang.String[][] APOS_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "apos", "39" } };

    static final java.lang.String[][] ISO8859_1_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "nbsp", "160" }, new java.lang.String[]{ "iexcl", "161" }, new java.lang.String[]{ "cent", "162" }, new java.lang.String[]{ "pound", "163" }, new java.lang.String[]{ "curren", "164" }, new java.lang.String[]{ "yen", "165" }, new java.lang.String[]{ "brvbar", "166" }, new java.lang.String[]{ "sect", "167" }, new java.lang.String[]{ "uml", "168" }, new java.lang.String[]{ "copy", "169" }, new java.lang.String[]{ "ordf", "170" }, new java.lang.String[]{ "laquo", "171" }, new java.lang.String[]{ "not", "172" }, new java.lang.String[]{ "shy", "173" }, new java.lang.String[]{ "reg", "174" }, new java.lang.String[]{ "macr", "175" }, new java.lang.String[]{ "deg", "176" }, new java.lang.String[]{ "plusmn", "177" }, new java.lang.String[]{ "sup2", "178" }, new java.lang.String[]{ "sup3", "179" }, new java.lang.String[]{ "acute", "180" }, new java.lang.String[]{ "micro", "181" }, new java.lang.String[]{ "para", "182" }, new java.lang.String[]{ "middot", "183" }, new java.lang.String[]{ "cedil", "184" }, new java.lang.String[]{ "sup1", "185" }, new java.lang.String[]{ "ordm", "186" }, new java.lang.String[]{ "raquo", "187" }, new java.lang.String[]{ "frac14", "188" }, new java.lang.String[]{ "frac12", "189" }, new java.lang.String[]{ "frac34", "190" }, new java.lang.String[]{ "iquest", "191" }, new java.lang.String[]{ "Agrave", "192" }, new java.lang.String[]{ "Aacute", "193" }, new java.lang.String[]{ "Acirc", "194" }, new java.lang.String[]{ "Atilde", "195" }, new java.lang.String[]{ "Auml", "196" }, new java.lang.String[]{ "Aring", "197" }, new java.lang.String[]{ "AElig", "198" }, new java.lang.String[]{ "Ccedil", "199" }, new java.lang.String[]{ "Egrave", "200" }, new java.lang.String[]{ "Eacute", "201" }, new java.lang.String[]{ "Ecirc", "202" }, new java.lang.String[]{ "Euml", "203" }, new java.lang.String[]{ "Igrave", "204" }, new java.lang.String[]{ "Iacute", "205" }, new java.lang.String[]{ "Icirc", "206" }, new java.lang.String[]{ "Iuml", "207" }, new java.lang.String[]{ "ETH", "208" }, new java.lang.String[]{ "Ntilde", "209" }, new java.lang.String[]{ "Ograve", "210" }, new java.lang.String[]{ "Oacute", "211" }, new java.lang.String[]{ "Ocirc", "212" }, new java.lang.String[]{ "Otilde", "213" }, new java.lang.String[]{ "Ouml", "214" }, new java.lang.String[]{ "times", "215" }, new java.lang.String[]{ "Oslash", "216" }, new java.lang.String[]{ "Ugrave", "217" }, new java.lang.String[]{ "Uacute", "218" }, new java.lang.String[]{ "Ucirc", "219" }, new java.lang.String[]{ "Uuml", "220" }, new java.lang.String[]{ "Yacute", "221" }, new java.lang.String[]{ "THORN", "222" }, new java.lang.String[]{ "szlig", "223" }, new java.lang.String[]{ "agrave", "224" }, new java.lang.String[]{ "aacute", "225" }, new java.lang.String[]{ "acirc", "226" }, new java.lang.String[]{ "atilde", "227" }, new java.lang.String[]{ "auml", "228" }, new java.lang.String[]{ "aring", "229" }, new java.lang.String[]{ "aelig", "230" }, new java.lang.String[]{ "ccedil", "231" }, new java.lang.String[]{ "egrave", "232" }, new java.lang.String[]{ "eacute", "233" }, new java.lang.String[]{ "ecirc", "234" }, new java.lang.String[]{ "euml", "235" }, new java.lang.String[]{ "igrave", "236" }, new java.lang.String[]{ "iacute", "237" }, new java.lang.String[]{ "icirc", "238" }, new java.lang.String[]{ "iuml", "239" }, new java.lang.String[]{ "eth", "240" }, new java.lang.String[]{ "ntilde", "241" }, new java.lang.String[]{ "ograve", "242" }, new java.lang.String[]{ "oacute", "243" }, new java.lang.String[]{ "ocirc", "244" }, new java.lang.String[]{ "otilde", "245" }, new java.lang.String[]{ "ouml", "246" }, new java.lang.String[]{ "divide", "247" }, new java.lang.String[]{ "oslash", "248" }, new java.lang.String[]{ "ugrave", "249" }, new java.lang.String[]{ "uacute", "250" }, new java.lang.String[]{ "ucirc", "251" }, new java.lang.String[]{ "uuml", "252" }, new java.lang.String[]{ "yacute", "253" }, new java.lang.String[]{ "thorn", "254" }, new java.lang.String[]{ "yuml", "255" } };

    static final java.lang.String[][] HTML40_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "fnof", "402" }, new java.lang.String[]{ "Alpha", "913" }, new java.lang.String[]{ "Beta", "914" }, new java.lang.String[]{ "Gamma", "915" }, new java.lang.String[]{ "Delta", "916" }, new java.lang.String[]{ "Epsilon", "917" }, new java.lang.String[]{ "Zeta", "918" }, new java.lang.String[]{ "Eta", "919" }, new java.lang.String[]{ "Theta", "920" }, new java.lang.String[]{ "Iota", "921" }, new java.lang.String[]{ "Kappa", "922" }, new java.lang.String[]{ "Lambda", "923" }, new java.lang.String[]{ "Mu", "924" }, new java.lang.String[]{ "Nu", "925" }, new java.lang.String[]{ "Xi", "926" }, new java.lang.String[]{ "Omicron", "927" }, new java.lang.String[]{ "Pi", "928" }, new java.lang.String[]{ "Rho", "929" }, new java.lang.String[]{ "Sigma", "931" }, new java.lang.String[]{ "Tau", "932" }, new java.lang.String[]{ "Upsilon", "933" }, new java.lang.String[]{ "Phi", "934" }, new java.lang.String[]{ "Chi", "935" }, new java.lang.String[]{ "Psi", "936" }, new java.lang.String[]{ "Omega", "937" }, new java.lang.String[]{ "alpha", "945" }, new java.lang.String[]{ "beta", "946" }, new java.lang.String[]{ "gamma", "947" }, new java.lang.String[]{ "delta", "948" }, new java.lang.String[]{ "epsilon", "949" }, new java.lang.String[]{ "zeta", "950" }, new java.lang.String[]{ "eta", "951" }, new java.lang.String[]{ "theta", "952" }, new java.lang.String[]{ "iota", "953" }, new java.lang.String[]{ "kappa", "954" }, new java.lang.String[]{ "lambda", "955" }, new java.lang.String[]{ "mu", "956" }, new java.lang.String[]{ "nu", "957" }, new java.lang.String[]{ "xi", "958" }, new java.lang.String[]{ "omicron", "959" }, new java.lang.String[]{ "pi", "960" }, new java.lang.String[]{ "rho", "961" }, new java.lang.String[]{ "sigmaf", "962" }, new java.lang.String[]{ "sigma", "963" }, new java.lang.String[]{ "tau", "964" }, new java.lang.String[]{ "upsilon", "965" }, new java.lang.String[]{ "phi", "966" }, new java.lang.String[]{ "chi", "967" }, new java.lang.String[]{ "psi", "968" }, new java.lang.String[]{ "omega", "969" }, new java.lang.String[]{ "thetasym", "977" }, new java.lang.String[]{ "upsih", "978" }, new java.lang.String[]{ "piv", "982" }, new java.lang.String[]{ "bull", "8226" }, new java.lang.String[]{ "hellip", "8230" }, new java.lang.String[]{ "prime", "8242" }, new java.lang.String[]{ "Prime", "8243" }, new java.lang.String[]{ "oline", "8254" }, new java.lang.String[]{ "frasl", "8260" }, new java.lang.String[]{ "weierp", "8472" }, new java.lang.String[]{ "image", "8465" }, new java.lang.String[]{ "real", "8476" }, new java.lang.String[]{ "trade", "8482" }, new java.lang.String[]{ "alefsym", "8501" }, new java.lang.String[]{ "larr", "8592" }, new java.lang.String[]{ "uarr", "8593" }, new java.lang.String[]{ "rarr", "8594" }, new java.lang.String[]{ "darr", "8595" }, new java.lang.String[]{ "harr", "8596" }, new java.lang.String[]{ "crarr", "8629" }, new java.lang.String[]{ "lArr", "8656" }, new java.lang.String[]{ "uArr", "8657" }, new java.lang.String[]{ "rArr", "8658" }, new java.lang.String[]{ "dArr", "8659" }, new java.lang.String[]{ "hArr", "8660" }, new java.lang.String[]{ "forall", "8704" }, new java.lang.String[]{ "part", "8706" }, new java.lang.String[]{ "exist", "8707" }, new java.lang.String[]{ "empty", "8709" }, new java.lang.String[]{ "nabla", "8711" }, new java.lang.String[]{ "isin", "8712" }, new java.lang.String[]{ "notin", "8713" }, new java.lang.String[]{ "ni", "8715" }, new java.lang.String[]{ "prod", "8719" }, new java.lang.String[]{ "sum", "8721" }, new java.lang.String[]{ "minus", "8722" }, new java.lang.String[]{ "lowast", "8727" }, new java.lang.String[]{ "radic", "8730" }, new java.lang.String[]{ "prop", "8733" }, new java.lang.String[]{ "infin", "8734" }, new java.lang.String[]{ "ang", "8736" }, new java.lang.String[]{ "and", "8743" }, new java.lang.String[]{ "or", "8744" }, new java.lang.String[]{ "cap", "8745" }, new java.lang.String[]{ "cup", "8746" }, new java.lang.String[]{ "int", "8747" }, new java.lang.String[]{ "there4", "8756" }, new java.lang.String[]{ "sim", "8764" }, new java.lang.String[]{ "cong", "8773" }, new java.lang.String[]{ "asymp", "8776" }, new java.lang.String[]{ "ne", "8800" }, new java.lang.String[]{ "equiv", "8801" }, new java.lang.String[]{ "le", "8804" }, new java.lang.String[]{ "ge", "8805" }, new java.lang.String[]{ "sub", "8834" }, new java.lang.String[]{ "sup", "8835" }, new java.lang.String[]{ "sube", "8838" }, new java.lang.String[]{ "supe", "8839" }, new java.lang.String[]{ "oplus", "8853" }, new java.lang.String[]{ "otimes", "8855" }, new java.lang.String[]{ "perp", "8869" }, new java.lang.String[]{ "sdot", "8901" }, new java.lang.String[]{ "lceil", "8968" }, new java.lang.String[]{ "rceil", "8969" }, new java.lang.String[]{ "lfloor", "8970" }, new java.lang.String[]{ "rfloor", "8971" }, new java.lang.String[]{ "lang", "9001" }, new java.lang.String[]{ "rang", "9002" }, new java.lang.String[]{ "loz", "9674" }, new java.lang.String[]{ "spades", "9824" }, new java.lang.String[]{ "clubs", "9827" }, new java.lang.String[]{ "hearts", "9829" }, new java.lang.String[]{ "diams", "9830" }, new java.lang.String[]{ "OElig", "338" }, new java.lang.String[]{ "oelig", "339" }, new java.lang.String[]{ "Scaron", "352" }, new java.lang.String[]{ "scaron", "353" }, new java.lang.String[]{ "Yuml", "376" }, new java.lang.String[]{ "circ", "710" }, new java.lang.String[]{ "tilde", "732" }, new java.lang.String[]{ "ensp", "8194" }, new java.lang.String[]{ "emsp", "8195" }, new java.lang.String[]{ "thinsp", "8201" }, new java.lang.String[]{ "zwnj", "8204" }, new java.lang.String[]{ "zwj", "8205" }, new java.lang.String[]{ "lrm", "8206" }, new java.lang.String[]{ "rlm", "8207" }, new java.lang.String[]{ "ndash", "8211" }, new java.lang.String[]{ "mdash", "8212" }, new java.lang.String[]{ "lsquo", "8216" }, new java.lang.String[]{ "rsquo", "8217" }, new java.lang.String[]{ "sbquo", "8218" }, new java.lang.String[]{ "ldquo", "8220" }, new java.lang.String[]{ "rdquo", "8221" }, new java.lang.String[]{ "bdquo", "8222" }, new java.lang.String[]{ "dagger", "8224" }, new java.lang.String[]{ "Dagger", "8225" }, new java.lang.String[]{ "permil", "8240" }, new java.lang.String[]{ "lsaquo", "8249" }, new java.lang.String[]{ "rsaquo", "8250" }, new java.lang.String[]{ "euro", "8364" } };

    public static final org.apache.commons.lang.Entities XML;

    public static final org.apache.commons.lang.Entities HTML32;

    public static final org.apache.commons.lang.Entities HTML40;

    static {
        XML = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.APOS_ARRAY);
    }

    static {
        HTML32 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
    }

    static {
        HTML40 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.fillWithHtml40Entities(org.apache.commons.lang.Entities.HTML40);
    }

    static void fillWithHtml40Entities(org.apache.commons.lang.Entities entities) {
        entities.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.HTML40_ARRAY);
    }

    static interface EntityMap {
        void add(java.lang.String name, int value);

        java.lang.String name(int value);

        int value(java.lang.String name);
    }

    static class PrimitiveEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        private java.util.Map mapNameToValue = new java.util.HashMap();

        private org.apache.commons.lang.IntHashMap mapValueToName = new org.apache.commons.lang.IntHashMap();

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(value, name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(value)));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    abstract static class MapIntMap implements org.apache.commons.lang.Entities.EntityMap {
        protected java.util.Map mapNameToValue;

        protected java.util.Map mapValueToName;

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(new java.lang.Integer(value), name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(new java.lang.Integer(value))));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    static class HashEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public HashEntityMap() {
            mapNameToValue = new java.util.HashMap();
            mapValueToName = new java.util.HashMap();
        }
    }

    static class TreeEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public TreeEntityMap() {
            mapNameToValue = new java.util.TreeMap();
            mapValueToName = new java.util.TreeMap();
        }
    }

    static class LookupEntityMap extends org.apache.commons.lang.Entities.PrimitiveEntityMap {
        private java.lang.String[] lookupTable;

        private int LOOKUP_TABLE_SIZE = 256;

        public java.lang.String name(int value) {
            if (value < (LOOKUP_TABLE_SIZE)) {
                return lookupTable()[value];
            }
            return super.name(value);
        }

        private java.lang.String[] lookupTable() {
            if ((lookupTable) == null) {
                createLookupTable();
            }
            return lookupTable;
        }

        private void createLookupTable() {
            lookupTable = new java.lang.String[LOOKUP_TABLE_SIZE];
            for (int i = 0; i < (LOOKUP_TABLE_SIZE); ++i) {
                lookupTable[i] = super.name(i);
            }
        }
    }

    static class ArrayEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        protected int growBy = 100;

        protected int size = 0;

        protected java.lang.String[] names;

        protected int[] values;

        public ArrayEntityMap() {
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public ArrayEntityMap(int growBy) {
            this.growBy = growBy;
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            names[size] = name;
            values[size] = value;
            (size)++;
        }

        protected void ensureCapacity(int capacity) {
            if (capacity > (names.length)) {
                int newSize = java.lang.Math.max(capacity, ((size) + (growBy)));
                java.lang.String[] newNames = new java.lang.String[newSize];
                java.lang.System.arraycopy(names, 0, newNames, 0, size);
                names = newNames;
                int[] newValues = new int[newSize];
                java.lang.System.arraycopy(values, 0, newValues, 0, size);
                values = newValues;
            }
        }

        public java.lang.String name(int value) {
            for (int i = 0; i < (size); ++i) {
                if ((values[i]) == value) {
                    return names[i];
                }
            }
            return null;
        }

        public int value(java.lang.String name) {
            for (int i = 0; i < (size); ++i) {
                if (names[i].equals(name)) {
                    return values[i];
                }
            }
            return -1;
        }
    }

    static class BinaryEntityMap extends org.apache.commons.lang.Entities.ArrayEntityMap {
        public BinaryEntityMap() {
            super();
        }

        public BinaryEntityMap(int growBy) {
            super(growBy);
        }

        private int binarySearch(int key) {
            int low = 0;
            int high = (size) - 1;
            while (low <= high) {
                int mid = (low + high) >> 1;
                int midVal = values[mid];
                if (midVal < key) {
                    low = mid + 1;
                }else
                    if (midVal > key) {
                        high = mid - 1;
                    }else {
                        return mid;
                    }

            } 
            return -(low + 1);
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            int insertAt = binarySearch(value);
            if (insertAt > 0) {
                return;
            }
            insertAt = -(insertAt + 1);
            java.lang.System.arraycopy(values, insertAt, values, (insertAt + 1), ((size) - insertAt));
            values[insertAt] = value;
            java.lang.System.arraycopy(names, insertAt, names, (insertAt + 1), ((size) - insertAt));
            names[insertAt] = name;
            (size)++;
        }

        public java.lang.String name(int value) {
            int index = binarySearch(value);
            if (index < 0) {
                return null;
            }
            return names[index];
        }
    }

    org.apache.commons.lang.Entities.EntityMap map = new org.apache.commons.lang.Entities.LookupEntityMap();

    public void addEntities(java.lang.String[][] entityArray) {
        for (int i = 0; i < (entityArray.length); ++i) {
            addEntity(entityArray[i][0], java.lang.Integer.parseInt(entityArray[i][1]));
        }
    }

    public void addEntity(java.lang.String name, int value) {
        map.add(name, value);
    }

    public java.lang.String entityName(int value) {
        return map.name(value);
    }

    public int entityValue(java.lang.String name) {
        return map.value(name);
    }

    public java.lang.String escape(java.lang.String str) {
        java.lang.StringBuffer buf = new java.lang.StringBuffer(((str.length()) * 2));
        int i;
        for (i = 0; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            java.lang.String entityName = this.entityName(ch);
            if (entityName == null) {
                if (ch > 127) {
                    int intValue = ch;
                    buf.append("&#");
                    buf.append(intValue);
                    buf.append(';');
                }else {
                    buf.append(ch);
                }
            }else {
                buf.append('&');
                buf.append(entityName);
                buf.append(';');
            }
        }
        return buf.toString();
    }

    public void escape(java.io.Writer writer, java.lang.String str) throws java.io.IOException {
        int len = str.length();
        for (int i = 0; i < len; i++) {
            char c = str.charAt(i);
            java.lang.String entityName = this.entityName(c);
            if (entityName == null) {
                if (c > 127) {
                    writer.write("&#");
                    writer.write(java.lang.Integer.toString(c, 10));
                    writer.write(';');
                }else {
                    writer.write(c);
                }
            }else {
                writer.write('&');
                writer.write(entityName);
                writer.write(';');
            }
        }
    }

    public java.lang.String unescape(java.lang.String str) {
        int firstAmp = str.indexOf('&');
        if (firstAmp < 0) {
            return str;
        }
        java.lang.StringBuffer buf = new java.lang.StringBuffer(str.length());
        buf.append(str.substring(0, firstAmp));
        for (int i = firstAmp; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            if (ch == '&') {
                int semi = str.indexOf(';', (i + 1));
                if (semi == (-1)) {
                    buf.append(ch);
                    continue;
                }
                int amph = str.indexOf('&', (i + 1));
                if ((amph != (-1)) && (amph < semi)) {
                    buf.append(ch);
                    continue;
                }
                java.lang.String entityName = str.substring((i + 1), semi);
                int entityValue;
                if ((entityName.length()) == 0) {
                    entityValue = -1;
                }else {
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(21).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.HTML32",org.apache.commons.lang.Entities.HTML32);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("ch",ch);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.ISO8859_1_ARRAY",org.apache.commons.lang.Entities.ISO8859_1_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.HTML40",org.apache.commons.lang.Entities.HTML40);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("amph",amph);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.APOS_ARRAY",org.apache.commons.lang.Entities.APOS_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.BASIC_ARRAY",org.apache.commons.lang.Entities.BASIC_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("'#'",'#');} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("firstAmp",firstAmp);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("str",str);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.XML",org.apache.commons.lang.Entities.XML);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("0",0);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("buf",buf);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.this.map",org.apache.commons.lang.Entities.this.map);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("entityName",entityName);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("semi",semi);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.commons.lang.Entities.HTML40_ARRAY",org.apache.commons.lang.Entities.HTML40_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectionEnds();
                    }
                    if (runtimeAngelicValue) if ((entityName.charAt(0)) == '#') {
                        if ((entityName.length()) == 1) {
                            entityValue = -1;
                        }else {
                            char charAt1 = entityName.charAt(1);
                            try {
                                if ((charAt1 == 'x') || (charAt1 == 'X')) {
                                    entityValue = java.lang.Integer.valueOf(entityName.substring(2), 16).intValue();
                                }else {
                                    entityValue = java.lang.Integer.parseInt(entityName.substring(1));
                                }
                            } catch (java.lang.NumberFormatException ex) {
                                entityValue = -1;
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityName);
                    }
                }
                if (entityValue == (-1)) {
                    buf.append('&');
                    buf.append(entityName);
                    buf.append(';');
                }else {
                    buf.append(((char) (entityValue)));
                }
                i = semi;
            }else {
                buf.append(ch);
            }
        }
        return buf.toString();
    }

    public void unescape(java.io.Writer writer, java.lang.String string) throws java.io.IOException {
        int firstAmp = string.indexOf('&');
        if (firstAmp < 0) {
            writer.write(string);
            return;
        }
        writer.write(string, 0, firstAmp);
        int len = string.length();
        for (int i = firstAmp; i < len; i++) {
            char c = string.charAt(i);
            if (c == '&') {
                int nextIdx = i + 1;
                int semiColonIdx = string.indexOf(';', nextIdx);
                if (semiColonIdx == (-1)) {
                    writer.write(c);
                    continue;
                }
                int amphersandIdx = string.indexOf('&', (i + 1));
                if ((amphersandIdx != (-1)) && (amphersandIdx < semiColonIdx)) {
                    writer.write(c);
                    continue;
                }
                java.lang.String entityContent = string.substring(nextIdx, semiColonIdx);
                int entityValue = -1;
                int entityContentLen = entityContent.length();
                if (entityContentLen > 0) {
                    if ((entityContent.charAt(0)) == '#') {
                        if (entityContentLen > 1) {
                            char isHexChar = entityContent.charAt(1);
                            try {
                                switch (isHexChar) {
                                    case 'X' :
                                    case 'x' :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(2), 16);
                                        }
                                    default :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(1), 10);
                                        }
                                }
                            } catch (java.lang.NumberFormatException e) {
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityContent);
                    }
                }
                if (entityValue == (-1)) {
                    writer.write('&');
                    writer.write(entityContent);
                    writer.write(';');
                }else {
                    writer.write(entityValue);
                }
                i = semiColonIdx;
            }else {
                writer.write(c);
            }
        }
    }
}
18:27:44.264 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
18:27:44.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:44.276 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:44.596 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:44.599 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:44.600 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:44.600 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:44.601 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:839.
18:27:44.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
18:27:44.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:837 which is executed by 6 tests
-2037470238
18:27:44.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:44.746 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:45.054 [pool-87-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Entities.java:380: error: variable entityValue might not have been initialized
                if (entityValue == (-1)) {
                    ^
18:27:45.130 [pool-87-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class Entities {
    private static final java.lang.String[][] BASIC_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "quot", "34" }, new java.lang.String[]{ "amp", "38" }, new java.lang.String[]{ "lt", "60" }, new java.lang.String[]{ "gt", "62" } };

    private static final java.lang.String[][] APOS_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "apos", "39" } };

    static final java.lang.String[][] ISO8859_1_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "nbsp", "160" }, new java.lang.String[]{ "iexcl", "161" }, new java.lang.String[]{ "cent", "162" }, new java.lang.String[]{ "pound", "163" }, new java.lang.String[]{ "curren", "164" }, new java.lang.String[]{ "yen", "165" }, new java.lang.String[]{ "brvbar", "166" }, new java.lang.String[]{ "sect", "167" }, new java.lang.String[]{ "uml", "168" }, new java.lang.String[]{ "copy", "169" }, new java.lang.String[]{ "ordf", "170" }, new java.lang.String[]{ "laquo", "171" }, new java.lang.String[]{ "not", "172" }, new java.lang.String[]{ "shy", "173" }, new java.lang.String[]{ "reg", "174" }, new java.lang.String[]{ "macr", "175" }, new java.lang.String[]{ "deg", "176" }, new java.lang.String[]{ "plusmn", "177" }, new java.lang.String[]{ "sup2", "178" }, new java.lang.String[]{ "sup3", "179" }, new java.lang.String[]{ "acute", "180" }, new java.lang.String[]{ "micro", "181" }, new java.lang.String[]{ "para", "182" }, new java.lang.String[]{ "middot", "183" }, new java.lang.String[]{ "cedil", "184" }, new java.lang.String[]{ "sup1", "185" }, new java.lang.String[]{ "ordm", "186" }, new java.lang.String[]{ "raquo", "187" }, new java.lang.String[]{ "frac14", "188" }, new java.lang.String[]{ "frac12", "189" }, new java.lang.String[]{ "frac34", "190" }, new java.lang.String[]{ "iquest", "191" }, new java.lang.String[]{ "Agrave", "192" }, new java.lang.String[]{ "Aacute", "193" }, new java.lang.String[]{ "Acirc", "194" }, new java.lang.String[]{ "Atilde", "195" }, new java.lang.String[]{ "Auml", "196" }, new java.lang.String[]{ "Aring", "197" }, new java.lang.String[]{ "AElig", "198" }, new java.lang.String[]{ "Ccedil", "199" }, new java.lang.String[]{ "Egrave", "200" }, new java.lang.String[]{ "Eacute", "201" }, new java.lang.String[]{ "Ecirc", "202" }, new java.lang.String[]{ "Euml", "203" }, new java.lang.String[]{ "Igrave", "204" }, new java.lang.String[]{ "Iacute", "205" }, new java.lang.String[]{ "Icirc", "206" }, new java.lang.String[]{ "Iuml", "207" }, new java.lang.String[]{ "ETH", "208" }, new java.lang.String[]{ "Ntilde", "209" }, new java.lang.String[]{ "Ograve", "210" }, new java.lang.String[]{ "Oacute", "211" }, new java.lang.String[]{ "Ocirc", "212" }, new java.lang.String[]{ "Otilde", "213" }, new java.lang.String[]{ "Ouml", "214" }, new java.lang.String[]{ "times", "215" }, new java.lang.String[]{ "Oslash", "216" }, new java.lang.String[]{ "Ugrave", "217" }, new java.lang.String[]{ "Uacute", "218" }, new java.lang.String[]{ "Ucirc", "219" }, new java.lang.String[]{ "Uuml", "220" }, new java.lang.String[]{ "Yacute", "221" }, new java.lang.String[]{ "THORN", "222" }, new java.lang.String[]{ "szlig", "223" }, new java.lang.String[]{ "agrave", "224" }, new java.lang.String[]{ "aacute", "225" }, new java.lang.String[]{ "acirc", "226" }, new java.lang.String[]{ "atilde", "227" }, new java.lang.String[]{ "auml", "228" }, new java.lang.String[]{ "aring", "229" }, new java.lang.String[]{ "aelig", "230" }, new java.lang.String[]{ "ccedil", "231" }, new java.lang.String[]{ "egrave", "232" }, new java.lang.String[]{ "eacute", "233" }, new java.lang.String[]{ "ecirc", "234" }, new java.lang.String[]{ "euml", "235" }, new java.lang.String[]{ "igrave", "236" }, new java.lang.String[]{ "iacute", "237" }, new java.lang.String[]{ "icirc", "238" }, new java.lang.String[]{ "iuml", "239" }, new java.lang.String[]{ "eth", "240" }, new java.lang.String[]{ "ntilde", "241" }, new java.lang.String[]{ "ograve", "242" }, new java.lang.String[]{ "oacute", "243" }, new java.lang.String[]{ "ocirc", "244" }, new java.lang.String[]{ "otilde", "245" }, new java.lang.String[]{ "ouml", "246" }, new java.lang.String[]{ "divide", "247" }, new java.lang.String[]{ "oslash", "248" }, new java.lang.String[]{ "ugrave", "249" }, new java.lang.String[]{ "uacute", "250" }, new java.lang.String[]{ "ucirc", "251" }, new java.lang.String[]{ "uuml", "252" }, new java.lang.String[]{ "yacute", "253" }, new java.lang.String[]{ "thorn", "254" }, new java.lang.String[]{ "yuml", "255" } };

    static final java.lang.String[][] HTML40_ARRAY = new java.lang.String[][]{ new java.lang.String[]{ "fnof", "402" }, new java.lang.String[]{ "Alpha", "913" }, new java.lang.String[]{ "Beta", "914" }, new java.lang.String[]{ "Gamma", "915" }, new java.lang.String[]{ "Delta", "916" }, new java.lang.String[]{ "Epsilon", "917" }, new java.lang.String[]{ "Zeta", "918" }, new java.lang.String[]{ "Eta", "919" }, new java.lang.String[]{ "Theta", "920" }, new java.lang.String[]{ "Iota", "921" }, new java.lang.String[]{ "Kappa", "922" }, new java.lang.String[]{ "Lambda", "923" }, new java.lang.String[]{ "Mu", "924" }, new java.lang.String[]{ "Nu", "925" }, new java.lang.String[]{ "Xi", "926" }, new java.lang.String[]{ "Omicron", "927" }, new java.lang.String[]{ "Pi", "928" }, new java.lang.String[]{ "Rho", "929" }, new java.lang.String[]{ "Sigma", "931" }, new java.lang.String[]{ "Tau", "932" }, new java.lang.String[]{ "Upsilon", "933" }, new java.lang.String[]{ "Phi", "934" }, new java.lang.String[]{ "Chi", "935" }, new java.lang.String[]{ "Psi", "936" }, new java.lang.String[]{ "Omega", "937" }, new java.lang.String[]{ "alpha", "945" }, new java.lang.String[]{ "beta", "946" }, new java.lang.String[]{ "gamma", "947" }, new java.lang.String[]{ "delta", "948" }, new java.lang.String[]{ "epsilon", "949" }, new java.lang.String[]{ "zeta", "950" }, new java.lang.String[]{ "eta", "951" }, new java.lang.String[]{ "theta", "952" }, new java.lang.String[]{ "iota", "953" }, new java.lang.String[]{ "kappa", "954" }, new java.lang.String[]{ "lambda", "955" }, new java.lang.String[]{ "mu", "956" }, new java.lang.String[]{ "nu", "957" }, new java.lang.String[]{ "xi", "958" }, new java.lang.String[]{ "omicron", "959" }, new java.lang.String[]{ "pi", "960" }, new java.lang.String[]{ "rho", "961" }, new java.lang.String[]{ "sigmaf", "962" }, new java.lang.String[]{ "sigma", "963" }, new java.lang.String[]{ "tau", "964" }, new java.lang.String[]{ "upsilon", "965" }, new java.lang.String[]{ "phi", "966" }, new java.lang.String[]{ "chi", "967" }, new java.lang.String[]{ "psi", "968" }, new java.lang.String[]{ "omega", "969" }, new java.lang.String[]{ "thetasym", "977" }, new java.lang.String[]{ "upsih", "978" }, new java.lang.String[]{ "piv", "982" }, new java.lang.String[]{ "bull", "8226" }, new java.lang.String[]{ "hellip", "8230" }, new java.lang.String[]{ "prime", "8242" }, new java.lang.String[]{ "Prime", "8243" }, new java.lang.String[]{ "oline", "8254" }, new java.lang.String[]{ "frasl", "8260" }, new java.lang.String[]{ "weierp", "8472" }, new java.lang.String[]{ "image", "8465" }, new java.lang.String[]{ "real", "8476" }, new java.lang.String[]{ "trade", "8482" }, new java.lang.String[]{ "alefsym", "8501" }, new java.lang.String[]{ "larr", "8592" }, new java.lang.String[]{ "uarr", "8593" }, new java.lang.String[]{ "rarr", "8594" }, new java.lang.String[]{ "darr", "8595" }, new java.lang.String[]{ "harr", "8596" }, new java.lang.String[]{ "crarr", "8629" }, new java.lang.String[]{ "lArr", "8656" }, new java.lang.String[]{ "uArr", "8657" }, new java.lang.String[]{ "rArr", "8658" }, new java.lang.String[]{ "dArr", "8659" }, new java.lang.String[]{ "hArr", "8660" }, new java.lang.String[]{ "forall", "8704" }, new java.lang.String[]{ "part", "8706" }, new java.lang.String[]{ "exist", "8707" }, new java.lang.String[]{ "empty", "8709" }, new java.lang.String[]{ "nabla", "8711" }, new java.lang.String[]{ "isin", "8712" }, new java.lang.String[]{ "notin", "8713" }, new java.lang.String[]{ "ni", "8715" }, new java.lang.String[]{ "prod", "8719" }, new java.lang.String[]{ "sum", "8721" }, new java.lang.String[]{ "minus", "8722" }, new java.lang.String[]{ "lowast", "8727" }, new java.lang.String[]{ "radic", "8730" }, new java.lang.String[]{ "prop", "8733" }, new java.lang.String[]{ "infin", "8734" }, new java.lang.String[]{ "ang", "8736" }, new java.lang.String[]{ "and", "8743" }, new java.lang.String[]{ "or", "8744" }, new java.lang.String[]{ "cap", "8745" }, new java.lang.String[]{ "cup", "8746" }, new java.lang.String[]{ "int", "8747" }, new java.lang.String[]{ "there4", "8756" }, new java.lang.String[]{ "sim", "8764" }, new java.lang.String[]{ "cong", "8773" }, new java.lang.String[]{ "asymp", "8776" }, new java.lang.String[]{ "ne", "8800" }, new java.lang.String[]{ "equiv", "8801" }, new java.lang.String[]{ "le", "8804" }, new java.lang.String[]{ "ge", "8805" }, new java.lang.String[]{ "sub", "8834" }, new java.lang.String[]{ "sup", "8835" }, new java.lang.String[]{ "sube", "8838" }, new java.lang.String[]{ "supe", "8839" }, new java.lang.String[]{ "oplus", "8853" }, new java.lang.String[]{ "otimes", "8855" }, new java.lang.String[]{ "perp", "8869" }, new java.lang.String[]{ "sdot", "8901" }, new java.lang.String[]{ "lceil", "8968" }, new java.lang.String[]{ "rceil", "8969" }, new java.lang.String[]{ "lfloor", "8970" }, new java.lang.String[]{ "rfloor", "8971" }, new java.lang.String[]{ "lang", "9001" }, new java.lang.String[]{ "rang", "9002" }, new java.lang.String[]{ "loz", "9674" }, new java.lang.String[]{ "spades", "9824" }, new java.lang.String[]{ "clubs", "9827" }, new java.lang.String[]{ "hearts", "9829" }, new java.lang.String[]{ "diams", "9830" }, new java.lang.String[]{ "OElig", "338" }, new java.lang.String[]{ "oelig", "339" }, new java.lang.String[]{ "Scaron", "352" }, new java.lang.String[]{ "scaron", "353" }, new java.lang.String[]{ "Yuml", "376" }, new java.lang.String[]{ "circ", "710" }, new java.lang.String[]{ "tilde", "732" }, new java.lang.String[]{ "ensp", "8194" }, new java.lang.String[]{ "emsp", "8195" }, new java.lang.String[]{ "thinsp", "8201" }, new java.lang.String[]{ "zwnj", "8204" }, new java.lang.String[]{ "zwj", "8205" }, new java.lang.String[]{ "lrm", "8206" }, new java.lang.String[]{ "rlm", "8207" }, new java.lang.String[]{ "ndash", "8211" }, new java.lang.String[]{ "mdash", "8212" }, new java.lang.String[]{ "lsquo", "8216" }, new java.lang.String[]{ "rsquo", "8217" }, new java.lang.String[]{ "sbquo", "8218" }, new java.lang.String[]{ "ldquo", "8220" }, new java.lang.String[]{ "rdquo", "8221" }, new java.lang.String[]{ "bdquo", "8222" }, new java.lang.String[]{ "dagger", "8224" }, new java.lang.String[]{ "Dagger", "8225" }, new java.lang.String[]{ "permil", "8240" }, new java.lang.String[]{ "lsaquo", "8249" }, new java.lang.String[]{ "rsaquo", "8250" }, new java.lang.String[]{ "euro", "8364" } };

    public static final org.apache.commons.lang.Entities XML;

    public static final org.apache.commons.lang.Entities HTML32;

    public static final org.apache.commons.lang.Entities HTML40;

    static {
        XML = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.XML.addEntities(org.apache.commons.lang.Entities.APOS_ARRAY);
    }

    static {
        HTML32 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        org.apache.commons.lang.Entities.HTML32.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
    }

    static {
        HTML40 = new org.apache.commons.lang.Entities();
        org.apache.commons.lang.Entities.fillWithHtml40Entities(org.apache.commons.lang.Entities.HTML40);
    }

    static void fillWithHtml40Entities(org.apache.commons.lang.Entities entities) {
        entities.addEntities(org.apache.commons.lang.Entities.BASIC_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.ISO8859_1_ARRAY);
        entities.addEntities(org.apache.commons.lang.Entities.HTML40_ARRAY);
    }

    static interface EntityMap {
        void add(java.lang.String name, int value);

        java.lang.String name(int value);

        int value(java.lang.String name);
    }

    static class PrimitiveEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        private java.util.Map mapNameToValue = new java.util.HashMap();

        private org.apache.commons.lang.IntHashMap mapValueToName = new org.apache.commons.lang.IntHashMap();

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(value, name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(value)));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    abstract static class MapIntMap implements org.apache.commons.lang.Entities.EntityMap {
        protected java.util.Map mapNameToValue;

        protected java.util.Map mapValueToName;

        public void add(java.lang.String name, int value) {
            mapNameToValue.put(name, new java.lang.Integer(value));
            mapValueToName.put(new java.lang.Integer(value), name);
        }

        public java.lang.String name(int value) {
            return ((java.lang.String) (mapValueToName.get(new java.lang.Integer(value))));
        }

        public int value(java.lang.String name) {
            java.lang.Object value = mapNameToValue.get(name);
            if (value == null) {
                return -1;
            }
            return ((java.lang.Integer) (value)).intValue();
        }
    }

    static class HashEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public HashEntityMap() {
            mapNameToValue = new java.util.HashMap();
            mapValueToName = new java.util.HashMap();
        }
    }

    static class TreeEntityMap extends org.apache.commons.lang.Entities.MapIntMap {
        public TreeEntityMap() {
            mapNameToValue = new java.util.TreeMap();
            mapValueToName = new java.util.TreeMap();
        }
    }

    static class LookupEntityMap extends org.apache.commons.lang.Entities.PrimitiveEntityMap {
        private java.lang.String[] lookupTable;

        private int LOOKUP_TABLE_SIZE = 256;

        public java.lang.String name(int value) {
            if (value < (LOOKUP_TABLE_SIZE)) {
                return lookupTable()[value];
            }
            return super.name(value);
        }

        private java.lang.String[] lookupTable() {
            if ((lookupTable) == null) {
                createLookupTable();
            }
            return lookupTable;
        }

        private void createLookupTable() {
            lookupTable = new java.lang.String[LOOKUP_TABLE_SIZE];
            for (int i = 0; i < (LOOKUP_TABLE_SIZE); ++i) {
                lookupTable[i] = super.name(i);
            }
        }
    }

    static class ArrayEntityMap implements org.apache.commons.lang.Entities.EntityMap {
        protected int growBy = 100;

        protected int size = 0;

        protected java.lang.String[] names;

        protected int[] values;

        public ArrayEntityMap() {
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public ArrayEntityMap(int growBy) {
            this.growBy = growBy;
            names = new java.lang.String[growBy];
            values = new int[growBy];
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            names[size] = name;
            values[size] = value;
            (size)++;
        }

        protected void ensureCapacity(int capacity) {
            if (capacity > (names.length)) {
                int newSize = java.lang.Math.max(capacity, ((size) + (growBy)));
                java.lang.String[] newNames = new java.lang.String[newSize];
                java.lang.System.arraycopy(names, 0, newNames, 0, size);
                names = newNames;
                int[] newValues = new int[newSize];
                java.lang.System.arraycopy(values, 0, newValues, 0, size);
                values = newValues;
            }
        }

        public java.lang.String name(int value) {
            for (int i = 0; i < (size); ++i) {
                if ((values[i]) == value) {
                    return names[i];
                }
            }
            return null;
        }

        public int value(java.lang.String name) {
            for (int i = 0; i < (size); ++i) {
                if (names[i].equals(name)) {
                    return values[i];
                }
            }
            return -1;
        }
    }

    static class BinaryEntityMap extends org.apache.commons.lang.Entities.ArrayEntityMap {
        public BinaryEntityMap() {
            super();
        }

        public BinaryEntityMap(int growBy) {
            super(growBy);
        }

        private int binarySearch(int key) {
            int low = 0;
            int high = (size) - 1;
            while (low <= high) {
                int mid = (low + high) >> 1;
                int midVal = values[mid];
                if (midVal < key) {
                    low = mid + 1;
                }else
                    if (midVal > key) {
                        high = mid - 1;
                    }else {
                        return mid;
                    }

            } 
            return -(low + 1);
        }

        public void add(java.lang.String name, int value) {
            ensureCapacity(((size) + 1));
            int insertAt = binarySearch(value);
            if (insertAt > 0) {
                return;
            }
            insertAt = -(insertAt + 1);
            java.lang.System.arraycopy(values, insertAt, values, (insertAt + 1), ((size) - insertAt));
            values[insertAt] = value;
            java.lang.System.arraycopy(names, insertAt, names, (insertAt + 1), ((size) - insertAt));
            names[insertAt] = name;
            (size)++;
        }

        public java.lang.String name(int value) {
            int index = binarySearch(value);
            if (index < 0) {
                return null;
            }
            return names[index];
        }
    }

    org.apache.commons.lang.Entities.EntityMap map = new org.apache.commons.lang.Entities.LookupEntityMap();

    public void addEntities(java.lang.String[][] entityArray) {
        for (int i = 0; i < (entityArray.length); ++i) {
            addEntity(entityArray[i][0], java.lang.Integer.parseInt(entityArray[i][1]));
        }
    }

    public void addEntity(java.lang.String name, int value) {
        map.add(name, value);
    }

    public java.lang.String entityName(int value) {
        return map.name(value);
    }

    public int entityValue(java.lang.String name) {
        return map.value(name);
    }

    public java.lang.String escape(java.lang.String str) {
        java.lang.StringBuffer buf = new java.lang.StringBuffer(((str.length()) * 2));
        int i;
        for (i = 0; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            java.lang.String entityName = this.entityName(ch);
            if (entityName == null) {
                if (ch > 127) {
                    int intValue = ch;
                    buf.append("&#");
                    buf.append(intValue);
                    buf.append(';');
                }else {
                    buf.append(ch);
                }
            }else {
                buf.append('&');
                buf.append(entityName);
                buf.append(';');
            }
        }
        return buf.toString();
    }

    public void escape(java.io.Writer writer, java.lang.String str) throws java.io.IOException {
        int len = str.length();
        for (int i = 0; i < len; i++) {
            char c = str.charAt(i);
            java.lang.String entityName = this.entityName(c);
            if (entityName == null) {
                if (c > 127) {
                    writer.write("&#");
                    writer.write(java.lang.Integer.toString(c, 10));
                    writer.write(';');
                }else {
                    writer.write(c);
                }
            }else {
                writer.write('&');
                writer.write(entityName);
                writer.write(';');
            }
        }
    }

    public java.lang.String unescape(java.lang.String str) {
        int firstAmp = str.indexOf('&');
        if (firstAmp < 0) {
            return str;
        }
        java.lang.StringBuffer buf = new java.lang.StringBuffer(str.length());
        buf.append(str.substring(0, firstAmp));
        for (int i = firstAmp; i < (str.length()); ++i) {
            char ch = str.charAt(i);
            if (ch == '&') {
                int semi = str.indexOf(';', (i + 1));
                if (semi == (-1)) {
                    buf.append(ch);
                    continue;
                }
                int amph = str.indexOf('&', (i + 1));
                if ((amph != (-1)) && (amph < semi)) {
                    buf.append(ch);
                    continue;
                }
                java.lang.String entityName = str.substring((i + 1), semi);
                int entityValue;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(23).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.HTML32",org.apache.commons.lang.Entities.HTML32);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("ch",ch);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.ISO8859_1_ARRAY",org.apache.commons.lang.Entities.ISO8859_1_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.HTML40",org.apache.commons.lang.Entities.HTML40);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("amph",amph);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.APOS_ARRAY",org.apache.commons.lang.Entities.APOS_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.BASIC_ARRAY",org.apache.commons.lang.Entities.BASIC_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("firstAmp",firstAmp);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("str",str);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.XML",org.apache.commons.lang.Entities.XML);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("0",0);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("buf",buf);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.this.map",org.apache.commons.lang.Entities.this.map);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("entityName",entityName);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("semi",semi);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectInput("org.apache.commons.lang.Entities.HTML40_ARRAY",org.apache.commons.lang.Entities.HTML40_ARRAY);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(23).collectionEnds();
                }
                if (runtimeAngelicValue) if ((entityName.length()) == 0) {
                    entityValue = -1;
                }else
                    if ((entityName.charAt(0)) == '#') {
                        if ((entityName.length()) == 1) {
                            entityValue = -1;
                        }else {
                            char charAt1 = entityName.charAt(1);
                            try {
                                if ((charAt1 == 'x') || (charAt1 == 'X')) {
                                    entityValue = java.lang.Integer.valueOf(entityName.substring(2), 16).intValue();
                                }else {
                                    entityValue = java.lang.Integer.parseInt(entityName.substring(1));
                                }
                            } catch (java.lang.NumberFormatException ex) {
                                entityValue = -1;
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityName);
                    }

                if (entityValue == (-1)) {
                    buf.append('&');
                    buf.append(entityName);
                    buf.append(';');
                }else {
                    buf.append(((char) (entityValue)));
                }
                i = semi;
            }else {
                buf.append(ch);
            }
        }
        return buf.toString();
    }

    public void unescape(java.io.Writer writer, java.lang.String string) throws java.io.IOException {
        int firstAmp = string.indexOf('&');
        if (firstAmp < 0) {
            writer.write(string);
            return;
        }
        writer.write(string, 0, firstAmp);
        int len = string.length();
        for (int i = firstAmp; i < len; i++) {
            char c = string.charAt(i);
            if (c == '&') {
                int nextIdx = i + 1;
                int semiColonIdx = string.indexOf(';', nextIdx);
                if (semiColonIdx == (-1)) {
                    writer.write(c);
                    continue;
                }
                int amphersandIdx = string.indexOf('&', (i + 1));
                if ((amphersandIdx != (-1)) && (amphersandIdx < semiColonIdx)) {
                    writer.write(c);
                    continue;
                }
                java.lang.String entityContent = string.substring(nextIdx, semiColonIdx);
                int entityValue = -1;
                int entityContentLen = entityContent.length();
                if (entityContentLen > 0) {
                    if ((entityContent.charAt(0)) == '#') {
                        if (entityContentLen > 1) {
                            char isHexChar = entityContent.charAt(1);
                            try {
                                switch (isHexChar) {
                                    case 'X' :
                                    case 'x' :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(2), 16);
                                        }
                                    default :
                                        {
                                            entityValue = java.lang.Integer.parseInt(entityContent.substring(1), 10);
                                        }
                                }
                            } catch (java.lang.NumberFormatException e) {
                            }
                        }
                    }else {
                        entityValue = this.entityValue(entityContent);
                    }
                }
                if (entityValue == (-1)) {
                    writer.write('&');
                    writer.write(entityContent);
                    writer.write(';');
                }else {
                    writer.write(entityValue);
                }
                i = semiColonIdx;
            }else {
                writer.write(c);
            }
        }
    }
}
18:27:45.131 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
18:27:45.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:45.145 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:45.472 [pool-91-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:45.475 [pool-92-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:45.476 [pool-89-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:45.476 [pool-89-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:45.476 [pool-89-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:837.
18:27:45.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
18:27:45.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:835 which is executed by 6 tests
-2037470238
18:27:45.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
18:27:45.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:830 which is executed by 6 tests
-2037470238
18:27:45.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:45.740 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.027 [pool-95-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.030 [pool-96-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:46.031 [pool-93-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.031 [pool-93-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.031 [pool-93-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:830.
18:27:46.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.043 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.328 [pool-99-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.332 [pool-100-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:46.332 [pool-97-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.332 [pool-97-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.332 [pool-97-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:830.
18:27:46.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
18:27:46.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:829 which is executed by 6 tests
-2037470238
18:27:46.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
18:27:46.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:825 which is executed by 6 tests
-2037470238
18:27:46.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.594 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.871 [pool-103-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.873 [pool-104-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:46.873 [pool-101-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.874 [pool-101-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:46.874 [pool-101-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:825.
18:27:46.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:46.887 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.204 [pool-107-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.207 [pool-108-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:47.208 [pool-105-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:47.208 [pool-105-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:47.208 [pool-105-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:825.
18:27:47.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
18:27:47.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:824 which is executed by 6 tests
-2037470238
18:27:47.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
18:27:47.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:823 which is executed by 6 tests
-2037470238
18:27:47.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.535 [pool-110-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.884 [pool-111-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.887 [pool-112-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:47.888 [pool-109-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[]>]
18:27:47.888 [pool-109-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:47.888 [pool-109-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:823.
18:27:47.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:47.900 [pool-114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.182 [pool-115-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.185 [pool-116-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:48.188 [pool-113-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:48.188 [pool-113-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:48.188 [pool-113-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:823.
18:27:48.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
18:27:48.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:822 which is executed by 6 tests
-2037470238
18:27:48.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
18:27:48.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:821 which is executed by 6 tests
-2037470238
18:27:48.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.451 [pool-118-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.816 [pool-119-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.818 [pool-120-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:48.818 [pool-117-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[]>]
18:27:48.818 [pool-117-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:48.818 [pool-117-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:821.
18:27:48.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
18:27:48.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:820 which is executed by 6 tests
-2037470238
18:27:48.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:48.952 [pool-122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.225 [pool-123-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.228 [pool-124-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:49.229 [pool-121-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:49.229 [pool-121-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:49.229 [pool-121-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:820.
18:27:49.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
18:27:49.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:819 which is executed by 6 tests
-2037470238
18:27:49.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
18:27:49.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:815 which is executed by 8 tests
-2037470238
18:27:49.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.493 [pool-126-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.772 [pool-127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.775 [pool-128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:49.775 [pool-125-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:49.775 [pool-125-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:49.775 [pool-125-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:815.
18:27:49.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:49.787 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.062 [pool-131-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.067 [pool-132-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:104)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:50.068 [pool-129-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:50.068 [pool-129-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:50.068 [pool-129-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:815.
18:27:50.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
18:27:50.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:814 which is executed by 8 tests
-2037470238
18:27:50.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
18:27:50.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities$PrimitiveEntityMap:429 which is executed by 16 tests
-2037470238
18:27:50.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
18:27:50.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities$PrimitiveEntityMap:428 which is executed by 16 tests
-2037470238
18:27:50.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.459 [pool-134-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.756 [pool-135-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.758 [pool-136-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:50.758 [pool-133-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:50.759 [pool-133-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:50.759 [pool-133-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities$PrimitiveEntityMap:428.
18:27:50.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
18:27:50.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities$PrimitiveEntityMap:427 which is executed by 16 tests
-2037470238
18:27:50.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:50.892 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.178 [pool-139-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.180 [pool-140-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:51.181 [pool-137-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:51.181 [pool-137-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:51.181 [pool-137-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities$PrimitiveEntityMap:427.
18:27:51.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
18:27:51.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:714 which is executed by 20 tests
-2037470238
18:27:51.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
18:27:51.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.Entities:713 which is executed by 20 tests
-2037470238
18:27:51.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.441 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.716 [pool-143-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.718 [pool-144-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:51.718 [pool-141-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:51.718 [pool-141-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:51.719 [pool-141-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.Entities:713.
18:27:51.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
18:27:51.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:319 which is executed by 23 tests
-47379808
18:27:51.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
18:27:51.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:318 which is executed by 23 tests
-47379808
18:27:51.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:51.945 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.103 [pool-147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.105 [pool-148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:52.105 [pool-145-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.106 [pool-145-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.106 [pool-145-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.IntHashMap:318.
18:27:52.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
18:27:52.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:317 which is executed by 23 tests
-47379808
18:27:52.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.226 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.386 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.389 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:52.389 [pool-149-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.389 [pool-149-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.389 [pool-149-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.IntHashMap:317.
18:27:52.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
18:27:52.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:316 which is executed by 23 tests
-47379808
18:27:52.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
18:27:52.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:307 which is executed by 23 tests
-47379808
18:27:52.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.639 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.827 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.829 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:52.830 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.830 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:52.830 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.IntHashMap:307.
18:27:52.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:52.842 [pool-158-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:53.050 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:53.053 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:53.053 [pool-157-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:53.054 [pool-157-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:53.054 [pool-157-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.IntHashMap:307.
18:27:53.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
18:27:53.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:299 which is executed by 23 tests
-47379808
18:27:53.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:53.206 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 13
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:53.386 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>
    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:53.389 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNumberOverflow(org.apache.commons.lang.EntitiesTest)
[expected:<[&#12345678;]> but was:<[慎]>]
junit.framework.ComparisonFailure: expected:<[&#12345678;]> but was:<[慎]>    at junit.framework.Assert.assertEquals(Assert.java:100)
    at junit.framework.Assert.assertEquals(Assert.java:107)
    at junit.framework.TestCase.assertEquals(TestCase.java:269)
    at org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)
    at org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:27:53.389 [pool-161-thread-1] DEBUG tests.output - Failing tests with false: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:53.390 [pool-161-thread-1] DEBUG tests.output - Failing tests with true: 
[testNumberOverflow(org.apache.commons.lang.EntitiesTest): expected:<[&#12345678;]> but was:<[慎]>]
18:27:53.390 [pool-161-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.lang.IntHashMap:299.
18:27:53.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
18:27:53.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:298 which is executed by 23 tests
-47379808
18:27:53.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
18:27:53.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:297 which is executed by 23 tests
-47379808
18:27:53.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
18:27:53.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.lang.IntHashMap:296 which is executed by 23 tests
-47379808
18:27:53.717 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
18:27:53.795 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 77
18:27:53.796 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 1698
18:27:53.796 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 43
18:27:53.796 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
18:27:53.796 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
18:27:53.799 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
18:27:53.799 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
18:27:53.799 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 49343ms
18:27:53.799 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
115.63user 5.72system 0:51.74elapsed 234%CPU (0avgtext+0avgdata 955900maxresident)k
56560inputs+6496outputs (7major+416608minor)pagefaults 0swaps


Node: granduc-9.luxembourg.grid5000.fr



Date: Wed Nov 28 18:27:54 EST 2018

