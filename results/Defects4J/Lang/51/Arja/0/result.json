{
  "repair_end": "2018-12-01 11:22:18.272758", 
  "repair_begin": "2018-12-01 11:12:06.220838", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1078/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:34.189250902 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n@@ -696,7 +703,7 @@\n                 }\n             }\n         }\n-        return false;\n+        return Boolean.FALSE;\n     }\n     \n //    public static void main(String[] args) {\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 699, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return Boolean.FALSE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1624/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:05.977993504 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                str = str.toLowerCase();\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1150/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:52.169338862 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_789/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:22.240898938 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -681,13 +684,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = 0;\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_942/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:59.269080074 -0500\n@@ -669,11 +669,9 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +680,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1255/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:18.461467487 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -668,7 +668,12 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1238/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:14.681448995 -0500\n@@ -682,18 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1023/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:19.913181063 -0500\n@@ -647,15 +647,9 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -669,7 +663,10 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n@@ -682,12 +679,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_694/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:58.408782358 -0500\n@@ -661,7 +661,14 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +689,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_960/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:03.613101324 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return Boolean.TRUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_733/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:08.084829691 -0500\n@@ -662,10 +662,13 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n+                if ((str == null) || (str.length() == 0)) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1030/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:21.365188166 -0500\n@@ -659,7 +659,10 @@\n         if (str == null) {\n             return false;\n         }\n-        switch (str.length()) {\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\tswitch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n@@ -668,26 +671,39 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+                    throw new NumberFormatException(\n+\t\t\t\t\t\t\t\"\\\"\\\" is not a valid number.\");\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 662, 
          "faulty": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Replace", 
          "seed": "throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1773/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:45.830188489 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "InsertBefore", 
          "seed": "ch=Character.toUpperCase(ch);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1232/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:13.237441930 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -682,12 +681,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_923/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:55.189060114 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "throw new NullPointerException(\"The maximum value must not be null\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_487/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:02.872510700 -0500\n@@ -659,7 +659,10 @@\n         if (str == null) {\n             return false;\n         }\n-        switch (str.length()) {\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\tswitch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n@@ -670,9 +673,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 662, 
          "faulty": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1341/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:42.957587329 -0500\n@@ -656,13 +656,26 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +695,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_785/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:21.340894535 -0500\n@@ -668,7 +668,14 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +689,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1510/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:33.073832519 -0500\n@@ -668,7 +668,10 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_396/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:37.788388004 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +679,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1634/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:08.586006264 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -681,13 +681,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_574/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:27.724632263 -0500\n@@ -682,13 +682,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1402/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:01.933680167 -0500\n@@ -647,15 +647,6 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n@@ -674,7 +665,11 @@\n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n+                if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"The String must not be empty\");\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n@@ -682,12 +677,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  throw new IllegalArgumentException(\"The String must not be empty\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_876/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:43.225001588 -0500\n@@ -682,17 +682,21 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+                    str = str.toLowerCase();\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1789/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:50.290210311 -0500\n@@ -668,7 +668,14 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -681,13 +688,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1111/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:42.029289256 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1869/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:22:12.210317562 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,14 +678,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1011/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:17.009166856 -0500\n@@ -675,20 +675,36 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+                    return Boolean.TRUE;\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Replace", 
          "seed": "return Boolean.TRUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_813/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:28.060927408 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1612/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:02.761977769 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -682,14 +681,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_583/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:29.788642360 -0500\n@@ -681,8 +681,21 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 't') {\n                     return \n                         (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n                         (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1086/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:35.929259415 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -681,13 +694,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1604/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:00.733967847 -0500\n@@ -675,19 +675,29 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n+                    if (str == null) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1300/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:31.393530755 -0500\n@@ -668,11 +668,12 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"The String must not be empty\");\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,14 +683,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  throw new IllegalArgumentException(\"The String must not be empty\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_622/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:39.852691588 -0500\n@@ -661,7 +661,10 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1533/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:40.249867627 -0500\n@@ -675,19 +675,24 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+                    return Boolean.TRUE;\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Replace", 
          "seed": "return Boolean.TRUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1856/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:22:08.474299282 -0500\n@@ -659,7 +659,10 @@\n         if (str == null) {\n             return false;\n         }\n-        switch (str.length()) {\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\tswitch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 662, 
          "faulty": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_168/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:14:31.004061351 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -670,9 +683,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +692,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9');"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1462/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:19.489766058 -0500\n@@ -647,15 +647,9 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -682,12 +676,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_429/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:47.144433768 -0500\n@@ -657,6 +657,9 @@\n             return true;\n         }\n         if (str == null) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n@@ -682,14 +685,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_592/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:31.852652456 -0500\n@@ -682,14 +682,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_885/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:45.553012976 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -670,9 +669,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_356/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:26.756334044 -0500\n@@ -670,24 +670,25 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Delete", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1819/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:58.474250353 -0500\n@@ -663,12 +663,17 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n+                if ((str == null) || (str.length() == 0)) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1473/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:22.705781792 -0500\n@@ -668,27 +668,45 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Delete", 
          "seed": "return Boolean.TRUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1153/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:52.753341719 -0500\n@@ -647,14 +647,16 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\t// Previously used equalsIgnoreCase, which was fast for interned 'true'.\n         // Non interned 'true' matched 15 times slower.\n         // \n         // Optimisation provides same performance as before for interned 'true'.\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -682,12 +684,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1824/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:59.626255989 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -670,9 +673,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_633/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:42.504704561 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,14 +679,33 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1753/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:40.858164162 -0500\n@@ -682,13 +682,25 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                for (int i = 0; i < str.length(); i++) {\n+\t\t\t\t\tif (!Character.isDigit(str.charAt(i))) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < str.length(); i++) {\n  if (!Character.isDigit(str.charAt(i))) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1742/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:38.238151342 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Delete", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1483/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:25.393794944 -0500\n@@ -647,15 +647,6 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n@@ -669,11 +660,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                str = str.toLowerCase();\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +669,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1531/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:39.949866159 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -681,13 +678,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = 0;\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1815/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:57.610246126 -0500\n@@ -661,7 +661,10 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -669,11 +672,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +681,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_827/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:30.972941653 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_820/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:29.516934531 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_979/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:08.565125548 -0500\n@@ -668,7 +668,7 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                char ch = ' ';\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1344/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:43.541590187 -0500\n@@ -657,7 +657,20 @@\n             return true;\n         }\n         if (str == null) {\n-            return false;\n+            if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t}\n+\t\t\treturn false;\n         }\n         switch (str.length()) {\n             case 2: {\n@@ -682,12 +695,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 660, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1764/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:43.478176980 -0500\n@@ -682,13 +682,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return str == null || str.length() == 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1223/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:10.921430600 -0500\n@@ -668,7 +668,12 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_754/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:13.460855988 -0500\n@@ -682,17 +682,20 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "Delete", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1380/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:55.737649853 -0500\n@@ -661,7 +661,39 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                switch (str.length()) {\n+\t\t\t\tcase 2: {\n+\t\t\t\t\tchar ch0 = str.charAt(0);\n+\t\t\t\t\tchar ch1 = str.charAt(1);\n+\t\t\t\t\treturn (ch0 == 'o' || ch0 == 'O')\n+\t\t\t\t\t\t\t&& (ch1 == 'n' || ch1 == 'N');\n+\t\t\t\t}\n+\t\t\t\tcase 3: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 'y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'Y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'E' || str.charAt(1) == 'e')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcase 4: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 't') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'r' || str.charAt(1) == 'R')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'u' || str.charAt(2) == 'U')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -669,11 +701,6 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +709,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Delete", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_639/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:43.964711703 -0500\n@@ -663,9 +663,6 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -682,12 +679,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1731/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:35.334137134 -0500\n@@ -647,15 +647,9 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (StringUtils.isEmpty(str)) {\n+\t\t\treturn false;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -682,12 +676,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_589/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:31.272649619 -0500\n@@ -647,15 +647,19 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -682,12 +686,6 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Delete", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_997/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:13.501149696 -0500\n@@ -647,21 +647,19 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +680,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_696/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:58.700783787 -0500\n@@ -681,13 +681,25 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_906/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:50.513037240 -0500\n@@ -682,11 +682,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 't') {\n+                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'T') {\n                     return \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_958/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:03.321099896 -0500\n@@ -674,7 +674,11 @@\n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n+                if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"The String must not be empty\");\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n@@ -682,12 +686,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  throw new IllegalArgumentException(\"The String must not be empty\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1160/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:54.213348862 -0500\n@@ -682,14 +682,24 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1097/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:38.545272212 -0500\n@@ -668,26 +668,35 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n-                }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "Delete", 
          "seed": "return Character.isWhitespace(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_804/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:25.736916039 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -681,13 +677,25 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1194/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:02.961391659 -0500\n@@ -663,9 +663,9 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n+                if ((str == null) || (str.length() == 0)) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1669/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:17.934052000 -0500\n@@ -661,8 +661,43 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                switch (str.length()) {\n+\t\t\t\tcase 2: {\n+\t\t\t\t\tchar ch0 = str.charAt(0);\n+\t\t\t\t\tchar ch1 = str.charAt(1);\n+\t\t\t\t\treturn (ch0 == 'o' || ch0 == 'O')\n+\t\t\t\t\t\t\t&& (ch1 == 'n' || ch1 == 'N');\n+\t\t\t\t}\n+\t\t\t\tcase 3: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 'y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'Y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'E' || str.charAt(1) == 'e')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcase 4: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 't') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'r' || str.charAt(1) == 'R')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'u' || str.charAt(2) == 'U')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +717,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1182/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:59.749375945 -0500\n@@ -662,18 +662,27 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +691,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1290/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:29.069519384 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return str == null || str.length() == 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_408/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:41.092404166 -0500\n@@ -675,19 +675,23 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Delete", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1158/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:53.909347374 -0500\n@@ -669,25 +669,25 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Delete", 
          "seed": "return Boolean.TRUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1656/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:14.466035033 -0500\n@@ -659,9 +659,46 @@\n         if (str == null) {\n             return false;\n         }\n-        switch (str.length()) {\n+        if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\tswitch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                switch (str.length()) {\n+\t\t\t\tcase 2: {\n+\t\t\t\t\tchar ch0 = str.charAt(0);\n+\t\t\t\t\tchar ch1 = str.charAt(1);\n+\t\t\t\t\treturn (ch0 == 'o' || ch0 == 'O')\n+\t\t\t\t\t\t\t&& (ch1 == 'n' || ch1 == 'N');\n+\t\t\t\t}\n+\t\t\t\tcase 3: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 'y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'Y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'E' || str.charAt(1) == 'e')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcase 4: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 't') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'r' || str.charAt(1) == 'R')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'u' || str.charAt(2) == 'U')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +719,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 662, 
          "faulty": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1061/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:29.833229592 -0500\n@@ -656,12 +656,15 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_690/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:57.532778072 -0500\n@@ -668,7 +668,10 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1649/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:12.706026422 -0500\n@@ -654,14 +654,16 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +684,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1807/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:55.790237221 -0500\n@@ -661,7 +661,14 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,13 +689,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_894/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:47.577022877 -0500\n@@ -647,15 +647,19 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -682,12 +686,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_870/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:42.044995815 -0500\n@@ -682,13 +682,23 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_929/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:56.653067276 -0500\n@@ -663,9 +663,9 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n+                if (str.length() == 0) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Replace", 
          "seed": "if (str.length() == 0) {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_505/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:07.628533963 -0500\n@@ -656,7 +656,14 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n+        if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\tif (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n@@ -681,13 +688,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1440/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:12.645732574 -0500\n@@ -682,18 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1205/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:05.861405846 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,13 +685,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1016/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:18.169172531 -0500\n@@ -682,14 +682,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_931/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:56.945068705 -0500\n@@ -657,7 +657,14 @@\n             return true;\n         }\n         if (str == null) {\n-            return false;\n+            if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t}\n+\t\t\treturn false;\n         }\n         switch (str.length()) {\n             case 2: {\n@@ -682,18 +689,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 660, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_840/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:34.184957366 -0500\n@@ -669,11 +669,6 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +677,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Delete", 
          "seed": "if (str.charAt(2) != '_') {\n  throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_751/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:12.880853150 -0500\n@@ -657,6 +657,9 @@\n             return true;\n         }\n         if (str == null) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n@@ -669,11 +672,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                str = str.toLowerCase();\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +681,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1749/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:39.986159895 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -681,13 +680,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = 0;\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_818/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:29.224933102 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -668,7 +667,14 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +688,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1467/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:20.733772145 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_447/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:52.148458244 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_900/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:49.053030098 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -669,11 +669,6 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +677,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Delete", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_688/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:57.240776644 -0500\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1704/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:27.810100321 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -681,13 +678,25 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return Boolean.FALSE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_830/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:31.556944510 -0500\n@@ -663,7 +663,10 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n+                if ((str == null) || (str.length() == 0)) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\treturn \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "InsertBefore", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_887/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:45.845014404 -0500\n@@ -654,11 +654,10 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n-        }\n-        if (str == null) {\n-            return false;\n         }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -682,12 +681,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_601/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:34.216664019 -0500\n@@ -681,13 +681,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = 0;\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1003/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:14.977156916 -0500\n@@ -647,21 +647,22 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (StringUtils.isEmpty(str)) {\n+\t\t\treturn false;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +683,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_772/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:17.860877512 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,13 +679,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1117/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:43.185294912 -0500\n@@ -661,8 +661,24 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n+                if (str.length() == 0) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +698,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str.length() == 0) {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_618/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:38.968687264 -0500\n@@ -663,9 +663,6 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -681,19 +678,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1247/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:16.721458975 -0500\n@@ -674,20 +674,31 @@\n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n+                if (StringUtils.isEmpty(str)) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"The String must not be empty\");\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = 0;\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "InsertBefore", 
          "seed": "if (StringUtils.isEmpty(str)) {\n  throw new IllegalArgumentException(\"The String must not be empty\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_676/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:54.032760952 -0500\n@@ -681,19 +681,37 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 't') {\n                     return \n                         (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n                         (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n                         (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n                 }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Replace", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_653/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:47.788730408 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +695,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1244/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:16.129456079 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (str.length() == 0) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str.length() == 0) {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1347/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:44.121593023 -0500\n@@ -668,7 +668,14 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,17 +689,21 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+                    str = str.toLowerCase();\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_793/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:23.112903203 -0500\n@@ -662,13 +662,29 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,13 +698,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1082/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:35.065255188 -0500\n@@ -662,7 +662,10 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (str.length() == 0) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -670,9 +673,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (str.length() == 0) {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_471/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:58.388488766 -0500\n@@ -662,7 +662,8 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                str = str.toLowerCase();\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +683,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_359/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:27.344336919 -0500\n@@ -657,13 +657,17 @@\n             return true;\n         }\n         if (str == null) {\n-            return false;\n+            if (str == \"true\") {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\treturn false;\n         }\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n+                str = str.toLowerCase();\n+\t\t\t\treturn \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n@@ -682,12 +686,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 660, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_746/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:11.700847378 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -682,12 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_721/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:04.852813880 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -682,12 +681,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_659/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:49.304737825 -0500\n@@ -647,15 +647,6 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n@@ -682,12 +673,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1568/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:50.149916063 -0500\n@@ -661,7 +661,39 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                switch (str.length()) {\n+\t\t\t\tcase 2: {\n+\t\t\t\t\tchar ch0 = str.charAt(0);\n+\t\t\t\t\tchar ch1 = str.charAt(1);\n+\t\t\t\t\treturn (ch0 == 'o' || ch0 == 'O')\n+\t\t\t\t\t\t\t&& (ch1 == 'n' || ch1 == 'N');\n+\t\t\t\t}\n+\t\t\t\tcase 3: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 'y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'Y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'E' || str.charAt(1) == 'e')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcase 4: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 't') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'r' || str.charAt(1) == 'R')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'u' || str.charAt(2) == 'U')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -669,11 +701,9 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,14 +712,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1027/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:20.781185309 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,14 +695,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_576/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:28.016633692 -0500\n@@ -647,15 +647,9 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (str == null) {\n+\t\t\treturn false;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -670,9 +664,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +673,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_975/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:07.677121205 -0500\n@@ -662,7 +662,16 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -682,12 +691,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1209/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:07.213412460 -0500\n@@ -668,7 +668,14 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,14 +689,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1812/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:56.998243131 -0500\n@@ -661,14 +661,20 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,12 +688,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_850/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:36.796970143 -0500\n@@ -668,7 +668,10 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -681,13 +684,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1108/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:41.449286419 -0500\n@@ -662,18 +662,23 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                str = str.toLowerCase();\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1170/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:56.837361698 -0500\n@@ -647,7 +647,10 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n+        if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n+\t\t// Previously used equalsIgnoreCase, which was fast for interned 'true'.\n         // Non interned 'true' matched 15 times slower.\n         // \n         // Optimisation provides same performance as before for interned 'true'.\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1298/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:31.101529326 -0500\n@@ -656,9 +656,9 @@\n         if (str == \"true\") {\n             return true;\n         }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -682,18 +682,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1131/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:46.969313423 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -681,15 +680,34 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1837/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:22:03.130273134 -0500\n@@ -682,13 +682,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "throw new NullPointerException(\"The maximum value must not be null\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_938/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:58.397075808 -0500\n@@ -670,7 +670,12 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n+                    if (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n@@ -682,12 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "InsertBefore", 
          "seed": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1761/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:21:42.898174143 -0500\n@@ -657,7 +657,14 @@\n             return true;\n         }\n         if (str == null) {\n-            return false;\n+            if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t}\n+\t\t\treturn false;\n         }\n         switch (str.length()) {\n             case 2: {\n@@ -682,12 +689,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 660, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_823/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:30.096937367 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -670,9 +683,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,14 +692,22 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_763/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:15.532866124 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -681,13 +680,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_369/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:30.004349930 -0500\n@@ -662,7 +662,20 @@\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n-                char ch1 = str.charAt(1);\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n@@ -670,9 +683,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,13 +692,31 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+                if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "InsertBefore", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 665, 
          "faulty": "char ch1=str.charAt(1);", 
          "type": "InsertBefore", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9');"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_701/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:59.880789559 -0500\n@@ -663,16 +663,14 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n+                str = str.toLowerCase();\n+\t\t\t\treturn \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +680,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_629/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:41.632700295 -0500\n@@ -681,13 +681,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1172/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:57.129363128 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1049/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:26.609213821 -0500\n@@ -647,18 +647,9 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n-        if (str == null) {\n-            return false;\n-        }\n+        if ((str == null) || (str.length() == 0)) {\n+\t\t\treturn false;\n+\t\t}\n         switch (str.length()) {\n             case 2: {\n                 char ch0 = str.charAt(0);\n@@ -682,12 +673,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 659, 
          "faulty": "if (str == null) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1253/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:18.169466060 -0500\n@@ -654,7 +654,17 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n+            if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t}\n         }\n         if (str == null) {\n             return false;\n@@ -682,12 +692,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Delete", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_498/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:16:05.812525080 -0500\n@@ -669,11 +669,7 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                str = str.toLowerCase();\n                 if (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n@@ -682,12 +678,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_705/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:00.752793824 -0500\n@@ -661,7 +661,14 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +689,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_462/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:56.020477184 -0500\n@@ -647,15 +647,6 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n@@ -663,9 +654,6 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n-                    (ch0 == 'o' || ch0 == 'O') &&\n-                    (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n@@ -682,12 +670,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "Delete", 
          "seed": "if ((str == null) || (str.length() == 0)) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_716/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:03.688808186 -0500\n@@ -681,13 +681,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1364/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:50.765625528 -0500\n@@ -668,7 +668,12 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n+                if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n                 if (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n@@ -682,18 +687,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_452/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:15:53.344464095 -0500\n@@ -647,15 +647,19 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n+        if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.TRUE;\n+\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\treturn Boolean.FALSE;\n+\t\t}\n         if (str == null) {\n             return false;\n         }\n@@ -663,7 +667,10 @@\n             case 2: {\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n-                return \n+                if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n+\t\t\t\treturn \n                     (ch0 == 'o' || ch0 == 'O') &&\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n@@ -683,10 +690,6 @@\n             case 4: {\n                 char ch = str.charAt(0);\n                 if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n                 }\n                 if (ch == 'T') {\n                     return \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 666, 
          "faulty": "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');", 
          "type": "InsertBefore", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Delete", 
          "seed": "if (Character.isUpperCase(ch)) {\n  ch=Character.toLowerCase(ch);\n}\n else if (Character.isTitleCase(ch)) {\n  ch=Character.toLowerCase(ch);\n}\n else if (Character.isLowerCase(ch)) {\n  ch=Character.toUpperCase(ch);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1114/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:42.605292074 -0500\n@@ -647,21 +647,15 @@\n      * @return the boolean value of the string, <code>false</code> if no match\n      */\n     public static boolean toBoolean(String str) {\n-        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n-        // Non interned 'true' matched 15 times slower.\n-        // \n-        // Optimisation provides same performance as before for interned 'true'.\n-        // Similar performance for null, 'false', and other strings not length 2/3/4.\n-        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n-        if (str == \"true\") {\n-            return true;\n-        }\n         if (str == null) {\n             return false;\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                if (str == null) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +676,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 656, 
          "faulty": "if (str == \"true\") {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == null) {\n  return false;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1325/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:38.581565920 -0500\n@@ -675,19 +675,24 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+                    return Boolean.TRUE;\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n@@ -696,7 +701,7 @@\n                 }\n             }\n         }\n-        return false;\n+        return Boolean.FALSE;\n     }\n     \n //    public static void main(String[] args) {\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 699, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return Boolean.FALSE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Replace", 
          "seed": "return Boolean.TRUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_801/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:25.152913182 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -681,13 +678,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1513/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:33.657835375 -0500\n@@ -661,7 +661,39 @@\n         }\n         switch (str.length()) {\n             case 2: {\n-                char ch0 = str.charAt(0);\n+                switch (str.length()) {\n+\t\t\t\tcase 2: {\n+\t\t\t\t\tchar ch0 = str.charAt(0);\n+\t\t\t\t\tchar ch1 = str.charAt(1);\n+\t\t\t\t\treturn (ch0 == 'o' || ch0 == 'O')\n+\t\t\t\t\t\t\t&& (ch1 == 'n' || ch1 == 'N');\n+\t\t\t\t}\n+\t\t\t\tcase 3: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 'y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'e' || str.charAt(1) == 'E')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 's' || str.charAt(2) == 'S');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'Y') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'E' || str.charAt(1) == 'e')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcase 4: {\n+\t\t\t\t\tchar ch = str.charAt(0);\n+\t\t\t\t\tif (ch == 't') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'r' || str.charAt(1) == 'R')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'u' || str.charAt(2) == 'U')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+\t\t\t\t\t}\n+\t\t\t\t\tif (ch == 'T') {\n+\t\t\t\t\t\treturn (str.charAt(1) == 'R' || str.charAt(1) == 'r')\n+\t\t\t\t\t\t\t\t&& (str.charAt(2) == 'U' || str.charAt(2) == 'u')\n+\t\t\t\t\t\t\t\t&& (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tchar ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n                 return \n                     (ch0 == 'o' || ch0 == 'O') &&\n@@ -682,12 +714,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 664, 
          "faulty": "char ch0=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "switch (str.length()) {\ncase 2:\n{\n    char ch0=str.charAt(0);\n    char ch1=str.charAt(1);\n    return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');\n  }\ncase 3:\n{\n  char ch=str.charAt(0);\n  if (ch == 'y') {\n    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n  }\n  if (ch == 'Y') {\n    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n  }\n}\ncase 4:\n{\nchar ch=str.charAt(0);\nif (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}\nif (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}\n}\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_949/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:01.001088546 -0500\n@@ -669,7 +669,8 @@\n             }\n             case 3: {\n                 char ch = str.charAt(0);\n-                if (ch == 'y') {\n+                ch = Character.toLowerCase(ch);\n+\t\t\t\tif (ch == 'y') {\n                     return \n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n@@ -682,12 +683,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "InsertBefore", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_934/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:57.525071542 -0500\n@@ -675,19 +675,36 @@\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n+                    if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t\t}\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_758/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:14.336860274 -0500\n@@ -681,15 +681,23 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n+                    str = str.toLowerCase();\n+\t\t\t\t\treturn \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "InsertBefore", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1286/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:28.121514747 -0500\n@@ -654,7 +654,6 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n         }\n         if (str == null) {\n             return false;\n@@ -668,26 +667,29 @@\n                     (ch1 == 'n' || ch1 == 'N');\n             }\n             case 3: {\n-                char ch = str.charAt(0);\n-                if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n-                }\n+                if (str == \"true\") {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tchar ch = str.charAt(0);\n+                ch = Character.toLowerCase(ch);\n                 if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 671, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 672, 
          "faulty": "if (ch == 'y') {\n  return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n}", 
          "type": "Replace", 
          "seed": "ch=Character.toLowerCase(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 678, 
          "faulty": "return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", 
          "type": "Delete", 
          "seed": "if (ch == null) {\n  throw new IllegalArgumentException(\"The Character must not be null\");\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1070/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:32.145240903 -0500\n@@ -681,19 +681,20 @@\n                 }\n             }\n             case 4: {\n-                char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n-                if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n-                }\n+                char ch = ' ';\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n             }\n         }\n         return false;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 691, 
          "faulty": "if (ch == 'T') {\n  return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n}", 
          "type": "Delete", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 684, 
          "faulty": "char ch=str.charAt(0);", 
          "type": "Replace", 
          "seed": "char ch=' ';"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_859/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:39.128981551 -0500\n@@ -674,7 +674,10 @@\n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n+                if (str.length() == 0) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t\tif (ch == 'Y') {\n                     return \n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n@@ -682,17 +685,20 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n-                    return \n-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 692, 
          "faulty": "return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');", 
          "type": "Delete", 
          "seed": "str=str.toLowerCase();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "InsertBefore", 
          "seed": "if (str.length() == 0) {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_872/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:17:42.352997322 -0500\n@@ -657,7 +657,10 @@\n             return true;\n         }\n         if (str == null) {\n-            return false;\n+            if (str == \"true\") {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\treturn false;\n         }\n         switch (str.length()) {\n             case 2: {\n@@ -682,12 +685,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 660, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (str == \"true\") {\n  return true;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1213/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:19:08.277417665 -0500\n@@ -654,7 +654,17 @@\n         // Similar performance for null, 'false', and other strings not length 2/3/4.\n         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n         if (str == \"true\") {\n-            return true;\n+            if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.TRUE;\n+\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\treturn Boolean.FALSE;\n+\t\t\t}\n         }\n         if (str == null) {\n             return false;\n@@ -682,12 +692,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 657, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1431/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:20:10.229720755 -0500\n@@ -670,9 +670,6 @@\n             case 3: {\n                 char ch = str.charAt(0);\n                 if (ch == 'y') {\n-                    return \n-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n                 if (ch == 'Y') {\n                     return \n@@ -682,12 +679,19 @@\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 673, 
          "faulty": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", 
          "type": "Delete", 
          "seed": "return str == null || str.length() == 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 686, 
          "faulty": "return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');", 
          "type": "Replace", 
          "seed": "return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:11:58.747316711 -0500\n+++ /tmp/Arja_Defects4J_Lang_51/patches_elk5/Patch_1095/patched/tmp/Arja_Defects4J_Lang_51/src/java/org/apache/commons/lang/BooleanUtils.java\t2018-12-01 05:18:38.253270783 -0500\n@@ -674,20 +674,22 @@\n                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                         (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                 }\n-                if (ch == 'Y') {\n-                    return \n-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n-                }\n             }\n             case 4: {\n                 char ch = str.charAt(0);\n-                if (ch == 't') {\n-                    return \n-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n-                }\n+                if (\"true\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"false\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"on\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"off\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t} else if (\"yes\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.TRUE;\n+\t\t\t\t} else if (\"no\".equalsIgnoreCase(str)) {\n+\t\t\t\t\treturn Boolean.FALSE;\n+\t\t\t\t}\n                 if (ch == 'T') {\n                     return \n                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 677, 
          "faulty": "if (ch == 'Y') {\n  return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n}", 
          "type": "Delete", 
          "seed": "return Character.isWhitespace(ch);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/BooleanUtils.java", 
          "line": 685, 
          "faulty": "if (ch == 't') {\n  return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n}", 
          "type": "Replace", 
          "seed": "if (\"true\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"false\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"on\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"off\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}\n else if (\"yes\".equalsIgnoreCase(str)) {\n  return Boolean.TRUE;\n}\n else if (\"no\".equalsIgnoreCase(str)) {\n  return Boolean.FALSE;\n}"
        }
      ]
    }
  ]
}