{
  "repair_end": "2018-12-01 11:32:49.107819", 
  "repair_begin": "2018-12-01 11:15:51.640739", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 293, 
          "faulty": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_972/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:03.054057915 -0500\n@@ -290,7 +290,10 @@\n             milliseconds += 1000;\n             seconds -= 1;\n         }\n-        while (seconds < 0) {\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\twhile (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n         }\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1581/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:33.035781658 -0500\n@@ -353,7 +353,10 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\t\thours += 24 * days;\n+\t\t\t\tdays = 0;\n+\t\t\t}\n             seconds = 0;\n         }\n \n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Delete", 
          "seed": "days=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_927/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:44.393896550 -0500\n@@ -282,7 +282,11 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n@@ -345,7 +349,6 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 306, 
          "faulty": "days+=31;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1002/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:11.214127943 -0500\n@@ -303,7 +303,11 @@\n             days -= 1;\n         }\n         while (days < 0) {\n-            days += 31;\n+            if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\tdays += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_613/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:17.952555241 -0500\n@@ -315,7 +315,7 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        end.setTime(new Date(endMillis));\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 275, 
          "faulty": "start.setTime(new Date(startMillis));", 
          "type": "InsertBefore", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_643/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:31.808689073 -0500\n@@ -272,7 +272,8 @@\n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n-        start.setTime(new Date(startMillis));\n+        start.add(Calendar.DATE, -1);\n+\t\tstart.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_535/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:56.696346459 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -313,7 +314,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 275, 
          "faulty": "start.setTime(new Date(startMillis));", 
          "type": "InsertBefore", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1233/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:28.078773581 -0500\n@@ -272,7 +272,8 @@\n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n-        start.setTime(new Date(startMillis));\n+        start.add(Calendar.DATE, -1);\n+\t\tstart.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n@@ -313,7 +314,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Replace", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1468/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:54.859478047 -0500\n@@ -354,7 +354,9 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n+            if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t\t}\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1932/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:19.305054790 -0500\n@@ -341,7 +341,11 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n+            while (days < 0) {\n+\t\t\t\tdays += 31;\n+\t\t\t\tmonths -= 1;\n+\t\t\t}\n+\t\t\thours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_682/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:48.444847553 -0500\n@@ -329,7 +329,10 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\t\tseconds = 0;\n+\t\t\t\t}\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 275, 
          "faulty": "start.setTime(new Date(startMillis));", 
          "type": "InsertBefore", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_721/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:04.941002465 -0500\n@@ -267,12 +267,16 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n-        start.setTime(new Date(startMillis));\n+        start.add(Calendar.DATE, -1);\n+\t\tstart.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Replace", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1470/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:55.183480638 -0500\n@@ -354,7 +354,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n+            while (minutes < 0) {\n+\t\t\t\tminutes += 60;\n+\t\t\t\thours -= 1;\n+\t\t\t}\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 293, 
          "faulty": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_284/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:12.891506275 -0500\n@@ -290,7 +290,11 @@\n             milliseconds += 1000;\n             seconds -= 1;\n         }\n-        while (seconds < 0) {\n+        if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\tseconds = 0;\n+\t\t}\n+\t\twhile (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n         }\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1799/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:01.000470140 -0500\n@@ -282,7 +282,11 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n@@ -313,7 +317,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "months-=1;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1828/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:21.188622571 -0500\n@@ -304,12 +304,6 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n         }\n         while (months < 0) {\n             months += 12;\n@@ -346,7 +340,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +428,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_633/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:23.480608841 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -313,7 +316,7 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            months += 12 * years;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 274, 
          "faulty": "Calendar start=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "InsertBefore", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_937/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:47.357922299 -0500\n@@ -269,7 +269,10 @@\n \n         Token[] tokens = lexx(format);\n \n-        // timezones get funky around 0, so normalizing everything to GMT \n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\t// timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n@@ -313,7 +316,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +437,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n+\t\t\tend.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 274, 
          "faulty": "Calendar start=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_406/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:59.571834440 -0500\n@@ -269,7 +269,10 @@\n \n         Token[] tokens = lexx(format);\n \n-        // timezones get funky around 0, so normalizing everything to GMT \n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\t// timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1854/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:33.696715663 -0500\n@@ -435,8 +435,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "seconds=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Delete", 
          "seed": "years=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1066/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:34.826328862 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -342,7 +337,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -435,7 +429,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "end=(Calendar)start.clone();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "months-=1;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_453/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:17.155958336 -0500\n@@ -350,10 +350,9 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            end = (Calendar) start.clone();\n             seconds = 0;\n         }\n \n@@ -436,7 +435,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_443/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:14.491939556 -0500\n@@ -313,7 +313,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1324/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:55.386997690 -0500\n@@ -353,7 +353,6 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +434,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(Calendar.DATE, -1);\n+\t\t\tend.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 275, 
          "faulty": "start.setTime(new Date(startMillis));", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1830/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:21.520625043 -0500\n@@ -273,6 +273,7 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n+\t\tstart.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Delete", 
          "seed": "end.setTime(new Date(endMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "InsertBefore", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "InsertBefore", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_373/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:49.987766972 -0500\n@@ -304,12 +304,6 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n         }\n         while (months < 0) {\n             months += 12;\n@@ -342,7 +336,8 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n+            seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n+\t\t\tdays = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -435,7 +430,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n+\t\t\tend.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 283, 
          "faulty": "int hours=end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);", 
          "type": "InsertBefore", 
          "seed": "end.setTime(new Date(endMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1835/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:22.488632248 -0500\n@@ -280,7 +280,8 @@\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n-        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n+        end.setTime(new Date(endMillis));\n+\t\tint hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1965/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:29.021126975 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -436,7 +439,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1333/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:03.699065433 -0500\n@@ -350,7 +350,11 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n+            if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\tminutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_461/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:19.443974467 -0500\n@@ -353,7 +353,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_533/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:56.368343203 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1914/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:08.416973873 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -346,7 +349,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n+            if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +441,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1508/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:11.595611558 -0500\n@@ -349,7 +349,7 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            end.add(Calendar.DATE, -1);\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1536/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:19.395673560 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -435,8 +430,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 1;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "Replace", 
          "seed": "hours+=24 * days;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Replace", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2076/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:20.861511819 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -311,10 +312,10 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "return format(tokens,years,months,days,hours,minutes,seconds,milliseconds,padWithZeros);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "hours+=24 * days;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1209/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:21.578719867 -0500\n@@ -346,7 +346,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -354,7 +353,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_641/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:31.480685925 -0500\n@@ -435,8 +435,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_551/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:00.956388652 -0500\n@@ -302,7 +302,11 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n@@ -329,7 +333,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, -1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 280, 
          "faulty": "int milliseconds=end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_344/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:36.039668865 -0500\n@@ -276,7 +276,8 @@\n         Calendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n-        // initial estimates\n+        start.setTime(new Date(startMillis));\n+\t\t// initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n@@ -354,7 +355,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "end.setTime(new Date(endMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1642/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:51.923930699 -0500\n@@ -298,13 +298,14 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+end.setTime(new Date(endMillis));\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.MONTH,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_240/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:42.895296042 -0500\n@@ -353,7 +353,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            end.add(Calendar.MONTH, 1);\n             seconds = 0;\n         }\n \n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Delete", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_341/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:35.379664225 -0500\n@@ -345,7 +345,6 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +434,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 266, 
          "faulty": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}", 
          "type": "Delete", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_701/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:59.400950678 -0500\n@@ -263,10 +263,6 @@\n             TimeZone timezone) {\n \n         long millis = endMillis - startMillis;\n-        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n-            return formatDuration(millis, format, padWithZeros);\n-        }\n-\n         Token[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n@@ -312,7 +308,11 @@\n             months -= 1;\n         }\n         while (months < 0) {\n-            months += 12;\n+            while (minutes < 0) {\n+\t\t\t\tminutes += 60;\n+\t\t\t\thours -= 1;\n+\t\t\t}\n+\t\t\tmonths += 12;\n             years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "hours=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_526/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:54.400323643 -0500\n@@ -294,10 +294,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1890/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:49.832835701 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        while (minutes < 0) {\n+\t\t\tminutes += 60;\n+\t\t\thours -= 1;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_279/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:11.571497012 -0500\n@@ -436,7 +436,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 282, 
          "faulty": "int minutes=end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1447/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:48.683428605 -0500\n@@ -279,7 +279,10 @@\n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n-        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tint minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "milliseconds+=1000 * seconds;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_313/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:22.107570972 -0500\n@@ -304,7 +304,8 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+milliseconds += 1000 * seconds;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -436,7 +437,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1462/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:53.223464959 -0500\n@@ -302,7 +302,11 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (minutes < 0) {\n+\t\t\tminutes += 60;\n+\t\t\thours -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1049/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:29.910287234 -0500\n@@ -353,7 +353,11 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\t\thours += 24 * days;\n+\t\t\t\tdays = 0;\n+\t\t\t}\n+\t\t\tmilliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1951/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:24.801095625 -0500\n@@ -283,7 +283,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        while (days < 0) {\n+\t\t\tdays += 31;\n+\t\t\tmonths -= 1;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_907/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:38.453844811 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -298,7 +301,11 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -435,7 +442,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "hours+=24 * days;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_658/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:35.764726973 -0500\n@@ -311,7 +311,16 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n+        if (!Token.containsTokenWithValue(tokens, y)) {\n+\t\t\tif (Token.containsTokenWithValue(tokens, M)) {\n+\t\t\t\tmonths += 12 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t} else {\n+\t\t\t\tdays += 365 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t}\n+\t\t}\n+\t\twhile (months < 0) {\n             months += 12;\n             years -= 1;\n         }\n@@ -346,7 +355,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +443,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 331, 
          "faulty": "months+=12 * years;", 
          "type": "InsertBefore", 
          "seed": "hours-=reduceAndCorrect(start,end,Calendar.HOUR_OF_DAY,hours);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,M)) {\n  days+=end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);\n  months=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1539/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:20.051678768 -0500\n@@ -282,8 +282,17 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        if (!Token.containsTokenWithValue(tokens, M)) {\n+\t\t\tdays += end.get(Calendar.DAY_OF_YEAR)\n+\t\t\t\t\t- start.get(Calendar.DAY_OF_YEAR);\n+\t\t\tmonths = 0;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -328,7 +337,9 @@\n         // number of months and get the real count and not just 0->11.\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n-                months += 12 * years;\n+                hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY,\n+\t\t\t\t\t\thours);\n+\t\t\t\tmonths += 12 * years;\n                 years = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n@@ -435,7 +446,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 266, 
          "faulty": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "seconds=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_762/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:16.769112248 -0500\n@@ -264,6 +264,9 @@\n \n         long millis = endMillis - startMillis;\n         if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tif (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n@@ -285,11 +288,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "InsertBefore", 
          "seed": "end=(Calendar)start.clone();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_568/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:05.816436570 -0500\n@@ -350,7 +350,8 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n+            end = (Calendar) start.clone();\n+\t\t\tminutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "seconds+=60 * minutes;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_611/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:17.624552051 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -345,7 +348,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            seconds += 60 * minutes;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "end.add(Calendar.MONTH,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_369/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:49.007760077 -0500\n@@ -353,7 +353,6 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1230/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:27.426768199 -0500\n@@ -302,7 +302,11 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (minutes < 0) {\n+\t\t\tminutes += 60;\n+\t\t\thours -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n@@ -329,7 +333,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Delete", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1241/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:30.390792651 -0500\n@@ -345,7 +345,6 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,8 +434,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "InsertBefore", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_847/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:16.161648929 -0500\n@@ -341,7 +341,8 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n+            seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n+\t\t\thours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Replace", 
          "seed": "milliseconds+=1000 * seconds;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_790/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:35.961288222 -0500\n@@ -349,7 +349,7 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            milliseconds += 1000 * seconds;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_173/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:09.919065592 -0500\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_499/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:35.320131934 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\tseconds = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -329,7 +333,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Delete", 
          "seed": "years=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_242/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:43.223298338 -0500\n@@ -342,7 +342,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 331, 
          "faulty": "months+=12 * years;", 
          "type": "InsertBefore", 
          "seed": "days-=reduceAndCorrect(start,end,Calendar.DAY_OF_MONTH,days);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1015/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:15.090161097 -0500\n@@ -328,7 +328,9 @@\n         // number of months and get the real count and not just 0->11.\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n-                months += 12 * years;\n+                days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH,\n+\t\t\t\t\t\tdays);\n+\t\t\t\tmonths += 12 * years;\n                 years = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "seconds+=60 * minutes;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1495/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:08.023583119 -0500\n@@ -345,7 +345,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            seconds += 60 * minutes;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,8 +435,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_991/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:08.238102441 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\tseconds += 60 * minutes;\n+\t\t\tminutes = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -349,7 +353,7 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            end.add(Calendar.DATE, -1);\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 282, 
          "faulty": "int minutes=end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "hours-=reduceAndCorrect(start,end,Calendar.HOUR_OF_DAY,hours);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_963/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:00.518036086 -0500\n@@ -279,7 +279,10 @@\n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n-        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tint minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n@@ -311,10 +314,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "months+=12;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Replace", 
          "seed": "milliseconds+=1000 * seconds;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_364/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:47.651750534 -0500\n@@ -294,17 +294,14 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+start.add(Calendar.DATE, -1);\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -349,7 +346,7 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            milliseconds += 1000 * seconds;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1490/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:06.691572506 -0500\n@@ -283,7 +283,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        while (days < 0) {\n+\t\t\tdays += 31;\n+\t\t\tmonths -= 1;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -298,10 +302,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "seconds+=60 * minutes;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_656/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:35.436723835 -0500\n@@ -304,7 +304,8 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+seconds += 60 * minutes;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1881/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:41.504773756 -0500\n@@ -313,9 +313,8 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        end.setTime(new Date(endMillis));\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -345,7 +344,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 293, 
          "faulty": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_734/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:08.557036138 -0500\n@@ -290,10 +290,6 @@\n             milliseconds += 1000;\n             seconds -= 1;\n         }\n-        while (seconds < 0) {\n-            seconds += 60;\n-            minutes -= 1;\n-        }\n         while (minutes < 0) {\n             minutes += 60;\n             hours -= 1;\n@@ -435,8 +431,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_827/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:10.313597075 -0500\n@@ -329,7 +329,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Delete", 
          "seed": "milliseconds+=1000 * seconds;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1207/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:21.254717186 -0500\n@@ -349,7 +349,6 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_951/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:56.942005253 -0500\n@@ -283,7 +283,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "hours+=24 * days;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_318/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:23.115578051 -0500\n@@ -304,7 +304,8 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+hours += 24 * days;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -353,7 +354,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 266, 
          "faulty": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_849/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:16.497651901 -0500\n@@ -264,6 +264,9 @@\n \n         long millis = endMillis - startMillis;\n         if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tif (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1071/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:36.146340021 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\tseconds = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -353,7 +357,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,8 +439,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_399/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:57.579820413 -0500\n@@ -435,8 +435,9 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, 1);\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_329/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:32.111641255 -0500\n@@ -304,12 +304,10 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n+while (months < 0) {\n+\t\t\t\tmonths += 12;\n+\t\t\t\tyears -= 1;\n+\t\t\t}\n         }\n         while (months < 0) {\n             months += 12;\n@@ -435,7 +433,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(Calendar.DATE, -1);\n+\t\t\tend.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_316/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:22.787575747 -0500\n@@ -313,7 +313,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "return formatPeriod(startMillis,endMillis,format,true,TimeZone.getDefault());"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_796/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:43.305354888 -0500\n@@ -350,11 +350,9 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_978/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:04.666071774 -0500\n@@ -304,7 +304,11 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "seconds+=60 * minutes;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Delete", 
          "seed": "return formatDuration(millis,format,padWithZeros);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_516/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:51.360293352 -0500\n@@ -298,13 +298,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+seconds += 60 * minutes;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -342,7 +339,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1587/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:34.659794501 -0500\n@@ -282,7 +282,11 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n@@ -354,7 +358,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 293, 
          "faulty": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}", 
          "type": "Replace", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1131/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:54.054490709 -0500\n@@ -290,10 +290,9 @@\n             milliseconds += 1000;\n             seconds -= 1;\n         }\n-        while (seconds < 0) {\n-            seconds += 60;\n-            minutes -= 1;\n-        }\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n         while (minutes < 0) {\n             minutes += 60;\n             hours -= 1;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "InsertBefore", 
          "seed": "minutes+=60 * hours;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_699/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:59.048947381 -0500\n@@ -312,7 +312,8 @@\n             months -= 1;\n         }\n         while (months < 0) {\n-            months += 12;\n+            minutes += 60 * hours;\n+\t\t\tmonths += 12;\n             years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n@@ -350,7 +351,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1668/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:59.403989524 -0500\n@@ -298,7 +298,11 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -353,7 +357,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "hours=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_697/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:58.720944306 -0500\n@@ -294,10 +294,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -311,10 +307,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +427,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "InsertBefore", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2102/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:39.385649223 -0500\n@@ -315,7 +315,8 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        end.setTime(new Date(endMillis));\n+\t\tmilliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1320/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:54.406989689 -0500\n@@ -312,7 +312,11 @@\n             months -= 1;\n         }\n         while (months < 0) {\n-            months += 12;\n+            while (minutes < 0) {\n+\t\t\t\tminutes += 60;\n+\t\t\t\thours -= 1;\n+\t\t\t}\n+\t\t\tmonths += 12;\n             years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1355/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:09.879115665 -0500\n@@ -273,7 +273,10 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -311,7 +314,16 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n+        if (!Token.containsTokenWithValue(tokens, y)) {\n+\t\t\tif (Token.containsTokenWithValue(tokens, M)) {\n+\t\t\t\tmonths += 12 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t} else {\n+\t\t\t\tdays += 365 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t}\n+\t\t}\n+\t\twhile (months < 0) {\n             months += 12;\n             years -= 1;\n         }\n@@ -435,7 +447,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_788/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:35.637285271 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -311,7 +312,11 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n+        if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\thours += 24 * days;\n+\t\t\tdays = 0;\n+\t\t}\n+\t\twhile (months < 0) {\n             months += 12;\n             years -= 1;\n         }\n@@ -346,7 +351,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1472/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:55.507483229 -0500\n@@ -298,7 +298,11 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_909/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:38.825848057 -0500\n@@ -299,6 +299,10 @@\n             hours -= 1;\n         }\n         while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_858/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:18.773672025 -0500\n@@ -298,7 +298,11 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -315,7 +319,10 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +442,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_466/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:20.751983692 -0500\n@@ -282,7 +282,11 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_584/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:09.768475368 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1442/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:47.691420655 -0500\n@@ -345,7 +345,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "days+=31;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1907/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:00.776917079 -0500\n@@ -304,7 +304,11 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -350,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1842/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:24.452646868 -0500\n@@ -311,10 +311,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -353,7 +349,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 282, 
          "faulty": "int minutes=end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_870/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:22.013700620 -0500\n@@ -279,7 +279,10 @@\n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n-        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tint minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n@@ -350,7 +353,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "if (Token.containsTokenWithValue(tokens,M)) {\n  months+=12 * years;\n  years=0;\n}\n else {\n  days+=365 * years;\n  years=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1039/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:27.310265175 -0500\n@@ -311,10 +311,15 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n+        if (!Token.containsTokenWithValue(tokens, y)) {\n+\t\t\tif (Token.containsTokenWithValue(tokens, M)) {\n+\t\t\t\tmonths += 12 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t} else {\n+\t\t\t\tdays += 365 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t}\n+\t\t}\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -341,7 +346,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,M)) {\n  days+=end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);\n  months=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_597/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:13.684513664 -0500\n@@ -283,7 +283,12 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        if (!Token.containsTokenWithValue(tokens, M)) {\n+\t\t\tdays += end.get(Calendar.DAY_OF_YEAR)\n+\t\t\t\t\t- start.get(Calendar.DAY_OF_YEAR);\n+\t\t\tmonths = 0;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -435,7 +440,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 277, 
          "faulty": "end.setTime(new Date(endMillis));", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1531/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:18.099663268 -0500\n@@ -274,7 +274,8 @@\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n-        end.setTime(new Date(endMillis));\n+        end.add(Calendar.DATE, -1);\n+\t\tend.setTime(new Date(endMillis));\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 437, 
          "faulty": "int newdiff=startValue - endValue;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1347/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:07.599097145 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\tseconds = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -434,7 +438,8 @@\n         int endValue = end.get(field);\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n-            int newdiff = startValue - endValue;\n+            end.add(Calendar.DATE, -1);\n+\t\t\tint newdiff = startValue - endValue;\n             end.add( field, newdiff );\n             return newdiff;\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "hours+=24 * days;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1217/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:23.526735980 -0500\n@@ -315,7 +315,11 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tmilliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -346,7 +350,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_967/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:01.762046798 -0500\n@@ -302,7 +302,11 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_843/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:15.165640111 -0500\n@@ -435,7 +435,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1865/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:36.936739772 -0500\n@@ -304,7 +304,11 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -329,7 +333,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1366/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:13.143142148 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\tseconds += 60 * minutes;\n+\t\t\tminutes = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "seconds+=60 * minutes;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1212/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:22.230725262 -0500\n@@ -345,7 +345,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            seconds += 60 * minutes;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1166/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:04.154575130 -0500\n@@ -350,7 +350,11 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n+            while (hours < 0) {\n+\t\t\t\thours += 24;\n+\t\t\t\tdays -= 1;\n+\t\t\t}\n+\t\t\tminutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "hours+=24 * days;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 306, 
          "faulty": "days+=31;", 
          "type": "InsertBefore", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1205/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:20.922714439 -0500\n@@ -303,7 +303,11 @@\n             days -= 1;\n         }\n         while (days < 0) {\n-            days += 31;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n+\t\t\tdays += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n@@ -346,7 +350,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_427/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:10.543911732 -0500\n@@ -311,10 +311,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "minutes=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Replace", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_260/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:48.847337713 -0500\n@@ -304,16 +304,10 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n+seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -345,7 +339,9 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t\t}\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1160/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:02.538561649 -0500\n@@ -313,7 +313,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -345,7 +348,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1802/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:01.644475131 -0500\n@@ -346,7 +346,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,8 +434,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "seconds=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1500/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:09.335593567 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -329,7 +324,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +430,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "months-=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1246/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:31.698803431 -0500\n@@ -329,7 +329,11 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\t\tseconds = 0;\n+\t\t\t\t}\n+\t\t\t\tyears = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -341,7 +345,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 277, 
          "faulty": "end.setTime(new Date(endMillis));", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.MONTH,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1114/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:48.822446819 -0500\n@@ -274,7 +274,8 @@\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n-        end.setTime(new Date(endMillis));\n+        end.add(Calendar.MONTH, 1);\n+\t\tend.setTime(new Date(endMillis));\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "hours=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_476/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:29.408071742 -0500\n@@ -294,10 +294,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -435,7 +431,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "milliseconds+=1000 * seconds;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_384/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:52.971787973 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -436,7 +431,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_723/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:05.269005523 -0500\n@@ -273,7 +273,10 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -329,7 +332,10 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\t\tseconds = 0;\n+\t\t\t\t}\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +441,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "end.add(Calendar.MONTH,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1680/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:02.664015129 -0500\n@@ -298,7 +298,11 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n+\t\twhile (hours < 0) {\n             hours += 24;\n             days -= 1;\n         }\n@@ -353,7 +357,6 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_628/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:22.184596300 -0500\n@@ -354,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "months-=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_571/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:06.472443021 -0500\n@@ -313,7 +313,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -341,7 +344,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_880/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:24.621723593 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -313,7 +308,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\t\tminutes += 60 * hours;\n+\t\t\t\thours = 0;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -345,7 +343,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1833/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:22.164629837 -0500\n@@ -298,10 +298,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n@@ -353,7 +353,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "hours=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "hours+=24 * days;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1519/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:14.835637330 -0500\n@@ -294,10 +294,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -346,7 +342,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,8 +430,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 437, 
          "faulty": "int newdiff=startValue - endValue;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1018/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:15.738166633 -0500\n@@ -434,8 +434,8 @@\n         int endValue = end.get(field);\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n-            int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(Calendar.DATE, -1);\n+\t\t\tint newdiff = startValue - endValue;\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 274, 
          "faulty": "Calendar start=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "return format(tokens,years,months,days,hours,minutes,seconds,milliseconds,padWithZeros);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_334/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:33.419650449 -0500\n@@ -269,7 +269,10 @@\n \n         Token[] tokens = lexx(format);\n \n-        // timezones get funky around 0, so normalizing everything to GMT \n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\t// timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n@@ -329,7 +332,8 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                return format(tokens, years, months, days, hours, minutes,\n+\t\t\t\t\t\tseconds, milliseconds, padWithZeros);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -349,7 +353,8 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            end.add(Calendar.DATE, -1);\n+\t\t\tseconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +440,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 281, 
          "faulty": "int seconds=end.get(Calendar.SECOND) - start.get(Calendar.SECOND);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1272/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:39.526867830 -0500\n@@ -278,7 +278,10 @@\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n-        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tint seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 331, 
          "faulty": "months+=12 * years;", 
          "type": "InsertBefore", 
          "seed": "hours-=reduceAndCorrect(start,end,Calendar.HOUR_OF_DAY,hours);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Delete", 
          "seed": "years-=reduceAndCorrect(start,end,Calendar.YEAR,years);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2084/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:22.793526153 -0500\n@@ -311,10 +311,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -328,7 +324,9 @@\n         // number of months and get the real count and not just 0->11.\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n-                months += 12 * years;\n+                hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY,\n+\t\t\t\t\t\thours);\n+\t\t\t\tmonths += 12 * years;\n                 years = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n@@ -349,11 +347,10 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +432,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1283/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:42.766894425 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -315,7 +316,7 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        end.setTime(new Date(endMillis));\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "end.add(Calendar.MONTH,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1091/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:42.350392374 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\tseconds += 60 * minutes;\n+\t\t\tminutes = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -346,14 +350,12 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 331, 
          "faulty": "months+=12 * years;", 
          "type": "InsertBefore", 
          "seed": "hours-=reduceAndCorrect(start,end,Calendar.HOUR_OF_DAY,hours);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_651/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:34.104711087 -0500\n@@ -328,7 +328,9 @@\n         // number of months and get the real count and not just 0->11.\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n-                months += 12 * years;\n+                hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY,\n+\t\t\t\t\t\thours);\n+\t\t\t\tmonths += 12 * years;\n                 years = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1925/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:17.357040315 -0500\n@@ -354,7 +354,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n+            if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t\t}\n+\t\t\tseconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "if (Token.containsTokenWithValue(tokens,M)) {\n  months+=12 * years;\n  years=0;\n}\n else {\n  days+=365 * years;\n  years=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_679/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:47.796841424 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -311,10 +315,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1168/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:04.482577865 -0500\n@@ -302,9 +302,17 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (minutes < 0) {\n+\t\t\tminutes += 60;\n+\t\t\thours -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\tseconds = 0;\n+\t\t\t}\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +443,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1968/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:29.681131878 -0500\n@@ -294,10 +294,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -329,7 +325,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_487/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:32.064098833 -0500\n@@ -311,7 +311,11 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n+        if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\thours += 24 * days;\n+\t\t\tdays = 0;\n+\t\t}\n+\t\twhile (months < 0) {\n             months += 12;\n             years -= 1;\n         }\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Delete", 
          "seed": "years=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "throw new UnsupportedOperationException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1648/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:53.535943386 -0500\n@@ -342,7 +342,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -350,7 +349,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 277, 
          "faulty": "end.setTime(new Date(endMillis));", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "InsertBefore", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1025/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:23.382231793 -0500\n@@ -274,7 +274,8 @@\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n-        end.setTime(new Date(endMillis));\n+        start.setTime(new Date(startMillis));\n+\t\tend.setTime(new Date(endMillis));\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n@@ -435,7 +436,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n+\t\t\tend.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_519/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:52.012299858 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -283,7 +284,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        while (days < 0) {\n+\t\t\tdays += 31;\n+\t\t\tmonths -= 1;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -436,7 +441,7 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            return 0;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_419/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:08.243895524 -0500\n@@ -345,7 +345,11 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\t\thours += 24 * days;\n+\t\t\t\tdays = 0;\n+\t\t\t}\n+\t\t\tminutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +439,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 1;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1683/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:03.340020436 -0500\n@@ -435,8 +435,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(field, -1 * difference);\n+            return 1;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Replace", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1934/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:19.629057197 -0500\n@@ -346,11 +346,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n+            start.add(Calendar.DATE, -1);\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "months+=12 * years;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_766/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:17.749121297 -0500\n@@ -313,7 +313,7 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            months += 12 * years;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "years-=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_943/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:48.977936354 -0500\n@@ -298,10 +298,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n@@ -354,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1095/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:43.318400528 -0500\n@@ -329,7 +329,10 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\t\tseconds = 0;\n+\t\t\t\t}\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -350,7 +353,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,8 +437,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "InsertBefore", 
          "seed": "days=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1742/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:44.068338654 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -345,7 +340,8 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n+\t\t\tminutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1791/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:58.724452490 -0500\n@@ -312,7 +312,11 @@\n             months -= 1;\n         }\n         while (months < 0) {\n-            months += 12;\n+            if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\t\tseconds += 60 * minutes;\n+\t\t\t\tminutes = 0;\n+\t\t\t}\n+\t\t\tmonths += 12;\n             years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Delete", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_874/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:22.985709187 -0500\n@@ -345,7 +345,6 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1379/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:16.755171420 -0500\n@@ -435,8 +435,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 0;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1043/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:28.286273459 -0500\n@@ -345,7 +345,9 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t\t}\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 274, 
          "faulty": "Calendar start=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2051/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:13.121454390 -0500\n@@ -269,7 +269,10 @@\n \n         Token[] tokens = lexx(format);\n \n-        // timezones get funky around 0, so normalizing everything to GMT \n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\t// timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n@@ -353,7 +356,6 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "months+=12;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Replace", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_494/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:34.020118732 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -294,10 +295,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -435,7 +432,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n+            end.add(field, -1 * difference);\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Delete", 
          "seed": "end.add(Calendar.MONTH,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_575/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:07.124449428 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -353,7 +356,6 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n             seconds = 0;\n         }\n \n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Delete", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1736/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:42.456326113 -0500\n@@ -283,7 +283,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -304,12 +308,6 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n         }\n         while (months < 0) {\n             months += 12;\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 306, 
          "faulty": "days+=31;", 
          "type": "InsertBefore", 
          "seed": "seconds=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_376/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:50.639771560 -0500\n@@ -303,7 +303,8 @@\n             days -= 1;\n         }\n         while (days < 0) {\n-            days += 31;\n+            seconds = 0;\n+\t\t\tdays += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Replace", 
          "seed": "milliseconds+=1000;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1766/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:50.928391979 -0500\n@@ -342,7 +342,7 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n+            milliseconds += 1000;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 277, 
          "faulty": "end.setTime(new Date(endMillis));", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.MONTH,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 266, 
          "faulty": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_897/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:29.809769182 -0500\n@@ -264,6 +264,9 @@\n \n         long millis = endMillis - startMillis;\n         if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tif (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n@@ -274,7 +277,8 @@\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n         Calendar end = Calendar.getInstance(timezone);\n-        end.setTime(new Date(endMillis));\n+        end.add(Calendar.MONTH, 1);\n+\t\tend.setTime(new Date(endMillis));\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n@@ -315,7 +319,10 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +442,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "if (Token.containsTokenWithValue(tokens,M)) {\n  months+=12 * years;\n  years=0;\n}\n else {\n  days+=365 * years;\n  years=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_855/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:18.113666193 -0500\n@@ -341,7 +341,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 315, 
          "faulty": "months+=12;", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "seconds+=60 * minutes;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_431/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:11.523918638 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -304,7 +308,8 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+seconds += 60 * minutes;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -312,7 +317,11 @@\n             months -= 1;\n         }\n         while (months < 0) {\n-            months += 12;\n+            while (minutes < 0) {\n+\t\t\t\tminutes += 60;\n+\t\t\t\thours -= 1;\n+\t\t\t}\n+\t\t\tmonths += 12;\n             years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n@@ -349,7 +358,11 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            while (days < 0) {\n+\t\t\t\tdays += 31;\n+\t\t\t\tmonths -= 1;\n+\t\t\t}\n+\t\t\tseconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,8 +448,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_673/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:46.144825781 -0500\n@@ -346,7 +346,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1878/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:30:40.848768876 -0500\n@@ -294,10 +294,7 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n+        start.setTime(new Date(startMillis));\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -435,7 +432,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 437, 
          "faulty": "int newdiff=startValue - endValue;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 5;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_868/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:24:21.689697763 -0500\n@@ -434,9 +434,9 @@\n         int endValue = end.get(field);\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n-            int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\tint newdiff = startValue - endValue;\n+            return 5;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1062/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:33.842320538 -0500\n@@ -294,7 +294,8 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n+        start.setTime(new Date(startMillis));\n+\t\twhile (minutes < 0) {\n             minutes += 60;\n             hours -= 1;\n         }\n@@ -435,8 +436,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return newdiff;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_573/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:06.796446205 -0500\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2000/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:31:51.181291545 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -435,8 +438,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "InsertBefore", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_441/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:14.163937244 -0500\n@@ -267,13 +267,17 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -313,7 +317,11 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n+\t\t\tyears -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +443,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,y)) {\n  if (Token.containsTokenWithValue(tokens,M)) {\n    months+=12 * years;\n    years=0;\n  }\n else {\n    days+=365 * years;\n    years=0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1102/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:45.270416959 -0500\n@@ -311,7 +311,16 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n+        if (!Token.containsTokenWithValue(tokens, y)) {\n+\t\t\tif (Token.containsTokenWithValue(tokens, M)) {\n+\t\t\t\tmonths += 12 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t} else {\n+\t\t\t\tdays += 365 * years;\n+\t\t\t\tyears = 0;\n+\t\t\t}\n+\t\t}\n+\t\twhile (months < 0) {\n             months += 12;\n             years -= 1;\n         }\n@@ -435,7 +444,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_603/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:15.312529543 -0500\n@@ -345,8 +345,7 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n-            hours = 0;\n+            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "Replace", 
          "seed": "return 4;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_755/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:14.789093942 -0500\n@@ -435,8 +435,7 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            return 4;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_537/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:57.020349675 -0500\n@@ -350,7 +350,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_736/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:08.885039188 -0500\n@@ -298,10 +298,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (months < 0) {\n+\t\t\tmonths += 12;\n+\t\t\tyears -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "return formatPeriod(startMillis,endMillis,format,true,TimeZone.getDefault());"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Replace", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1431/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:44.419394414 -0500\n@@ -346,7 +346,7 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n+            start.add(Calendar.DATE, -1);\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -354,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Replace", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2099/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:38.737644417 -0500\n@@ -311,10 +311,10 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "InsertBefore", 
          "seed": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_618/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:19.248567832 -0500\n@@ -313,7 +313,11 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            while (seconds < 0) {\n+\t\t\t\tseconds += 60;\n+\t\t\t\tminutes -= 1;\n+\t\t\t}\n+\t\t\tyears -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "years-=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1031/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:25.034245841 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -354,7 +355,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 285, 
          "faulty": "int months=end.get(Calendar.MONTH) - start.get(Calendar.MONTH);", 
          "type": "InsertBefore", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "throw new UnsupportedOperationException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1267/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:38.238857249 -0500\n@@ -282,7 +282,11 @@\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+        while (hours < 0) {\n+\t\t\thours += 24;\n+\t\t\tdays -= 1;\n+\t\t}\n+\t\tint months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n@@ -350,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1708/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:22.284168810 -0500\n@@ -273,7 +273,10 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1145/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:57.990523655 -0500\n@@ -349,7 +349,11 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            while (days < 0) {\n+\t\t\t\tdays += 31;\n+\t\t\t\tmonths -= 1;\n+\t\t\t}\n+\t\t\tseconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_706/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:00.696962815 -0500\n@@ -315,7 +315,11 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\tminutes += 60 * hours;\n+\t\t\thours = 0;\n+\t\t}\n+\t\tmilliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 345, 
          "faulty": "days=0;", 
          "type": "Delete", 
          "seed": "years=0;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1371/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:14.463152850 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -342,7 +337,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n             hours += 24 * days;\n-            days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n@@ -353,7 +347,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +429,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_712/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:02.320978004 -0500\n@@ -329,7 +329,11 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\t\t\tseconds = 0;\n+\t\t\t\t}\n+\t\t\t\tyears = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.MONTH,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1190/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:16.706679509 -0500\n@@ -349,7 +349,7 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            end.add(Calendar.MONTH, 1);\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1689/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:10.664077877 -0500\n@@ -313,7 +313,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\t\tminutes += 60 * hours;\n+\t\t\t\thours = 0;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -350,7 +353,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +437,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 293, 
          "faulty": "while (seconds < 0) {\n  seconds+=60;\n  minutes-=1;\n}", 
          "type": "Delete", 
          "seed": "years-=reduceAndCorrect(start,end,Calendar.YEAR,years);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_353/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:20:44.379727515 -0500\n@@ -290,10 +290,6 @@\n             milliseconds += 1000;\n             seconds -= 1;\n         }\n-        while (seconds < 0) {\n-            seconds += 60;\n-            minutes -= 1;\n-        }\n         while (minutes < 0) {\n             minutes += 60;\n             hours -= 1;\n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Delete", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1402/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:29.599275212 -0500\n@@ -311,10 +311,10 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n+        if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\thours += 24 * days;\n+\t\t\tdays = 0;\n+\t\t}\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -346,7 +346,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Delete", 
          "seed": "end.setTime(new Date(endMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_228/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:39.287270791 -0500\n@@ -304,12 +304,6 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n         }\n         while (months < 0) {\n             months += 12;\n@@ -435,7 +429,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 318, 
          "faulty": "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);", 
          "type": "Replace", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_485/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:31.736095490 -0500\n@@ -315,7 +315,7 @@\n             months += 12;\n             years -= 1;\n         }\n-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n+        end.setTime(new Date(endMillis));\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n@@ -341,7 +341,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "Delete", 
          "seed": "hours=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1340/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:05.635081181 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -294,10 +295,6 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n         while (hours < 0) {\n             hours += 24;\n             days -= 1;\n@@ -435,7 +432,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_510/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:43.976219381 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_410/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:06.259881546 -0500\n@@ -349,7 +349,8 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n+            end.add(Calendar.DATE, -1);\n+\t\t\tseconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "if (Token.containsTokenWithValue(tokens,M)) {\n  months+=12 * years;\n  years=0;\n}\n else {\n  days+=365 * years;\n  years=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1574/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:31.067766086 -0500\n@@ -350,7 +350,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -436,7 +435,8 @@\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n             end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,newdiff);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_439/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:13.823934848 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, s)) {\n+\t\t\tmilliseconds += 1000 * seconds;\n+\t\t\tseconds = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 289, 
          "faulty": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}", 
          "type": "Delete", 
          "seed": "end=(Calendar)start.clone();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_506/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:42.992209480 -0500\n@@ -285,11 +285,6 @@\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n-        // each initial estimate is adjusted in case it is under 0\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n-        }\n         while (seconds < 0) {\n             seconds += 60;\n             minutes -= 1;\n@@ -435,7 +430,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "end.setTime(new Date(endMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1203/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:20.594711723 -0500\n@@ -304,7 +304,8 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+end.setTime(new Date(endMillis));\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1672/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:00.395997318 -0500\n@@ -298,10 +298,10 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 284, 
          "faulty": "int days=end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Delete", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_539/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:57.348352929 -0500\n@@ -281,7 +281,11 @@\n         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\tseconds += 60 * minutes;\n+\t\t\tminutes = 0;\n+\t\t}\n+\t\tint days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n@@ -345,7 +349,6 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 344, 
          "faulty": "hours+=24 * days;", 
          "type": "Delete", 
          "seed": "months-=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 314, 
          "faulty": "while (months < 0) {\n  months+=12;\n  years-=1;\n}", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1141/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:56.998515357 -0500\n@@ -311,10 +311,6 @@\n // be doing no calculating here.\n             months -= 1;\n         }\n-        while (months < 0) {\n-            months += 12;\n-            years -= 1;\n-        }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n@@ -341,7 +337,6 @@\n             months = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, d)) {\n-            hours += 24 * days;\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n@@ -435,7 +430,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Replace", 
          "seed": "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_450/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:16.491953656 -0500\n@@ -304,12 +304,7 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n+seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n         }\n         while (months < 0) {\n             months += 12;\n@@ -345,7 +340,9 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t\t}\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n@@ -435,7 +432,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 266, 
          "faulty": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}", 
          "type": "Delete", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_414/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:06.935886309 -0500\n@@ -263,10 +263,6 @@\n             TimeZone timezone) {\n \n         long millis = endMillis - startMillis;\n-        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n-            return formatDuration(millis, format, padWithZeros);\n-        }\n-\n         Token[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n@@ -435,7 +431,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "start.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_564/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:04.840426965 -0500\n@@ -435,8 +435,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            start.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 352, 
          "faulty": "seconds+=60 * minutes;", 
          "type": "Delete", 
          "seed": "years-=reduceAndCorrect(start,end,Calendar.YEAR,years);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 276, 
          "faulty": "Calendar end=Calendar.getInstance(timezone);", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1658/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:56.459966385 -0500\n@@ -273,7 +273,8 @@\n         // stops the hours being off\n         Calendar start = Calendar.getInstance(timezone);\n         start.setTime(new Date(startMillis));\n-        Calendar end = Calendar.getInstance(timezone);\n+        start.setTime(new Date(startMillis));\n+\t\tCalendar end = Calendar.getInstance(timezone);\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n@@ -349,7 +350,6 @@\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n-            seconds += 60 * minutes;\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,H)) {\n  minutes+=60 * hours;\n  hours=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_994/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:08.898108100 -0500\n@@ -313,7 +313,10 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            if (!Token.containsTokenWithValue(tokens, H)) {\n+\t\t\t\tminutes += 60 * hours;\n+\t\t\t\thours = 0;\n+\t\t\t}\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 297, 
          "faulty": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "start.setTime(new Date(startMillis));"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_989/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:25:07.902099559 -0500\n@@ -294,7 +294,8 @@\n             seconds += 60;\n             minutes -= 1;\n         }\n-        while (minutes < 0) {\n+        start.setTime(new Date(startMillis));\n+\t\twhile (minutes < 0) {\n             minutes += 60;\n             hours -= 1;\n         }\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_662/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:22:42.440790626 -0500\n@@ -329,7 +329,8 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n+\t\t\t\tyears = 0;\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 286, 
          "faulty": "int years=end.get(Calendar.YEAR) - start.get(Calendar.YEAR);", 
          "type": "InsertBefore", 
          "seed": "while (days < 0) {\n  days+=31;\n  months-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1526/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:16.795652908 -0500\n@@ -283,7 +283,11 @@\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n+        while (days < 0) {\n+\t\t\tdays += 31;\n+\t\t\tmonths -= 1;\n+\t\t}\n+\t\tint years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n \n         // each initial estimate is adjusted in case it is under 0\n         while (milliseconds < 0) {\n@@ -350,7 +354,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 281, 
          "faulty": "int seconds=end.get(Calendar.SECOND) - start.get(Calendar.SECOND);", 
          "type": "InsertBefore", 
          "seed": "end.setTime(new Date(endMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1174/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:26:06.134591635 -0500\n@@ -278,7 +278,8 @@\n \n         // initial estimates\n         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n-        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n+        end.setTime(new Date(endMillis));\n+\t\tint seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 305, 
          "faulty": "while (days < 0) {\n  days+=31;\n  months-=1;\n}", 
          "type": "InsertBefore", 
          "seed": "while (minutes < 0) {\n  minutes+=60;\n  hours-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 356, 
          "faulty": "milliseconds+=1000 * seconds;", 
          "type": "Replace", 
          "seed": "start.setTime(new Date(startMillis));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1445/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:27:48.335425817 -0500\n@@ -302,7 +302,11 @@\n             hours += 24;\n             days -= 1;\n         }\n-        while (days < 0) {\n+        while (minutes < 0) {\n+\t\t\tminutes += 60;\n+\t\t\thours -= 1;\n+\t\t}\n+\t\twhile (days < 0) {\n             days += 31;\n //days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n@@ -353,7 +357,7 @@\n             minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n-            milliseconds += 1000 * seconds;\n+            start.setTime(new Date(startMillis));\n             seconds = 0;\n         }\n \n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 439, 
          "faulty": "return newdiff;", 
          "type": "InsertBefore", 
          "seed": "end.add(Calendar.DATE,-1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_412/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:06.607883998 -0500\n@@ -435,8 +435,8 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n-            return newdiff;\n+            end.add(Calendar.DATE, -1);\n+\t\t\treturn newdiff;\n         } else {\n             return 0;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "InsertBefore", 
          "seed": "seconds+=60 * minutes;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 301, 
          "faulty": "while (hours < 0) {\n  hours+=24;\n  days-=1;\n}", 
          "type": "Replace", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_483/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:21:31.404092107 -0500\n@@ -298,13 +298,14 @@\n             minutes += 60;\n             hours -= 1;\n         }\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n+        while (milliseconds < 0) {\n+\t\t\tmilliseconds += 1000;\n+\t\t\tseconds -= 1;\n+\t\t}\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n+seconds += 60 * minutes;\n+\t\t\t//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n // Also it's contextual - if asked for no M in the format then I should probably \n@@ -435,7 +436,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "Delete", 
          "seed": "years-=reduceAndCorrect(start,end,Calendar.YEAR,years);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Delete", 
          "seed": "return formatPeriod(startMillis,endMillis,format,true,TimeZone.getDefault());"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1755/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:47.984369104 -0500\n@@ -313,7 +313,6 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -354,7 +353,6 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +433,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 316, 
          "faulty": "years-=1;", 
          "type": "InsertBefore", 
          "seed": "if (!Token.containsTokenWithValue(tokens,m)) {\n  seconds+=60 * minutes;\n  minutes=0;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,-1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "end.add(Calendar.DATE,1);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1763/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:29:50.284386976 -0500\n@@ -313,7 +313,11 @@\n         }\n         while (months < 0) {\n             months += 12;\n-            years -= 1;\n+            if (!Token.containsTokenWithValue(tokens, m)) {\n+\t\t\t\tseconds += 60 * minutes;\n+\t\t\t\tminutes = 0;\n+\t\t\t}\n+\t\t\tyears -= 1;\n         }\n         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n@@ -329,7 +333,7 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                end.add(Calendar.DATE, 1);\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +439,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 357, 
          "faulty": "seconds=0;", 
          "type": "Replace", 
          "seed": "while (milliseconds < 0) {\n  milliseconds+=1000;\n  seconds-=1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 312, 
          "faulty": "months-=1;", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 270, 
          "faulty": "Token[] tokens=lexx(format);", 
          "type": "InsertBefore", 
          "seed": "if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n  return formatDuration(millis,format,padWithZeros);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_266/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:19:56.227389414 -0500\n@@ -267,7 +267,10 @@\n             return formatDuration(millis, format, padWithZeros);\n         }\n \n-        Token[] tokens = lexx(format);\n+        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {\n+\t\t\treturn formatDuration(millis, format, padWithZeros);\n+\t\t}\n+\t\tToken[] tokens = lexx(format);\n \n         // timezones get funky around 0, so normalizing everything to GMT \n         // stops the hours being off\n@@ -304,12 +307,6 @@\n         }\n         while (days < 0) {\n             days += 31;\n-//days += 31; // TODO: Need tests to show this is bad and the new code is good.\n-// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is \n-// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.\n-// Also it's contextual - if asked for no M in the format then I should probably \n-// be doing no calculating here.\n-            months -= 1;\n         }\n         while (months < 0) {\n             months += 12;\n@@ -354,7 +351,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n-            seconds = 0;\n+            while (milliseconds < 0) {\n+\t\t\t\tmilliseconds += 1000;\n+\t\t\t\tseconds -= 1;\n+\t\t\t}\n         }\n \n         return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n@@ -435,7 +435,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 348, 
          "faulty": "minutes+=60 * hours;", 
          "type": "Replace", 
          "seed": "days=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 353, 
          "faulty": "minutes=0;", 
          "type": "Delete", 
          "seed": "if (!Token.containsTokenWithValue(tokens,s)) {\n  milliseconds+=1000 * seconds;\n  seconds=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2080/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:32:21.825518971 -0500\n@@ -345,12 +345,11 @@\n             days = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n-            minutes += 60 * hours;\n+            days = 0;\n             hours = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n-            minutes = 0;\n         }\n         if (!Token.containsTokenWithValue(tokens, s)) {\n             milliseconds += 1000 * seconds;\n@@ -435,7 +434,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(Calendar.DATE,1);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 332, 
          "faulty": "years=0;", 
          "type": "Replace", 
          "seed": "if (!Token.containsTokenWithValue(tokens,d)) {\n  hours+=24 * days;\n  days=0;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_782/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:23:22.601165998 -0500\n@@ -329,7 +329,10 @@\n         if (!Token.containsTokenWithValue(tokens, y)) {\n             if (Token.containsTokenWithValue(tokens, M)) {\n                 months += 12 * years;\n-                years = 0;\n+                if (!Token.containsTokenWithValue(tokens, d)) {\n+\t\t\t\t\thours += 24 * days;\n+\t\t\t\t\tdays = 0;\n+\t\t\t\t}\n             } else {\n                 // TODO: this is a bit weak, needs work to know about leap years\n                 days += 365 * years;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 438, 
          "faulty": "end.add(field,newdiff);", 
          "type": "Delete", 
          "seed": "end.add(field,-1 * difference);"
        }, 
        {
          "path": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java", 
          "line": 349, 
          "faulty": "hours=0;", 
          "type": "Replace", 
          "seed": "while (months < 0) {\n  months+=12;\n  years-=1;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:15:44.533037303 -0500\n+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1592/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\t2018-12-01 05:28:35.951804716 -0500\n@@ -346,7 +346,10 @@\n         }\n         if (!Token.containsTokenWithValue(tokens, H)) {\n             minutes += 60 * hours;\n-            hours = 0;\n+            while (months < 0) {\n+\t\t\t\tmonths += 12;\n+\t\t\t\tyears -= 1;\n+\t\t\t}\n         }\n         if (!Token.containsTokenWithValue(tokens, m)) {\n             seconds += 60 * minutes;\n@@ -435,7 +438,6 @@\n         int startValue = start.get(field);\n         if (endValue < startValue) {\n             int newdiff = startValue - endValue;\n-            end.add( field, newdiff );\n             return newdiff;\n         } else {\n             return 0;\n\n\n"
    }
  ]
}