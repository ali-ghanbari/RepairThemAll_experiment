cd /tmp/NPEFix_Defects4J_Lang_27;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/RepairThemAll/script/../repair_tools/npefix.jar fr.inria.spirals.npefix.main.run.Main \
    --test org.apache.commons.lang3.math.NumberUtilsTest \
    --iteration 100 \
	--complianceLevel 5 \
	--workingdirectory . \
	--source src/main/java/ \
	--classpath target/classes/:target/test-classes/:/tmp/NPEFix_Defects4J_Lang_27/target/classes/:/tmp/NPEFix_Defects4J_Lang_27/target/test-classes/:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Lang/lib/cglib.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Lang/lib/commons-io.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Lang/lib/easymock.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Lang/lib/asm.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Lang/lib/org/easymock/easymock/2.5.2/easymock-2.5.2.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
TernarySplitter  in 147ms
return (future) != null
return (toClass == null) || (!(toClass.isPrimitive()))
return (MethodUtils.getAccessibleMethod(target.getClass(), methodName, method.getParameterTypes())) != null
return ((mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2))
return ((mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2))
return ((mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2))
return ((mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2))
return ((mObj1) == null ? 0 : mObj1.hashCode()) + ((mObj2) == null ? 0 : mObj2.hashCode())
return ((mObj1) == null ? 0 : mObj1.hashCode()) + ((mObj2) == null ? 0 : mObj2.hashCode())
mTimeZoneForced = timeZone != null
mLocaleForced = locale != null
throw new IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())))
return (registry != null) && ((registry.contains(pair)) || (registry.contains(swappedPair)))
return ((this) == object) || ((null != object) && (object.getClass().equals(this.getClass())))
return (m != null) && (m.containsKey(value))
return ((m != null) && (Modifier.isPublic(m.getModifiers()))) && (!(m.isSynthetic()))
return (cls != null) && ((cls.getEnclosingClass()) != null)
return (cls != null) && ((cls.getEnclosingClass()) != null)
return (cs == null) || ((cs.length()) == 0)
return cs2 == null
return str2 == null
return (str == null) && (prefix == null)
return (str == null) && (prefix == null)
return (str == null) && (suffix == null)
return (str == null) && (suffix == null)
return (registry != null) && (registry.contains(new IDKey(value)))
boolean top = priorVariables == null
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array == null) || ((array.length) == 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
return (array != null) && ((array.length) != 0)
null
CheckNotNull  in 1259ms
ForceNullInit in 96ms
AddImplicitCastChecker --> 0 in 211ms
BeforeDeref --> 2013 (failed:0) in 509ms
target--> 2444 (failed:0) in 1247ms
TryRegister # Try: 66 in 165ms
Assign --> 1597 (failed: 0) in 1209ms
VarInit --> 755 in 399ms
MethodEncapsulation # Method: 1939 in 2310ms
ConstructorEncapsulation # Constructor: 187 in 486ms
VariableFor in 316ms
RMI Selector (Host: 127.0.0.1, Port: 10000): KO
org.apache.commons.lang3.math.NumberUtilsTest#testLang381
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateBigInteger
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToShortStringI
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testStringToDoubleStringD
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumShort
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToShortString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToLongStringL
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToByteStringI
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToFloatString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testStringToDoubleString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumDouble
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToFloatStringF
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testConstructor
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToIntString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToIntStringI
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToLongString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testToByteString
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateDouble
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateLong
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinLong
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinInt
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinShort
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinByte
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinDouble
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxLong
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxInt
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxShort
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxByte
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxDouble
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaxFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumLong
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumInt
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumShort
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumByte
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumLong
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateBigDecimal
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumInt
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testIsNumber
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testIsDigits
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMaximumByte
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCompareFloat
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testLang300
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testConstants
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCompareDouble
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testCreateInteger
<No Strat> Status: Ok
org.apache.commons.lang3.math.NumberUtilsTest#testMinimumDouble
<No Strat> Status: Ok
Multirun 51/100 51%
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
org.apache.commons.lang3.math.NumberUtilsTest#testCreateNumber
<No Strat> Status: Ko
95.78user 1.59system 0:38.84elapsed 250%CPU (0avgtext+0avgdata 1688152maxresident)k
38032inputs+13576outputs (18major+436659minor)pagefaults 0swaps


Node: suno-24.sophia.grid5000.fr



Date: Sat May  4 18:15:13 EDT 2019

