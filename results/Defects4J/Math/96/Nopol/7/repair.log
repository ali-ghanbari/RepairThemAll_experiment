cd /tmp/Nopol_Defects4J_Math_96;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_96/target/classes/:/tmp/Nopol_Defects4J_Math_96/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
22:04:05.262 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/java]
22:04:05.266 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_96/target/classes/, file:/tmp/Nopol_Defects4J_Math_96/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_96/target/classes/, file:/tmp/Nopol_Defects4J_Math_96/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
22:04:05.266 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
22:04:05.267 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BisectionSolverTest, org.apache.commons.math.analysis.BisectionSolverTest, org.apache.commons.math.analysis.BrentSolverTest, org.apache.commons.math.analysis.BrentSolverTest, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.LaguerreSolverTest, org.apache.commons.math.analysis.LaguerreSolverTest, org.apache.commons.math.analysis.MullerSolverTest, org.apache.commons.math.analysis.MullerSolverTest, org.apache.commons.math.analysis.NevilleInterpolatorTest, org.apache.commons.math.analysis.NevilleInterpolatorTest, org.apache.commons.math.analysis.NewtonSolverTest, org.apache.commons.math.analysis.NewtonSolverTest, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.PolynomialFunctionTest, org.apache.commons.math.analysis.PolynomialFunctionTest, org.apache.commons.math.analysis.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.RiddersSolverTest, org.apache.commons.math.analysis.RiddersSolverTest, org.apache.commons.math.analysis.RombergIntegratorTest, org.apache.commons.math.analysis.RombergIntegratorTest, org.apache.commons.math.analysis.SimpsonIntegratorTest, org.apache.commons.math.analysis.SimpsonIntegratorTest, org.apache.commons.math.analysis.SplineInterpolatorTest, org.apache.commons.math.analysis.SplineInterpolatorTest, org.apache.commons.math.analysis.TrapezoidIntegratorTest, org.apache.commons.math.analysis.TrapezoidIntegratorTest, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorImplTest, org.apache.commons.math.linear.RealVectorImplTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest, org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiDirectionalTest, org.apache.commons.math.optimization.MultiDirectionalTest, org.apache.commons.math.optimization.NelderMeadTest, org.apache.commons.math.optimization.NelderMeadTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest]
22:04:05.269 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BisectionSolverTest, org.apache.commons.math.analysis.BisectionSolverTest, org.apache.commons.math.analysis.BrentSolverTest, org.apache.commons.math.analysis.BrentSolverTest, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.LaguerreSolverTest, org.apache.commons.math.analysis.LaguerreSolverTest, org.apache.commons.math.analysis.MullerSolverTest, org.apache.commons.math.analysis.MullerSolverTest, org.apache.commons.math.analysis.NevilleInterpolatorTest, org.apache.commons.math.analysis.NevilleInterpolatorTest, org.apache.commons.math.analysis.NewtonSolverTest, org.apache.commons.math.analysis.NewtonSolverTest, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.PolynomialFunctionTest, org.apache.commons.math.analysis.PolynomialFunctionTest, org.apache.commons.math.analysis.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.RiddersSolverTest, org.apache.commons.math.analysis.RiddersSolverTest, org.apache.commons.math.analysis.RombergIntegratorTest, org.apache.commons.math.analysis.RombergIntegratorTest, org.apache.commons.math.analysis.SimpsonIntegratorTest, org.apache.commons.math.analysis.SimpsonIntegratorTest, org.apache.commons.math.analysis.SplineInterpolatorTest, org.apache.commons.math.analysis.SplineInterpolatorTest, org.apache.commons.math.analysis.TrapezoidIntegratorTest, org.apache.commons.math.analysis.TrapezoidIntegratorTest, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorImplTest, org.apache.commons.math.linear.RealVectorImplTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest, org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiDirectionalTest, org.apache.commons.math.optimization.MultiDirectionalTest, org.apache.commons.math.optimization.NelderMeadTest, org.apache.commons.math.optimization.NelderMeadTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
22:04:05.270 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
22:04:05.277 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 435 MB
22:04:05.277 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
22:04:05.277 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
22:04:05.277 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
22:04:05.278 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
22:04:05.279 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
22:04:19.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
22:04:19.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:272 which is executed by 11 tests
-1378958115
22:04:19.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:22.022 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2567 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:22.022 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:22.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
22:04:22.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:269 which is executed by 11 tests
-1378958115
22:04:22.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
22:04:22.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:258 which is executed by 11 tests
-1378958115
22:04:22.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
22:04:22.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:249 which is executed by 11 tests
-1378958115
22:04:22.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:24.890 [pool-6-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2494 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:24.891 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:24.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
22:04:24.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:246 which is executed by 11 tests
-1378958115
22:04:24.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:27.499 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2506 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:27.499 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:27.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
22:04:27.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:243 which is executed by 11 tests
-1378958115
22:04:27.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
22:04:27.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:255 which is executed by 10 tests
-1378958115
22:04:27.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:30.116 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2405 ms)
<> Total tests run: 56
<> Ignored tests: 0
<> Failed tests: 0

22:04:30.116 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:30.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
22:04:30.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:252 which is executed by 10 tests
-1378958115
22:04:30.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:32.643 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2408 ms)
<> Total tests run: 56
<> Ignored tests: 0
<> Failed tests: 0

22:04:32.644 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:32.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
22:04:32.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:251 which is executed by 10 tests
-1378958115
22:04:32.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:35.142 [pool-14-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2401 ms)
<> Total tests run: 56
<> Ignored tests: 0
<> Failed tests: 0

22:04:35.143 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:35.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
22:04:35.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:250 which is executed by 10 tests
-1378958115
22:04:35.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:37.647 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2409 ms)
<> Total tests run: 56
<> Ignored tests: 0
<> Failed tests: 0

22:04:37.647 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:37.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
22:04:37.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:253 which is executed by 8 tests
-1378958115
22:04:37.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:39.469 [pool-18-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1729 ms)
<> Total tests run: 44
<> Ignored tests: 0
<> Failed tests: 0

22:04:39.470 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:39.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
22:04:39.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:157 which is executed by 16 tests
1013737658
22:04:39.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
22:04:39.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:156 which is executed by 16 tests
1013737658
22:04:39.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:39.706 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (34 ms)
<> Total tests run: 160
<> Ignored tests: 0
<> Failed tests: 0

22:04:39.706 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:39.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
22:04:39.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:155 which is executed by 16 tests
1013737658
22:04:39.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:39.834 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 160
<> Ignored tests: 0
<> Failed tests: 0

22:04:39.835 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:39.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
22:04:39.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:154 which is executed by 16 tests
1013737658
22:04:39.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
22:04:39.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:133 which is executed by 16 tests
1013737658
22:04:40.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
22:04:40.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:132 which is executed by 16 tests
1013737658
22:04:40.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
22:04:40.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:115 which is executed by 16 tests
1013737658
22:04:40.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
22:04:40.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:114 which is executed by 16 tests
1013737658
22:04:40.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
22:04:40.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:229 which is executed by 16 tests
-1129122774
22:04:40.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
22:04:40.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:228 which is executed by 16 tests
-1129122774
22:04:40.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:40.470 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 160
<> Ignored tests: 0
<> Failed tests: 0

22:04:40.470 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:40.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
22:04:40.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:224 which is executed by 16 tests
-1129122774
22:04:40.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:40.575 [pool-26-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 160
<> Ignored tests: 0
<> Failed tests: 0

22:04:40.576 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:40.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:40.596 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (14 ms)
<> Total tests run: 160
<> Ignored tests: 0
<> Failed tests: 0

22:04:40.596 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:40.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
22:04:40.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:243 which is executed by 24 tests
-1670384204
22:04:40.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
22:04:40.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:383 which is executed by 7 tests
1013737658
22:04:40.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:40.776 [pool-30-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:40.776 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:40.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
22:04:40.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:279 which is executed by 7 tests
1013737658
22:04:40.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:40.872 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:40.873 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:40.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
22:04:40.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:278 which is executed by 7 tests
1013737658
22:04:40.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
22:04:40.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:277 which is executed by 7 tests
1013737658
22:04:41.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
22:04:41.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:387 which is executed by 8 tests
1013737658
22:04:41.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
22:04:41.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:382 which is executed by 8 tests
1013737658
22:04:41.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:41.218 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (11 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.218 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:41.233 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (11 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.233 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
22:04:41.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:380 which is executed by 8 tests
1013737658
22:04:41.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:41.342 [pool-38-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.343 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
22:04:41.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:379 which is executed by 8 tests
1013737658
22:04:41.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
22:04:41.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:378 which is executed by 8 tests
1013737658
22:04:41.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:41.531 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.531 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
22:04:41.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:375 which is executed by 8 tests
1013737658
22:04:41.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:41.625 [pool-42-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.626 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:41.637 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:41.638 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:41.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
22:04:41.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:373 which is executed by 8 tests
1013737658
22:04:41.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
22:04:41.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:372 which is executed by 8 tests
1013737658
22:04:41.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
22:04:41.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:371 which is executed by 8 tests
1013737658
22:04:41.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
22:04:41.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:362 which is executed by 8 tests
1013737658
22:04:41.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
22:04:41.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:361 which is executed by 8 tests
1013737658
22:04:42.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:42.053 [pool-46-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:42.053 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:42.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
22:04:42.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:360 which is executed by 8 tests
1013737658
22:04:42.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:42.147 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:42.147 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:42.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
22:04:42.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:268 which is executed by 8 tests
1013737658
22:04:42.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:42.252 [pool-50-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:42.252 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:42.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:42.265 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:42.265 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:42.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
22:04:42.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:267 which is executed by 8 tests
1013737658
22:04:42.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
22:04:42.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:264 which is executed by 8 tests
1013737658
22:04:42.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:42.438 [pool-54-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 0

22:04:42.439 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:42.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
22:04:42.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:261 which is executed by 8 tests
1013737658
22:04:42.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
22:04:42.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:245 which is executed by 8 tests
1013737658
22:04:42.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
22:04:42.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:244 which is executed by 8 tests
1013737658
22:04:42.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
22:04:42.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:133 which is executed by 8 tests
-1129122774
22:04:42.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
22:04:42.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:233 which is executed by 9 tests
1013737658
22:04:42.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
22:04:42.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:356 which is executed by 50 tests
1048307728
22:04:42.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
22:04:42.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:355 which is executed by 50 tests
1048307728
22:04:43.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:45.497 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2468 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:45.498 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:45.498 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
22:04:45.498 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:342 which is executed by 50 tests
1048307728
22:04:45.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
22:04:45.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:341 which is executed by 50 tests
1048307728
22:04:45.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:48.165 [pool-58-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2464 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:48.166 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:48.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
22:04:48.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:161 which is executed by 50 tests
1048307728
22:04:48.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
22:04:48.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:160 which is executed by 50 tests
1048307728
22:04:48.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:50.802 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2467 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:50.802 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:50.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
22:04:50.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:225 which is executed by 7 tests
1013737658
22:04:50.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
22:04:50.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:301 which is executed by 60 tests
1694344315
22:04:50.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
22:04:50.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:300 which is executed by 60 tests
1694344315
22:04:51.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:53.569 [pool-62-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2496 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:53.570 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:53.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
22:04:53.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:299 which is executed by 60 tests
1694344315
22:04:53.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:56.137 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2474 ms)
<> Total tests run: 61
<> Ignored tests: 0
<> Failed tests: 0

22:04:56.138 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:56.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
22:04:56.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:309 which is executed by 2 tests
1013737658
22:04:56.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
22:04:56.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:214 which is executed by 2 tests
-1129122774
22:04:56.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
22:04:56.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:213 which is executed by 2 tests
-1129122774
22:04:56.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
22:04:56.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:212 which is executed by 2 tests
-1129122774
22:04:56.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
22:04:56.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:211 which is executed by 2 tests
-1129122774
22:04:56.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
22:04:56.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:301 which is executed by 3 tests
1013737658
22:04:56.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:56.763 [pool-66-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (133 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:56.763 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:56.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:56.773 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:56.773 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:56.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
22:04:56.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:300 which is executed by 3 tests
1013737658
22:04:56.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
22:04:56.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:297 which is executed by 3 tests
1013737658
22:04:56.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:56.958 [pool-70-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:56.958 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:56.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
22:04:56.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:286 which is executed by 3 tests
1013737658
22:04:57.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.046 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.046 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
22:04:57.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:293 which is executed by 3 tests
1013737658
22:04:57.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
22:04:57.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:292 which is executed by 3 tests
1013737658
22:04:57.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.215 [pool-74-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.216 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
22:04:57.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:291 which is executed by 3 tests
1013737658
22:04:57.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.307 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.307 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
22:04:57.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:205 which is executed by 3 tests
-1129122774
22:04:57.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.394 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.394 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:57.402 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.402 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
22:04:57.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:197 which is executed by 3 tests
-1129122774
22:04:57.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.488 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.488 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:57.496 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.496 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
22:04:57.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:196 which is executed by 3 tests
-1129122774
22:04:57.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
22:04:57.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:193 which is executed by 3 tests
-1129122774
22:04:57.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.656 [pool-86-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.656 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
22:04:57.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:182 which is executed by 3 tests
-1129122774
22:04:57.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.741 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.741 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
22:04:57.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:175 which is executed by 3 tests
-1129122774
22:04:57.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.829 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:57.829 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:57.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
22:04:57.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:174 which is executed by 3 tests
-1129122774
22:04:57.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
22:04:57.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:173 which is executed by 3 tests
-1129122774
22:04:57.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
22:04:57.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:166 which is executed by 3 tests
-1129122774
22:04:58.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.075 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.075 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:58.082 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (4 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.083 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
22:04:58.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.FractionFormat:283 which is executed by 1 tests
1013737658
22:04:58.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
22:04:58.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:158 which is executed by 4 tests
-1129122774
22:04:58.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.247 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.248 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:58.258 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.258 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
22:04:58.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:157 which is executed by 4 tests
-1129122774
22:04:58.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
22:04:58.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:154 which is executed by 4 tests
-1129122774
22:04:58.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.419 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.419 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
22:04:58.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:145 which is executed by 5 tests
-1129122774
22:04:58.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.504 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.504 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:58.511 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.511 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
22:04:58.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:144 which is executed by 5 tests
-1129122774
22:04:58.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
22:04:58.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:141 which is executed by 5 tests
-1129122774
22:04:58.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.672 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.672 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
22:04:58.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:138 which is executed by 5 tests
-1129122774
22:04:58.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
22:04:58.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:134 which is executed by 5 tests
-1129122774
22:04:58.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:58.833 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.833 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:58.840 [pool-110-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (4 ms)
<> Total tests run: 32
<> Ignored tests: 0
<> Failed tests: 0

22:04:58.841 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
22:04:58.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
22:04:58.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.fraction.ProperFractionFormat:116 which is executed by 6 tests
-1129122774
22:04:58.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
22:04:58.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemFactory:46 which is executed by 7 tests
22:04:58.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemFactory:46
22:04:58.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
22:04:58.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:280 which is executed by 2 tests
-1679819631
22:04:59.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
22:04:59.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:277 which is executed by 2 tests
-1679819631
22:04:59.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:04:59.108 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:04:59.988 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:04:59.991 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:04:59.991 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:04:59.991 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:04:59.992 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:277.
22:04:59.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.003 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.327 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@7> but was:<org.apache.commons.math.complex.Complex@7>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.330 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@7> but was:<org.apache.commons.math.complex.Complex@7>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@7> but was:<org.apache.commons.math.complex.Complex@7>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:00.330 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:00.330 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@7> but was:<org.apache.commons.math.complex.Complex@7>]
22:05:00.330 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:277.
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblem1:70 which is executed by 8 tests
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblem1:70
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:140 which is executed by 75 tests
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:140
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:124 which is executed by 75 tests
22:05:00.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:124
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:113 which is executed by 81 tests
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:113
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:112 which is executed by 81 tests
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:112
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:105 which is executed by 81 tests
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:105
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
22:05:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:104 which is executed by 81 tests
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:104
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:97 which is executed by 81 tests
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:97
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:96 which is executed by 81 tests
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:96
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:95 which is executed by 81 tests
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:95
22:05:00.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:94 which is executed by 81 tests
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:94
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:93 which is executed by 81 tests
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.ode.nonstiff.TestProblemAbstract:93
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
22:05:00.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:363 which is executed by 20 tests
-1679819631
22:05:00.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
22:05:00.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:358 which is executed by 24 tests
-1679819631
22:05:00.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.531 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.827 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.829 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:00.830 [pool-119-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:00.830 [pool-119-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:00.830 [pool-119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:358.
22:05:00.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:00.842 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.075 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@d6600000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.077 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@d6600000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@d6600000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:01.077 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:01.077 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@d6600000>]
22:05:01.077 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:358.
22:05:01.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
22:05:01.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:355 which is executed by 30 tests
-1679819631
22:05:01.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.169 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.372 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.374 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:01.375 [pool-127-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:01.375 [pool-127-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:01.375 [pool-127-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:355.
22:05:01.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.386 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.576 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@7>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.578 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@7>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@7>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:01.578 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:01.579 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@7>]
22:05:01.579 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:355.
22:05:01.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
22:05:01.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:258 which is executed by 30 tests
-1679819631
22:05:01.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:01.672 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:01.850 [pool-135-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:149: error: variable ret might not have been initialized
        return ret;
               ^
22:05:01.865 [pool-135-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Complex implements java.io.Serializable {
    private static final long serialVersionUID = -6530173849413811929L;

    public static final org.apache.commons.math.complex.Complex I = new org.apache.commons.math.complex.Complex(0.0, 1.0);

    public static final org.apache.commons.math.complex.Complex NaN = new org.apache.commons.math.complex.Complex(java.lang.Double.NaN, java.lang.Double.NaN);

    public static final org.apache.commons.math.complex.Complex INF = new org.apache.commons.math.complex.Complex(java.lang.Double.POSITIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY);

    public static final org.apache.commons.math.complex.Complex ONE = new org.apache.commons.math.complex.Complex(1.0, 0.0);

    public static final org.apache.commons.math.complex.Complex ZERO = new org.apache.commons.math.complex.Complex(0.0, 0.0);

    private final double imaginary;

    private final double real;

    public Complex(double real, double imaginary) {
        super();
        this.real = real;
        this.imaginary = imaginary;
    }

    public double abs() {
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        if (isInfinite()) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((java.lang.Math.abs(real)) < (java.lang.Math.abs(imaginary))) {
            if ((imaginary) == 0.0) {
                return java.lang.Math.abs(real);
            }
            double q = (real) / (imaginary);
            return (java.lang.Math.abs(imaginary)) * (java.lang.Math.sqrt((1 + (q * q))));
        }else {
            if ((real) == 0.0) {
                return java.lang.Math.abs(imaginary);
            }
            double q = (imaginary) / (real);
            return (java.lang.Math.abs(real)) * (java.lang.Math.sqrt((1 + (q * q))));
        }
    }

    public org.apache.commons.math.complex.Complex add(org.apache.commons.math.complex.Complex rhs) {
        return createComplex(((real) + (rhs.getReal())), ((imaginary) + (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex conjugate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(real, (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double c = rhs.getReal();
        double d = rhs.getImaginary();
        if ((c == 0.0) && (d == 0.0)) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((rhs.isInfinite()) && (!(isInfinite()))) {
            return org.apache.commons.math.complex.Complex.ZERO;
        }
        if ((java.lang.Math.abs(c)) < (java.lang.Math.abs(d))) {
            if (d == 0.0) {
                return createComplex(((real) / c), ((imaginary) / c));
            }
            double q = c / d;
            double denominator = (c * q) + d;
            return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
        }else {
            if (c == 0.0) {
                return createComplex(((imaginary) / d), ((-(real)) / c));
            }
            double q = d / c;
            double denominator = (d * q) + c;
            return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
        }
    }

    public boolean equals(java.lang.Object other) {
        boolean ret;
        if ((this) == other) {
            ret = true;
        }else
            if (other == null) {
                ret = false;
            }else {
                try {
                    org.apache.commons.math.complex.Complex rhs = ((org.apache.commons.math.complex.Complex) (other));
                    if (rhs.isNaN()) {
                        ret = this.isNaN();
                    }else {
                        boolean spoonDefaultValue = false;
                        try {
                            spoonDefaultValue = true;
                        } catch (java.lang.Exception __NopolProcessorException) {
                        }
                        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                        if (fr.inria.lille.commons.trace.RuntimeValues.instance(6).isEnabled()) {
                            fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionStarts();
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("other",other);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("rhs",rhs);} catch (Exception ex1) {ex1.printStackTrace();};
                            if (org.apache.commons.math.complex.Complex.ZERO!=null) {
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                            }
                            if (org.apache.commons.math.complex.Complex.INF!=null) {
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                            }
                            if (org.apache.commons.math.complex.Complex.NaN!=null) {
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                            }
                            if (org.apache.commons.math.complex.Complex.I!=null) {
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                            }
                            if (org.apache.commons.math.complex.Complex.ONE!=null) {
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                            }
                            fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectOutput(runtimeAngelicValue);
                            fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionEnds();
                        }
                        if (runtimeAngelicValue)
                            ret = ((java.lang.Double.doubleToRawLongBits(real)) == (java.lang.Double.doubleToRawLongBits(rhs.getReal()))) && ((java.lang.Double.doubleToRawLongBits(imaginary)) == (java.lang.Double.doubleToRawLongBits(rhs.getImaginary())));

                    }
                } catch (java.lang.ClassCastException ex) {
                    ret = false;
                }
            }

        return ret;
    }

    public int hashCode() {
        if (isNaN()) {
            return 7;
        }
        return 37 * ((17 * (org.apache.commons.math.util.MathUtils.hash(imaginary))) + (org.apache.commons.math.util.MathUtils.hash(real)));
    }

    public double getImaginary() {
        return imaginary;
    }

    public double getReal() {
        return real;
    }

    public boolean isNaN() {
        return (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    }

    public boolean isInfinite() {
        return (!(isNaN())) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    }

    public org.apache.commons.math.complex.Complex multiply(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(rhs.real))) || (java.lang.Double.isInfinite(rhs.imaginary))) {
            return org.apache.commons.math.complex.Complex.INF;
        }
        return createComplex((((real) * (rhs.real)) - ((imaginary) * (rhs.imaginary))), (((real) * (rhs.imaginary)) + ((imaginary) * (rhs.real))));
    }

    public org.apache.commons.math.complex.Complex negate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex((-(real)), (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex subtract(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((real) - (rhs.getReal())), ((imaginary) - (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex acos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(this.sqrt1z().multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex asin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return sqrt1z().add(this.multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex atan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(org.apache.commons.math.complex.Complex.I).divide(org.apache.commons.math.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math.complex.Complex.I.divide(createComplex(2.0, 0.0)));
    }

    public org.apache.commons.math.complex.Complex cos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((-(java.lang.Math.sin(real))) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex cosh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex exp() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double expReal = java.lang.Math.exp(real);
        return createComplex((expReal * (java.lang.Math.cos(imaginary))), (expReal * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex log() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(java.lang.Math.log(abs()), java.lang.Math.atan2(imaginary, real));
    }

    public org.apache.commons.math.complex.Complex pow(org.apache.commons.math.complex.Complex x) {
        if (x == null) {
            throw new java.lang.NullPointerException();
        }
        return this.log().multiply(x).exp();
    }

    public org.apache.commons.math.complex.Complex sin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.sin(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sinh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sqrt() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if (((real) == 0.0) && ((imaginary) == 0.0)) {
            return createComplex(0.0, 0.0);
        }
        double t = java.lang.Math.sqrt((((java.lang.Math.abs(real)) + (abs())) / 2.0));
        if ((real) >= 0.0) {
            return createComplex(t, ((imaginary) / (2.0 * t)));
        }else {
            return createComplex(((java.lang.Math.abs(imaginary)) / (2.0 * t)), ((org.apache.commons.math.util.MathUtils.indicator(imaginary)) * t));
        }
    }

    public org.apache.commons.math.complex.Complex sqrt1z() {
        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
    }

    public org.apache.commons.math.complex.Complex tan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (java.lang.Math.cos(real2)) + (org.apache.commons.math.util.MathUtils.cosh(imaginary2));
        return createComplex(((java.lang.Math.sin(real2)) / d), ((org.apache.commons.math.util.MathUtils.sinh(imaginary2)) / d));
    }

    public org.apache.commons.math.complex.Complex tanh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (org.apache.commons.math.util.MathUtils.cosh(real2)) + (java.lang.Math.cos(imaginary2));
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real2)) / d), ((java.lang.Math.sin(imaginary2)) / d));
    }

    protected org.apache.commons.math.complex.Complex createComplex(double real, double imaginary) {
        return new org.apache.commons.math.complex.Complex(real, imaginary);
    }
}
22:05:01.865 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:05:01.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
22:05:01.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:263 which is executed by 33 tests
-1679819631
22:05:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
22:05:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:255 which is executed by 33 tests
-1679819631
22:05:02.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.039 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:02.224 [pool-137-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:147: error: variable ret might not have been initialized
        return ret;
               ^
22:05:02.244 [pool-137-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Complex implements java.io.Serializable {
    private static final long serialVersionUID = -6530173849413811929L;

    public static final org.apache.commons.math.complex.Complex I = new org.apache.commons.math.complex.Complex(0.0, 1.0);

    public static final org.apache.commons.math.complex.Complex NaN = new org.apache.commons.math.complex.Complex(java.lang.Double.NaN, java.lang.Double.NaN);

    public static final org.apache.commons.math.complex.Complex INF = new org.apache.commons.math.complex.Complex(java.lang.Double.POSITIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY);

    public static final org.apache.commons.math.complex.Complex ONE = new org.apache.commons.math.complex.Complex(1.0, 0.0);

    public static final org.apache.commons.math.complex.Complex ZERO = new org.apache.commons.math.complex.Complex(0.0, 0.0);

    private final double imaginary;

    private final double real;

    public Complex(double real, double imaginary) {
        super();
        this.real = real;
        this.imaginary = imaginary;
    }

    public double abs() {
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        if (isInfinite()) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((java.lang.Math.abs(real)) < (java.lang.Math.abs(imaginary))) {
            if ((imaginary) == 0.0) {
                return java.lang.Math.abs(real);
            }
            double q = (real) / (imaginary);
            return (java.lang.Math.abs(imaginary)) * (java.lang.Math.sqrt((1 + (q * q))));
        }else {
            if ((real) == 0.0) {
                return java.lang.Math.abs(imaginary);
            }
            double q = (imaginary) / (real);
            return (java.lang.Math.abs(real)) * (java.lang.Math.sqrt((1 + (q * q))));
        }
    }

    public org.apache.commons.math.complex.Complex add(org.apache.commons.math.complex.Complex rhs) {
        return createComplex(((real) + (rhs.getReal())), ((imaginary) + (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex conjugate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(real, (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double c = rhs.getReal();
        double d = rhs.getImaginary();
        if ((c == 0.0) && (d == 0.0)) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((rhs.isInfinite()) && (!(isInfinite()))) {
            return org.apache.commons.math.complex.Complex.ZERO;
        }
        if ((java.lang.Math.abs(c)) < (java.lang.Math.abs(d))) {
            if (d == 0.0) {
                return createComplex(((real) / c), ((imaginary) / c));
            }
            double q = c / d;
            double denominator = (c * q) + d;
            return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
        }else {
            if (c == 0.0) {
                return createComplex(((imaginary) / d), ((-(real)) / c));
            }
            double q = d / c;
            double denominator = (d * q) + c;
            return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
        }
    }

    public boolean equals(java.lang.Object other) {
        boolean ret;
        if ((this) == other) {
            ret = true;
        }else
            if (other == null) {
                ret = false;
            }else {
                try {
                    org.apache.commons.math.complex.Complex rhs = ((org.apache.commons.math.complex.Complex) (other));
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(7).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("other",other);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("rhs",rhs);} catch (Exception ex1) {ex1.printStackTrace();};
                        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                        }
                        if (org.apache.commons.math.complex.Complex.INF!=null) {
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                        }
                        if (org.apache.commons.math.complex.Complex.NaN!=null) {
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                        }
                        if (org.apache.commons.math.complex.Complex.I!=null) {
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                        }
                        if (org.apache.commons.math.complex.Complex.ONE!=null) {
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                            try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                        }
                        fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectionEnds();
                    }
                    if (runtimeAngelicValue) if (rhs.isNaN()) {
                        ret = this.isNaN();
                    }else {
                        ret = ((java.lang.Double.doubleToRawLongBits(real)) == (java.lang.Double.doubleToRawLongBits(rhs.getReal()))) && ((java.lang.Double.doubleToRawLongBits(imaginary)) == (java.lang.Double.doubleToRawLongBits(rhs.getImaginary())));
                    }
                } catch (java.lang.ClassCastException ex) {
                    ret = false;
                }
            }

        return ret;
    }

    public int hashCode() {
        if (isNaN()) {
            return 7;
        }
        return 37 * ((17 * (org.apache.commons.math.util.MathUtils.hash(imaginary))) + (org.apache.commons.math.util.MathUtils.hash(real)));
    }

    public double getImaginary() {
        return imaginary;
    }

    public double getReal() {
        return real;
    }

    public boolean isNaN() {
        return (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    }

    public boolean isInfinite() {
        return (!(isNaN())) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    }

    public org.apache.commons.math.complex.Complex multiply(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(rhs.real))) || (java.lang.Double.isInfinite(rhs.imaginary))) {
            return org.apache.commons.math.complex.Complex.INF;
        }
        return createComplex((((real) * (rhs.real)) - ((imaginary) * (rhs.imaginary))), (((real) * (rhs.imaginary)) + ((imaginary) * (rhs.real))));
    }

    public org.apache.commons.math.complex.Complex negate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex((-(real)), (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex subtract(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((real) - (rhs.getReal())), ((imaginary) - (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex acos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(this.sqrt1z().multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex asin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return sqrt1z().add(this.multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex atan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(org.apache.commons.math.complex.Complex.I).divide(org.apache.commons.math.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math.complex.Complex.I.divide(createComplex(2.0, 0.0)));
    }

    public org.apache.commons.math.complex.Complex cos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((-(java.lang.Math.sin(real))) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex cosh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex exp() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double expReal = java.lang.Math.exp(real);
        return createComplex((expReal * (java.lang.Math.cos(imaginary))), (expReal * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex log() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(java.lang.Math.log(abs()), java.lang.Math.atan2(imaginary, real));
    }

    public org.apache.commons.math.complex.Complex pow(org.apache.commons.math.complex.Complex x) {
        if (x == null) {
            throw new java.lang.NullPointerException();
        }
        return this.log().multiply(x).exp();
    }

    public org.apache.commons.math.complex.Complex sin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.sin(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sinh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sqrt() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if (((real) == 0.0) && ((imaginary) == 0.0)) {
            return createComplex(0.0, 0.0);
        }
        double t = java.lang.Math.sqrt((((java.lang.Math.abs(real)) + (abs())) / 2.0));
        if ((real) >= 0.0) {
            return createComplex(t, ((imaginary) / (2.0 * t)));
        }else {
            return createComplex(((java.lang.Math.abs(imaginary)) / (2.0 * t)), ((org.apache.commons.math.util.MathUtils.indicator(imaginary)) * t));
        }
    }

    public org.apache.commons.math.complex.Complex sqrt1z() {
        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
    }

    public org.apache.commons.math.complex.Complex tan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (java.lang.Math.cos(real2)) + (org.apache.commons.math.util.MathUtils.cosh(imaginary2));
        return createComplex(((java.lang.Math.sin(real2)) / d), ((org.apache.commons.math.util.MathUtils.sinh(imaginary2)) / d));
    }

    public org.apache.commons.math.complex.Complex tanh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (org.apache.commons.math.util.MathUtils.cosh(real2)) + (java.lang.Math.cos(imaginary2));
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real2)) / d), ((java.lang.Math.sin(imaginary2)) / d));
    }

    protected org.apache.commons.math.complex.Complex createComplex(double real, double imaginary) {
        return new org.apache.commons.math.complex.Complex(real, imaginary);
    }
}
22:05:02.244 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:05:02.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.255 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.463 [pool-141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.465 [pool-142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:02.466 [pool-139-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:02.466 [pool-139-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:02.466 [pool-139-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:255.
22:05:02.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
22:05:02.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:254 which is executed by 34 tests
-1679819631
22:05:02.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
22:05:02.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:250 which is executed by 35 tests
-1679819631
22:05:02.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.636 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:02.794 [pool-143-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:148: error: variable ret might not have been initialized
        return ret;
               ^
22:05:02.805 [pool-143-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Complex implements java.io.Serializable {
    private static final long serialVersionUID = -6530173849413811929L;

    public static final org.apache.commons.math.complex.Complex I = new org.apache.commons.math.complex.Complex(0.0, 1.0);

    public static final org.apache.commons.math.complex.Complex NaN = new org.apache.commons.math.complex.Complex(java.lang.Double.NaN, java.lang.Double.NaN);

    public static final org.apache.commons.math.complex.Complex INF = new org.apache.commons.math.complex.Complex(java.lang.Double.POSITIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY);

    public static final org.apache.commons.math.complex.Complex ONE = new org.apache.commons.math.complex.Complex(1.0, 0.0);

    public static final org.apache.commons.math.complex.Complex ZERO = new org.apache.commons.math.complex.Complex(0.0, 0.0);

    private final double imaginary;

    private final double real;

    public Complex(double real, double imaginary) {
        super();
        this.real = real;
        this.imaginary = imaginary;
    }

    public double abs() {
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        if (isInfinite()) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((java.lang.Math.abs(real)) < (java.lang.Math.abs(imaginary))) {
            if ((imaginary) == 0.0) {
                return java.lang.Math.abs(real);
            }
            double q = (real) / (imaginary);
            return (java.lang.Math.abs(imaginary)) * (java.lang.Math.sqrt((1 + (q * q))));
        }else {
            if ((real) == 0.0) {
                return java.lang.Math.abs(imaginary);
            }
            double q = (imaginary) / (real);
            return (java.lang.Math.abs(real)) * (java.lang.Math.sqrt((1 + (q * q))));
        }
    }

    public org.apache.commons.math.complex.Complex add(org.apache.commons.math.complex.Complex rhs) {
        return createComplex(((real) + (rhs.getReal())), ((imaginary) + (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex conjugate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(real, (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double c = rhs.getReal();
        double d = rhs.getImaginary();
        if ((c == 0.0) && (d == 0.0)) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((rhs.isInfinite()) && (!(isInfinite()))) {
            return org.apache.commons.math.complex.Complex.ZERO;
        }
        if ((java.lang.Math.abs(c)) < (java.lang.Math.abs(d))) {
            if (d == 0.0) {
                return createComplex(((real) / c), ((imaginary) / c));
            }
            double q = c / d;
            double denominator = (c * q) + d;
            return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
        }else {
            if (c == 0.0) {
                return createComplex(((imaginary) / d), ((-(real)) / c));
            }
            double q = d / c;
            double denominator = (d * q) + c;
            return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
        }
    }

    public boolean equals(java.lang.Object other) {
        boolean ret;
        if ((this) == other) {
            ret = true;
        }else {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(9).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("other",other);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("null",null);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("other == null",other == null);} catch (Exception ex1) {ex1.printStackTrace();};
                if (org.apache.commons.math.complex.Complex.ZERO!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                if (org.apache.commons.math.complex.Complex.INF!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                if (org.apache.commons.math.complex.Complex.NaN!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                if (org.apache.commons.math.complex.Complex.I!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                if (org.apache.commons.math.complex.Complex.ONE!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(9).collectionEnds();
            }
            if (runtimeAngelicValue) if (other == null) {
                ret = false;
            }else {
                try {
                    org.apache.commons.math.complex.Complex rhs = ((org.apache.commons.math.complex.Complex) (other));
                    if (rhs.isNaN()) {
                        ret = this.isNaN();
                    }else {
                        ret = ((java.lang.Double.doubleToRawLongBits(real)) == (java.lang.Double.doubleToRawLongBits(rhs.getReal()))) && ((java.lang.Double.doubleToRawLongBits(imaginary)) == (java.lang.Double.doubleToRawLongBits(rhs.getImaginary())));
                    }
                } catch (java.lang.ClassCastException ex) {
                    ret = false;
                }
            }
        }
        return ret;
    }

    public int hashCode() {
        if (isNaN()) {
            return 7;
        }
        return 37 * ((17 * (org.apache.commons.math.util.MathUtils.hash(imaginary))) + (org.apache.commons.math.util.MathUtils.hash(real)));
    }

    public double getImaginary() {
        return imaginary;
    }

    public double getReal() {
        return real;
    }

    public boolean isNaN() {
        return (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    }

    public boolean isInfinite() {
        return (!(isNaN())) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    }

    public org.apache.commons.math.complex.Complex multiply(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(rhs.real))) || (java.lang.Double.isInfinite(rhs.imaginary))) {
            return org.apache.commons.math.complex.Complex.INF;
        }
        return createComplex((((real) * (rhs.real)) - ((imaginary) * (rhs.imaginary))), (((real) * (rhs.imaginary)) + ((imaginary) * (rhs.real))));
    }

    public org.apache.commons.math.complex.Complex negate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex((-(real)), (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex subtract(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((real) - (rhs.getReal())), ((imaginary) - (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex acos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(this.sqrt1z().multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex asin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return sqrt1z().add(this.multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex atan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(org.apache.commons.math.complex.Complex.I).divide(org.apache.commons.math.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math.complex.Complex.I.divide(createComplex(2.0, 0.0)));
    }

    public org.apache.commons.math.complex.Complex cos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((-(java.lang.Math.sin(real))) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex cosh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex exp() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double expReal = java.lang.Math.exp(real);
        return createComplex((expReal * (java.lang.Math.cos(imaginary))), (expReal * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex log() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(java.lang.Math.log(abs()), java.lang.Math.atan2(imaginary, real));
    }

    public org.apache.commons.math.complex.Complex pow(org.apache.commons.math.complex.Complex x) {
        if (x == null) {
            throw new java.lang.NullPointerException();
        }
        return this.log().multiply(x).exp();
    }

    public org.apache.commons.math.complex.Complex sin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.sin(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sinh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sqrt() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if (((real) == 0.0) && ((imaginary) == 0.0)) {
            return createComplex(0.0, 0.0);
        }
        double t = java.lang.Math.sqrt((((java.lang.Math.abs(real)) + (abs())) / 2.0));
        if ((real) >= 0.0) {
            return createComplex(t, ((imaginary) / (2.0 * t)));
        }else {
            return createComplex(((java.lang.Math.abs(imaginary)) / (2.0 * t)), ((org.apache.commons.math.util.MathUtils.indicator(imaginary)) * t));
        }
    }

    public org.apache.commons.math.complex.Complex sqrt1z() {
        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
    }

    public org.apache.commons.math.complex.Complex tan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (java.lang.Math.cos(real2)) + (org.apache.commons.math.util.MathUtils.cosh(imaginary2));
        return createComplex(((java.lang.Math.sin(real2)) / d), ((org.apache.commons.math.util.MathUtils.sinh(imaginary2)) / d));
    }

    public org.apache.commons.math.complex.Complex tanh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (org.apache.commons.math.util.MathUtils.cosh(real2)) + (java.lang.Math.cos(imaginary2));
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real2)) / d), ((java.lang.Math.sin(imaginary2)) / d));
    }

    protected org.apache.commons.math.complex.Complex createComplex(double real, double imaginary) {
        return new org.apache.commons.math.complex.Complex(real, imaginary);
    }
}
22:05:02.806 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:05:02.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.816 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.984 [pool-147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:02.986 [pool-148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:02.986 [pool-145-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:02.986 [pool-145-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath221(org.apache.commons.math.complex.ComplexTest): expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
22:05:02.986 [pool-145-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.complex.Complex:250.
22:05:02.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
22:05:02.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:266 which is executed by 38 tests
-1679819631
22:05:03.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
22:05:03.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:248 which is executed by 38 tests
-1679819631
22:05:03.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:03.159 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (6 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:03.310 [pool-149-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:147: error: variable ret might not have been initialized
        return ret;
               ^
22:05:03.322 [pool-149-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Complex implements java.io.Serializable {
    private static final long serialVersionUID = -6530173849413811929L;

    public static final org.apache.commons.math.complex.Complex I = new org.apache.commons.math.complex.Complex(0.0, 1.0);

    public static final org.apache.commons.math.complex.Complex NaN = new org.apache.commons.math.complex.Complex(java.lang.Double.NaN, java.lang.Double.NaN);

    public static final org.apache.commons.math.complex.Complex INF = new org.apache.commons.math.complex.Complex(java.lang.Double.POSITIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY);

    public static final org.apache.commons.math.complex.Complex ONE = new org.apache.commons.math.complex.Complex(1.0, 0.0);

    public static final org.apache.commons.math.complex.Complex ZERO = new org.apache.commons.math.complex.Complex(0.0, 0.0);

    private final double imaginary;

    private final double real;

    public Complex(double real, double imaginary) {
        super();
        this.real = real;
        this.imaginary = imaginary;
    }

    public double abs() {
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        if (isInfinite()) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((java.lang.Math.abs(real)) < (java.lang.Math.abs(imaginary))) {
            if ((imaginary) == 0.0) {
                return java.lang.Math.abs(real);
            }
            double q = (real) / (imaginary);
            return (java.lang.Math.abs(imaginary)) * (java.lang.Math.sqrt((1 + (q * q))));
        }else {
            if ((real) == 0.0) {
                return java.lang.Math.abs(imaginary);
            }
            double q = (imaginary) / (real);
            return (java.lang.Math.abs(real)) * (java.lang.Math.sqrt((1 + (q * q))));
        }
    }

    public org.apache.commons.math.complex.Complex add(org.apache.commons.math.complex.Complex rhs) {
        return createComplex(((real) + (rhs.getReal())), ((imaginary) + (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex conjugate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(real, (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double c = rhs.getReal();
        double d = rhs.getImaginary();
        if ((c == 0.0) && (d == 0.0)) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((rhs.isInfinite()) && (!(isInfinite()))) {
            return org.apache.commons.math.complex.Complex.ZERO;
        }
        if ((java.lang.Math.abs(c)) < (java.lang.Math.abs(d))) {
            if (d == 0.0) {
                return createComplex(((real) / c), ((imaginary) / c));
            }
            double q = c / d;
            double denominator = (c * q) + d;
            return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
        }else {
            if (c == 0.0) {
                return createComplex(((imaginary) / d), ((-(real)) / c));
            }
            double q = d / c;
            double denominator = (d * q) + c;
            return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
        }
    }

    public boolean equals(java.lang.Object other) {
        boolean ret;
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(11).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("other",other);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("(this) == other",(this) == other);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);} catch (Exception ex1) {ex1.printStackTrace();};
            if (org.apache.commons.math.complex.Complex.ZERO!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            if (org.apache.commons.math.complex.Complex.INF!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            if (org.apache.commons.math.complex.Complex.NaN!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            if (org.apache.commons.math.complex.Complex.I!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            if (org.apache.commons.math.complex.Complex.ONE!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectionEnds();
        }
        if (runtimeAngelicValue) if ((this) == other) {
            ret = true;
        }else
            if (other == null) {
                ret = false;
            }else {
                try {
                    org.apache.commons.math.complex.Complex rhs = ((org.apache.commons.math.complex.Complex) (other));
                    if (rhs.isNaN()) {
                        ret = this.isNaN();
                    }else {
                        ret = ((java.lang.Double.doubleToRawLongBits(real)) == (java.lang.Double.doubleToRawLongBits(rhs.getReal()))) && ((java.lang.Double.doubleToRawLongBits(imaginary)) == (java.lang.Double.doubleToRawLongBits(rhs.getImaginary())));
                    }
                } catch (java.lang.ClassCastException ex) {
                    ret = false;
                }
            }

        return ret;
    }

    public int hashCode() {
        if (isNaN()) {
            return 7;
        }
        return 37 * ((17 * (org.apache.commons.math.util.MathUtils.hash(imaginary))) + (org.apache.commons.math.util.MathUtils.hash(real)));
    }

    public double getImaginary() {
        return imaginary;
    }

    public double getReal() {
        return real;
    }

    public boolean isNaN() {
        return (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    }

    public boolean isInfinite() {
        return (!(isNaN())) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    }

    public org.apache.commons.math.complex.Complex multiply(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(rhs.real))) || (java.lang.Double.isInfinite(rhs.imaginary))) {
            return org.apache.commons.math.complex.Complex.INF;
        }
        return createComplex((((real) * (rhs.real)) - ((imaginary) * (rhs.imaginary))), (((real) * (rhs.imaginary)) + ((imaginary) * (rhs.real))));
    }

    public org.apache.commons.math.complex.Complex negate() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex((-(real)), (-(imaginary)));
    }

    public org.apache.commons.math.complex.Complex subtract(org.apache.commons.math.complex.Complex rhs) {
        if ((isNaN()) || (rhs.isNaN())) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((real) - (rhs.getReal())), ((imaginary) - (rhs.getImaginary())));
    }

    public org.apache.commons.math.complex.Complex acos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(this.sqrt1z().multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex asin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return sqrt1z().add(this.multiply(org.apache.commons.math.complex.Complex.I)).log().multiply(org.apache.commons.math.complex.Complex.I.negate());
    }

    public org.apache.commons.math.complex.Complex atan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return this.add(org.apache.commons.math.complex.Complex.I).divide(org.apache.commons.math.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math.complex.Complex.I.divide(createComplex(2.0, 0.0)));
    }

    public org.apache.commons.math.complex.Complex cos() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((-(java.lang.Math.sin(real))) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex cosh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex exp() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double expReal = java.lang.Math.exp(real);
        return createComplex((expReal * (java.lang.Math.cos(imaginary))), (expReal * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex log() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(java.lang.Math.log(abs()), java.lang.Math.atan2(imaginary, real));
    }

    public org.apache.commons.math.complex.Complex pow(org.apache.commons.math.complex.Complex x) {
        if (x == null) {
            throw new java.lang.NullPointerException();
        }
        return this.log().multiply(x).exp();
    }

    public org.apache.commons.math.complex.Complex sin() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((java.lang.Math.sin(real)) * (org.apache.commons.math.util.MathUtils.cosh(imaginary))), ((java.lang.Math.cos(real)) * (org.apache.commons.math.util.MathUtils.sinh(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sinh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real)) * (java.lang.Math.cos(imaginary))), ((org.apache.commons.math.util.MathUtils.cosh(real)) * (java.lang.Math.sin(imaginary))));
    }

    public org.apache.commons.math.complex.Complex sqrt() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        if (((real) == 0.0) && ((imaginary) == 0.0)) {
            return createComplex(0.0, 0.0);
        }
        double t = java.lang.Math.sqrt((((java.lang.Math.abs(real)) + (abs())) / 2.0));
        if ((real) >= 0.0) {
            return createComplex(t, ((imaginary) / (2.0 * t)));
        }else {
            return createComplex(((java.lang.Math.abs(imaginary)) / (2.0 * t)), ((org.apache.commons.math.util.MathUtils.indicator(imaginary)) * t));
        }
    }

    public org.apache.commons.math.complex.Complex sqrt1z() {
        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
    }

    public org.apache.commons.math.complex.Complex tan() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (java.lang.Math.cos(real2)) + (org.apache.commons.math.util.MathUtils.cosh(imaginary2));
        return createComplex(((java.lang.Math.sin(real2)) / d), ((org.apache.commons.math.util.MathUtils.sinh(imaginary2)) / d));
    }

    public org.apache.commons.math.complex.Complex tanh() {
        if (isNaN()) {
            return org.apache.commons.math.complex.Complex.NaN;
        }
        double real2 = 2.0 * (real);
        double imaginary2 = 2.0 * (imaginary);
        double d = (org.apache.commons.math.util.MathUtils.cosh(real2)) + (java.lang.Math.cos(imaginary2));
        return createComplex(((org.apache.commons.math.util.MathUtils.sinh(real2)) / d), ((java.lang.Math.sin(imaginary2)) / d));
    }

    protected org.apache.commons.math.complex.Complex createComplex(double real, double imaginary) {
        return new org.apache.commons.math.complex.Complex(real, imaginary);
    }
}
22:05:03.323 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:05:03.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:03.333 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (5 ms)
<> Total tests run: 83
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:03.505 [pool-153-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:03.506 [pool-154-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.511 [pool-155-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.512 [pool-156-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.513 [pool-157-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.513 [pool-158-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.514 [pool-159-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.515 [pool-160-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.516 [pool-161-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.517 [pool-162-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.517 [pool-163-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.518 [pool-164-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.519 [pool-165-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.520 [pool-166-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.522 [pool-167-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.523 [pool-168-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.524 [pool-169-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.525 [pool-170-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.526 [pool-171-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.527 [pool-172-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.528 [pool-173-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.529 [pool-174-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.530 [pool-175-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.530 [pool-176-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.531 [pool-177-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.532 [pool-178-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.533 [pool-179-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.535 [pool-180-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.536 [pool-181-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.537 [pool-182-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.538 [pool-183-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.539 [pool-184-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.540 [pool-185-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)
22:05:03.542 [pool-186-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math.complex.ComplexTest)
[expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>]
junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:86)
    at junit.framework.TestCase.assertEquals(TestCase.java:253)
    at org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)

22:05:03.543 [pool-187-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.545 [pool-188-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.549 [pool-189-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.549 [pool-190-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.553 [pool-191-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.554 [pool-192-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.556 [pool-193-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.557 [pool-194-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.558 [pool-195-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.559 [pool-196-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.560 [pool-197-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.561 [pool-198-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.562 [pool-199-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.563 [pool-200-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.564 [pool-201-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.565 [pool-202-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.566 [pool-203-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.567 [pool-204-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.568 [pool-205-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.569 [pool-206-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.570 [pool-207-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.571 [pool-208-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.572 [pool-209-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.574 [pool-210-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.575 [pool-211-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.576 [pool-212-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.577 [pool-213-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.578 [pool-214-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.579 [pool-215-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.580 [pool-216-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsClass(ComplexTest.java:252)
22:05:03.582 [pool-217-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsClass(org.apache.commons.math.complex.ComplexTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsClass(ComplexTest.java:252)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(ComplexTest.java:269)
22:05:03.584 [pool-218-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(ComplexTest.java:269)

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsNull(ComplexTest.java:247)
22:05:03.586 [pool-219-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsNull(org.apache.commons.math.complex.ComplexTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsNull(ComplexTest.java:247)

22:05:03.588 [pool-220-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.589 [pool-221-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.591 [pool-222-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(ComplexTest.java:275)
22:05:03.592 [pool-223-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsImaginaryDifference(org.apache.commons.math.complex.ComplexTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertFalse(Assert.java:39)
    at junit.framework.Assert.assertFalse(Assert.java:47)
    at junit.framework.TestCase.assertFalse(TestCase.java:219)
    at org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(ComplexTest.java:275)

22:05:03.594 [pool-224-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.595 [pool-225-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.597 [pool-226-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(LaguerreSolverTest.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:05:03.602 [pool-227-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testLinearFunction(org.apache.commons.math.analysis.LaguerreSolverTest)
[Maximal number of iterations (100) exceeded]
org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(LaguerreSolverTest.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(LaguerreSolverTest.java:68)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:05:03.604 [pool-228-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testQuadraticFunction(org.apache.commons.math.analysis.LaguerreSolverTest)
[Maximal number of iterations (100) exceeded]
org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(LaguerreSolverTest.java:68)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solveAll(LaguerreSolver.java:225)
    at org.apache.commons.math.analysis.LaguerreSolver.solveAll(LaguerreSolver.java:190)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(LaguerreSolverTest.java:119)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
22:05:03.606 [pool-229-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testQuinticFunction2(org.apache.commons.math.analysis.LaguerreSolverTest)
[Maximal number of iterations (100) exceeded]
org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solveAll(LaguerreSolver.java:225)
    at org.apache.commons.math.analysis.LaguerreSolver.solveAll(LaguerreSolver.java:190)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(LaguerreSolverTest.java:119)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(LaguerreSolverTest.java:92)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:05:03.608 [pool-230-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testQuinticFunction(org.apache.commons.math.analysis.LaguerreSolverTest)
[Maximal number of iterations (100) exceeded]
org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:326)
    at org.apache.commons.math.analysis.LaguerreSolver.solve(LaguerreSolver.java:134)
    at org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(LaguerreSolverTest.java:92)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

22:05:03.611 [pool-231-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.612 [pool-232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.614 [pool-233-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.616 [pool-234-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.617 [pool-235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.618 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.622 [pool-237-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.627 [pool-238-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

22:05:03.870 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
22:05:04.023 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
22:05:04.077 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
22:05:04.137 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
22:05:04.184 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
22:05:04.238 [pool-151-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
22:05:04.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
22:05:04.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.MathUtils:460 which is executed by 46 tests
-1550426518
22:05:04.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
22:05:04.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.MathUtils:459 which is executed by 46 tests
-1550426518
22:05:04.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
22:05:04.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:872 which is executed by 62 tests
-1679819631
22:05:04.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
22:05:04.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:310 which is executed by 111 tests
-1679819631
22:05:04.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
22:05:04.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.complex.Complex:299 which is executed by 116 tests
-1679819631
22:05:04.661 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
22:05:04.743 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 247
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 1617
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 13
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 59402ms
22:05:04.744 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_SYNTHESIS
Command exited with non-zero status 255
176.47user 5.48system 1:00.81elapsed 299%CPU (0avgtext+0avgdata 891752maxresident)k
64912inputs+6504outputs (22major+367895minor)pagefaults 0swaps


Node: petitprince-8.luxembourg.grid5000.fr



Date: Wed Nov 28 22:05:05 EST 2018

