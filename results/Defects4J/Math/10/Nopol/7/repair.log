cd /tmp/Nopol_Defects4J_Math_10;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_10/target/classes/:/tmp/Nopol_Defects4J_Math_10/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
00:21:03.760 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
00:21:03.768 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_10/target/classes/, file:/tmp/Nopol_Defects4J_Math_10/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_10/target/classes/, file:/tmp/Nopol_Defects4J_Math_10/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
00:21:03.768 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
00:21:03.769 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
00:21:03.773 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
00:21:03.774 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
00:21:03.789 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 211 MB
00:21:03.790 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
00:21:03.790 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
00:21:03.790 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
00:21:03.791 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
00:21:03.792 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
00:38:57.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
00:38:57.996 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:759 which is executed by 3 tests
1562674061
00:38:58.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
00:38:58.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:758 which is executed by 3 tests
1562674061
00:38:58.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:00.903 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1883 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:02.667 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:02.672 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:02.675 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:02.676 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:02.676 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:758.
00:39:02.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
00:39:02.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:757 which is executed by 3 tests
1562674061
00:39:03.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
00:39:03.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:756 which is executed by 3 tests
1562674061
00:39:03.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:04.511 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1156 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:05.205 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:05.208 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:05.209 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:05.209 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:05.209 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DerivativeStructure:756.
00:39:05.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
00:39:05.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1420 which is executed by 3 tests
-707765681
00:39:05.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
00:39:05.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1401 which is executed by 3 tests
-707765681
00:39:05.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:06.928 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1027 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:07.654 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:07.659 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:07.660 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:07.660 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:07.660 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1401.
00:39:07.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
00:39:07.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1400 which is executed by 3 tests
-707765681
00:39:08.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:09.010 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (996 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:09.608 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:09.627 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:09.628 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:09.628 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:09.628 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1400.
00:39:09.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
00:39:09.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1399 which is executed by 3 tests
-707765681
00:39:09.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:11.160 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1184 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:11.717 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:11.724 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:11.725 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:11.726 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:11.726 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1399.
00:39:11.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
00:39:11.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1398 which is executed by 3 tests
-707765681
00:39:12.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:13.076 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1006 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:13.616 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:13.626 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:13.627 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:13.628 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:13.628 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1398.
00:39:13.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
00:39:13.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1397 which is executed by 3 tests
-707765681
00:39:13.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:14.997 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1030 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:15.497 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:15.500 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:15.500 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:15.500 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:15.501 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1397.
00:39:15.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
00:39:15.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1394 which is executed by 3 tests
-707765681
00:39:15.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:16.859 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1016 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:17.386 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:17.390 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:17.396 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:17.396 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:17.396 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1394.
00:39:17.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:18.407 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1001 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:18.962 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:18.965 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:18.966 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:18.967 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:18.967 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1394.
00:39:18.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
00:39:18.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1392 which is executed by 3 tests
-707765681
00:39:19.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:20.293 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (987 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:20.770 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:20.772 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:20.773 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:20.773 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:20.773 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1392.
00:39:20.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
00:39:20.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1391 which is executed by 3 tests
-707765681
00:39:21.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:22.126 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1015 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:22.593 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:22.596 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:22.597 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:22.597 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:22.597 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1391.
00:39:22.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
00:39:22.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1390 which is executed by 3 tests
-707765681
00:39:22.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:23.951 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1015 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:24.433 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:24.435 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:24.435 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:24.436 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:24.436 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1390.
00:39:24.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
00:39:24.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1389 which is executed by 3 tests
-707765681
00:39:24.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
00:39:24.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1388 which is executed by 3 tests
-707765681
00:39:25.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:26.079 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (988 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:26.550 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:26.551 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:26.552 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:26.552 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:26.552 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1388.
00:39:26.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
00:39:26.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1387 which is executed by 3 tests
-707765681
00:39:26.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
00:39:26.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1362 which is executed by 4 tests
-707765681
00:39:27.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:28.330 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1120 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:28.789 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:28.791 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:28.792 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:28.792 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:28.792 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1362.
00:39:28.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
00:39:28.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1361 which is executed by 4 tests
-707765681
00:39:29.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:30.497 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1371 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:30.985 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:30.987 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:30.988 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:30.988 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:30.988 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1361.
00:39:30.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
00:39:30.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1358 which is executed by 4 tests
-707765681
00:39:31.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:32.321 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (998 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:32.774 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:32.776 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:32.777 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:32.778 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:32.778 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1358.
00:39:32.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
00:39:32.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1357 which is executed by 4 tests
-707765681
00:39:33.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:34.092 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (984 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:34.543 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:34.545 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:34.545 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:34.546 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:34.546 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1357.
00:39:34.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:35.686 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1129 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:36.149 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:36.152 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:36.153 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:36.153 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:36.153 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1357.
00:39:36.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
00:39:36.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1353 which is executed by 4 tests
-707765681
00:39:36.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:37.507 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1024 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:37.947 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:37.949 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:37.950 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:37.950 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:37.950 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1353.
00:39:37.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:38.976 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1017 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:39.418 [pool-81-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:39.420 [pool-82-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:39.421 [pool-79-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:39.421 [pool-79-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:39.421 [pool-79-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1353.
00:39:39.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
00:39:39.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1351 which is executed by 4 tests
-707765681
00:39:39.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:40.738 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (987 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:41.199 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:41.201 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:41.201 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:41.201 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:41.202 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1351.
00:39:41.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:42.216 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1006 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:42.656 [pool-89-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: -2
    at org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(DSCompiler.java:606)
    at org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2(DSCompiler.java:633)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(DerivativeStructure.java:758)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:813)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:39:42.658 [pool-90-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[-2]
java.lang.ArrayIndexOutOfBoundsException: -2    at org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(DSCompiler.java:606)
    at org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2(DSCompiler.java:633)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(DerivativeStructure.java:758)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:813)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:39:42.659 [pool-87-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:42.659 [pool-87-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): -2]
00:39:42.659 [pool-87-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1351.
00:39:42.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
00:39:42.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1350 which is executed by 4 tests
-707765681
00:39:42.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:44.011 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1021 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:44.450 [pool-93-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:44.451 [pool-94-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:44.452 [pool-91-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:44.452 [pool-91-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:44.452 [pool-91-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1350.
00:39:44.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
00:39:44.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1349 which is executed by 4 tests
-707765681
00:39:44.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:45.759 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (979 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:46.193 [pool-97-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:46.196 [pool-98-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:46.197 [pool-95-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:46.197 [pool-95-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:46.197 [pool-95-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1349.
00:39:46.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
00:39:46.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1348 which is executed by 4 tests
-707765681
00:39:46.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:47.672 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1147 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:48.106 [pool-101-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:48.109 [pool-102-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:48.109 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:48.109 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:48.109 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1348.
00:39:48.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
00:39:48.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1347 which is executed by 4 tests
-707765681
00:39:48.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
00:39:48.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1370 which is executed by 5 tests
-707765681
00:39:48.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
00:39:48.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1368 which is executed by 5 tests
-707765681
00:39:49.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:50.088 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1006 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:50.524 [pool-105-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:50.527 [pool-106-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:50.527 [pool-103-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:39:50.527 [pool-103-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:50.527 [pool-103-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1368.
00:39:50.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
00:39:50.528 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1344 which is executed by 5 tests
-707765681
00:39:50.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:51.849 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (992 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:52.279 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:52.281 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:52.282 [pool-107-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:52.282 [pool-107-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:52.282 [pool-107-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1344.
00:39:52.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
00:39:52.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1343 which is executed by 5 tests
-707765681
00:39:52.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:53.651 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1039 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:54.088 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:54.090 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:54.090 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:54.090 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:54.090 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1343.
00:39:54.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
00:39:54.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1342 which is executed by 5 tests
-707765681
00:39:54.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
00:39:54.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1341 which is executed by 5 tests
-707765681
00:39:54.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
00:39:54.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1340 which is executed by 5 tests
-707765681
00:39:55.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
00:39:55.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1339 which is executed by 5 tests
-707765681
00:39:55.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:56.368 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (991 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:56.802 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:56.804 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:56.804 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:56.804 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:56.804 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1339.
00:39:56.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
00:39:56.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1338 which is executed by 5 tests
-707765681
00:39:57.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
00:39:57.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1330 which is executed by 5 tests
-707765681
00:39:57.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:58.438 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (987 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:58.869 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:58.872 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:39:58.872 [pool-119-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:58.872 [pool-119-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:39:58.872 [pool-119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1330.
00:39:58.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:39:59.876 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (996 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:00.391 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:00.394 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:00.395 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:00.395 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:00.395 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1330.
00:40:00.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
00:40:00.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1329 which is executed by 5 tests
-707765681
00:40:00.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:01.782 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1008 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:02.215 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:02.217 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:02.218 [pool-127-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:02.218 [pool-127-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:02.218 [pool-127-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1329.
00:40:02.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
00:40:02.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1328 which is executed by 5 tests
-707765681
00:40:02.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
00:40:02.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:1327 which is executed by 5 tests
-707765681
00:40:02.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
00:40:02.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:799 which is executed by 21 tests
-707765681
00:40:03.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
00:40:03.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:798 which is executed by 21 tests
-707765681
00:40:03.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:04.494 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (994 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:04.923 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:04.925 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:04.926 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:04.926 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:04.926 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:798.
00:40:04.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
00:40:04.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:797 which is executed by 21 tests
-707765681
00:40:05.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:06.247 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (991 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:06.669 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:06.671 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:06.672 [pool-135-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:06.672 [pool-135-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:06.672 [pool-135-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:797.
00:40:06.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
00:40:06.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:796 which is executed by 21 tests
-707765681
00:40:06.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
00:40:06.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:951 which is executed by 30 tests
-707765681
00:40:07.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:08.418 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1098 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:08.840 [pool-139-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DSCompiler.java:400: error: variable xk might not have been initialized
            function[i] = xk;
                          ^
00:40:08.858 [pool-139-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class DSCompiler {
    private static java.util.concurrent.atomic.AtomicReference<org.apache.commons.math3.analysis.differentiation.DSCompiler[][]> compilers = new java.util.concurrent.atomic.AtomicReference<org.apache.commons.math3.analysis.differentiation.DSCompiler[][]>(null);

    private final int parameters;

    private final int order;

    private final int[][] sizes;

    private final int[][] derivativesIndirection;

    private final int[] lowerIndirection;

    private final int[][][] multIndirection;

    private final int[][][] compIndirection;

    private DSCompiler(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        this.parameters = parameters;
        this.order = order;
        this.sizes = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(parameters, order, valueCompiler);
        this.derivativesIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(parameters, order, valueCompiler, derivativeCompiler);
        this.lowerIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(parameters, order, valueCompiler, derivativeCompiler);
        this.multIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(parameters, order, valueCompiler, derivativeCompiler, lowerIndirection);
        this.compIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(parameters, order, valueCompiler, derivativeCompiler, sizes, derivativesIndirection);
    }

    public static org.apache.commons.math3.analysis.differentiation.DSCompiler getCompiler(int parameters, int order) {
        final org.apache.commons.math3.analysis.differentiation.DSCompiler[][] cache = org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers.get();
        if (((cache != null) && ((cache.length) > parameters)) && ((cache[parameters].length) > order)) {
            if ((cache[parameters][order]) != null) {
                return cache[parameters][order];
            }
        }
        final int maxParameters = org.apache.commons.math3.util.FastMath.max(parameters, (cache == null ? 0 : cache.length));
        final int maxOrder = org.apache.commons.math3.util.FastMath.max(order, (cache == null ? 0 : cache[0].length));
        final org.apache.commons.math3.analysis.differentiation.DSCompiler[][] newCache = new org.apache.commons.math3.analysis.differentiation.DSCompiler[maxParameters + 1][maxOrder + 1];
        if (cache != null) {
            for (int i = 0; i < (cache.length); ++i) {
                java.lang.System.arraycopy(cache[i], 0, newCache[i], 0, cache[i].length);
            }
        }
        for (int diag = 0; diag <= (parameters + order); ++diag) {
            for (int o = org.apache.commons.math3.util.FastMath.max(0, (diag - parameters)); o <= (org.apache.commons.math3.util.FastMath.min(order, diag)); ++o) {
                final int p = diag - o;
                if ((newCache[p][o]) == null) {
                    final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler = (p == 0) ? null : newCache[(p - 1)][o];
                    final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler = (o == 0) ? null : newCache[p][(o - 1)];
                    newCache[p][o] = new org.apache.commons.math3.analysis.differentiation.DSCompiler(p, o, valueCompiler, derivativeCompiler);
                }
            }
        }
        org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers.compareAndSet(cache, newCache);
        return newCache[parameters][order];
    }

    private static int[][] compileSizes(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler) {
        final int[][] sizes = new int[parameters + 1][order + 1];
        if (parameters == 0) {
            java.util.Arrays.fill(sizes[0], 1);
        }else {
            java.lang.System.arraycopy(valueCompiler.sizes, 0, sizes, 0, parameters);
            sizes[parameters][0] = 1;
            for (int i = 0; i < order; ++i) {
                sizes[parameters][(i + 1)] = (sizes[parameters][i]) + (sizes[(parameters - 1)][(i + 1)]);
            }
        }
        return sizes;
    }

    private static int[][] compileDerivativesIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        if ((parameters == 0) || (order == 0)) {
            return new int[1][parameters];
        }
        final int vSize = valueCompiler.derivativesIndirection.length;
        final int dSize = derivativeCompiler.derivativesIndirection.length;
        final int[][] derivativesIndirection = new int[vSize + dSize][parameters];
        for (int i = 0; i < vSize; ++i) {
            java.lang.System.arraycopy(valueCompiler.derivativesIndirection[i], 0, derivativesIndirection[i], 0, (parameters - 1));
        }
        for (int i = 0; i < dSize; ++i) {
            java.lang.System.arraycopy(derivativeCompiler.derivativesIndirection[i], 0, derivativesIndirection[(vSize + i)], 0, parameters);
            (derivativesIndirection[(vSize + i)][(parameters - 1)])++;
        }
        return derivativesIndirection;
    }

    private static int[] compileLowerIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        if ((parameters == 0) || (order <= 1)) {
            return new int[]{ 0 };
        }
        final int vSize = valueCompiler.lowerIndirection.length;
        final int dSize = derivativeCompiler.lowerIndirection.length;
        final int[] lowerIndirection = new int[vSize + dSize];
        java.lang.System.arraycopy(valueCompiler.lowerIndirection, 0, lowerIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            lowerIndirection[(vSize + i)] = (valueCompiler.getSize()) + (derivativeCompiler.lowerIndirection[i]);
        }
        return lowerIndirection;
    }

    private static int[][][] compileMultiplicationIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler, final int[] lowerIndirection) {
        if ((parameters == 0) || (order == 0)) {
            return new int[][][]{ new int[][]{ new int[]{ 1, 0, 0 } } };
        }
        final int vSize = valueCompiler.multIndirection.length;
        final int dSize = derivativeCompiler.multIndirection.length;
        final int[][][] multIndirection = new int[vSize + dSize][][];
        java.lang.System.arraycopy(valueCompiler.multIndirection, 0, multIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            final int[][] dRow = derivativeCompiler.multIndirection[i];
            java.util.List<int[]> row = new java.util.ArrayList<int[]>();
            for (int j = 0; j < (dRow.length); ++j) {
                row.add(new int[]{ dRow[j][0], lowerIndirection[dRow[j][1]], vSize + (dRow[j][2]) });
                row.add(new int[]{ dRow[j][0], vSize + (dRow[j][1]), lowerIndirection[dRow[j][2]] });
            }
            final java.util.List<int[]> combined = new java.util.ArrayList<int[]>(row.size());
            for (int j = 0; j < (row.size()); ++j) {
                final int[] termJ = row.get(j);
                if ((termJ[0]) > 0) {
                    for (int k = j + 1; k < (row.size()); ++k) {
                        final int[] termK = row.get(k);
                        if (((termJ[1]) == (termK[1])) && ((termJ[2]) == (termK[2]))) {
                            termJ[0] += termK[0];
                            termK[0] = 0;
                        }
                    }
                    combined.add(termJ);
                }
            }
            multIndirection[(vSize + i)] = combined.toArray(new int[combined.size()][]);
        }
        return multIndirection;
    }

    private static int[][][] compileCompositionIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler, final int[][] sizes, final int[][] derivativesIndirection) {
        if ((parameters == 0) || (order == 0)) {
            return new int[][][]{ new int[][]{ new int[]{ 1, 0 } } };
        }
        final int vSize = valueCompiler.compIndirection.length;
        final int dSize = derivativeCompiler.compIndirection.length;
        final int[][][] compIndirection = new int[vSize + dSize][][];
        java.lang.System.arraycopy(valueCompiler.compIndirection, 0, compIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            java.util.List<int[]> row = new java.util.ArrayList<int[]>();
            for (int[] term : derivativeCompiler.compIndirection[i]) {
                int[] derivedTermF = new int[(term.length) + 1];
                derivedTermF[0] = term[0];
                derivedTermF[1] = (term[1]) + 1;
                int[] orders = new int[parameters];
                orders[(parameters - 1)] = 1;
                derivedTermF[term.length] = org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
                for (int j = 2; j < (term.length); ++j) {
                    derivedTermF[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(term[j], parameters, derivativeCompiler.derivativesIndirection, parameters, order, sizes);
                }
                java.util.Arrays.sort(derivedTermF, 2, derivedTermF.length);
                row.add(derivedTermF);
                for (int l = 2; l < (term.length); ++l) {
                    int[] derivedTermG = new int[term.length];
                    derivedTermG[0] = term[0];
                    derivedTermG[1] = term[1];
                    for (int j = 2; j < (term.length); ++j) {
                        derivedTermG[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(term[j], parameters, derivativeCompiler.derivativesIndirection, parameters, order, sizes);
                        if (j == l) {
                            java.lang.System.arraycopy(derivativesIndirection[derivedTermG[j]], 0, orders, 0, parameters);
                            (orders[(parameters - 1)])++;
                            derivedTermG[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
                        }
                    }
                    java.util.Arrays.sort(derivedTermG, 2, derivedTermG.length);
                    row.add(derivedTermG);
                }
            }
            final java.util.List<int[]> combined = new java.util.ArrayList<int[]>(row.size());
            for (int j = 0; j < (row.size()); ++j) {
                final int[] termJ = row.get(j);
                if ((termJ[0]) > 0) {
                    for (int k = j + 1; k < (row.size()); ++k) {
                        final int[] termK = row.get(k);
                        boolean equals = (termJ.length) == (termK.length);
                        for (int l = 1; equals && (l < (termJ.length)); ++l) {
                            equals &= (termJ[l]) == (termK[l]);
                        }
                        if (equals) {
                            termJ[0] += termK[0];
                            termK[0] = 0;
                        }
                    }
                    combined.add(termJ);
                }
            }
            compIndirection[(vSize + i)] = combined.toArray(new int[combined.size()][]);
        }
        return compIndirection;
    }

    public int getPartialDerivativeIndex(final int... orders) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooLargeException {
        if ((orders.length) != (getFreeParameters())) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(orders.length, getFreeParameters());
        }
        return org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
    }

    private static int getPartialDerivativeIndex(final int parameters, final int order, final int[][] sizes, final int... orders) throws org.apache.commons.math3.exception.NumberIsTooLargeException {
        int index = 0;
        int m = order;
        int ordersSum = 0;
        for (int i = parameters - 1; i >= 0; --i) {
            int derivativeOrder = orders[i];
            ordersSum += derivativeOrder;
            if (ordersSum > order) {
                throw new org.apache.commons.math3.exception.NumberIsTooLargeException(ordersSum, order, true);
            }
            while ((derivativeOrder--) > 0) {
                index += sizes[i][(m--)];
            } 
        }
        return index;
    }

    private static int convertIndex(final int index, final int srcP, final int[][] srcDerivativesIndirection, final int destP, final int destO, final int[][] destSizes) {
        int[] orders = new int[destP];
        java.lang.System.arraycopy(srcDerivativesIndirection[index], 0, orders, 0, org.apache.commons.math3.util.FastMath.min(srcP, destP));
        return org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(destP, destO, destSizes, orders);
    }

    public int[] getPartialDerivativeOrders(final int index) {
        return derivativesIndirection[index];
    }

    public int getFreeParameters() {
        return parameters;
    }

    public int getOrder() {
        return order;
    }

    public int getSize() {
        return sizes[parameters][order];
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)]);
        }
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double a3, final double[] c3, final int offset3, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)], a3, c3[(offset3 + i)]);
        }
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double a3, final double[] c3, final int offset3, final double a4, final double[] c4, final int offset4, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)], a3, c3[(offset3 + i)], a4, c4[(offset4 + i)]);
        }
    }

    public void add(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) + (rhs[(rhsOffset + i)]);
        }
    }

    public void subtract(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) - (rhs[(rhsOffset + i)]);
        }
    }

    public void multiply(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (multIndirection.length); ++i) {
            final int[][] mappingI = multIndirection[i];
            double r = 0;
            for (int j = 0; j < (mappingI.length); ++j) {
                r += ((mappingI[j][0]) * (lhs[(lhsOffset + (mappingI[j][1]))])) * (rhs[(rhsOffset + (mappingI[j][2]))]);
            }
            result[(resultOffset + i)] = r;
        }
    }

    public void divide(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        final double[] reciprocal = new double[getSize()];
        pow(rhs, lhsOffset, (-1), reciprocal, 0);
        multiply(lhs, lhsOffset, reciprocal, 0, result, resultOffset);
    }

    public void remainder(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        final double rem = (lhs[lhsOffset]) % (rhs[rhsOffset]);
        final double k = org.apache.commons.math3.util.FastMath.rint((((lhs[lhsOffset]) - rem) / (rhs[rhsOffset])));
        result[resultOffset] = rem;
        for (int i = 1; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) - (k * (rhs[(rhsOffset + i)]));
        }
    }

    public void pow(final double[] operand, final int operandOffset, final double p, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        double xk = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (p - (order)));
        for (int i = order; i > 0; --i) {
            function[i] = xk;
            xk *= operand[operandOffset];
        }
        function[0] = xk;
        double coefficient = p;
        for (int i = 1; i <= (order); ++i) {
            function[i] *= coefficient;
            coefficient *= p - i;
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void pow(final double[] operand, final int operandOffset, final int n, final double[] result, final int resultOffset) {
        if (n == 0) {
            result[resultOffset] = 1.0;
            java.util.Arrays.fill(result, (resultOffset + 1), (resultOffset + (getSize())), 0);
            return;
        }
        double[] function = new double[1 + (order)];
        if (n > 0) {
            final int maxOrder = org.apache.commons.math3.util.FastMath.min(order, n);
            double xk = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (n - maxOrder));
            for (int i = maxOrder; i > 0; --i) {
                function[i] = xk;
                xk *= operand[operandOffset];
            }
            function[0] = xk;
        }else {
            final double inv = 1.0 / (operand[operandOffset]);
            double xk = org.apache.commons.math3.util.FastMath.pow(inv, (-n));
            for (int i = 0; i <= (order); ++i) {
                function[i] = xk;
                xk *= inv;
            }
        }
        double coefficient = n;
        for (int i = 1; i <= (order); ++i) {
            function[i] *= coefficient;
            coefficient *= n - i;
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void pow(final double[] x, final int xOffset, final double[] y, final int yOffset, final double[] result, final int resultOffset) {
        final double[] logX = new double[getSize()];
        log(x, xOffset, logX, 0);
        final double[] yLogX = new double[getSize()];
        multiply(logX, 0, y, yOffset, yLogX, 0);
        exp(yLogX, 0, result, resultOffset);
    }

    public void rootN(final double[] operand, final int operandOffset, final int n, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        double xk;
        if (n == 2) {
            function[0] = org.apache.commons.math3.util.FastMath.sqrt(operand[operandOffset]);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(34).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.order",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.order);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("operandOffset",operandOffset);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("n",n);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("result",result);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.multIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.multIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers",org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.parameters",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.parameters);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("function",function);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("resultOffset",resultOffset);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.derivativesIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.derivativesIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.compIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.compIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.lowerIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.lowerIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.sizes",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.sizes);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("operand",operand);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectionEnds();
            }
            if (runtimeAngelicValue)
                xk = 0.5 / (function[0]);

        }else
            if (n == 3) {
                function[0] = org.apache.commons.math3.util.FastMath.cbrt(operand[operandOffset]);
                xk = 1.0 / ((3.0 * (function[0])) * (function[0]));
            }else {
                function[0] = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (1.0 / n));
                xk = 1.0 / (n * (org.apache.commons.math3.util.FastMath.pow(function[0], (n - 1))));
            }

        final double nReciprocal = 1.0 / n;
        final double xReciprocal = 1.0 / (operand[operandOffset]);
        for (int i = 1; i <= (order); ++i) {
            function[i] = xk;
            xk *= xReciprocal * (nReciprocal - i);
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void exp(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        java.util.Arrays.fill(function, org.apache.commons.math3.util.FastMath.exp(operand[operandOffset]));
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void expm1(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.expm1(operand[operandOffset]);
        java.util.Arrays.fill(function, 1, (1 + (order)), org.apache.commons.math3.util.FastMath.exp(operand[operandOffset]));
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (operand[operandOffset]);
            double xk = inv;
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log1p(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log1p(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (1.0 + (operand[operandOffset]));
            double xk = inv;
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log10(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log10(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (operand[operandOffset]);
            double xk = inv / (org.apache.commons.math3.util.FastMath.log(10.0));
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void cos(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.cos(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = -(org.apache.commons.math3.util.FastMath.sin(operand[operandOffset]));
            for (int i = 2; i <= (order); ++i) {
                function[i] = -(function[(i - 2)]);
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void sin(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.sin(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.cos(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = -(function[(i - 2)]);
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void tan(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        final double[] function = new double[1 + (order)];
        final double t = org.apache.commons.math3.util.FastMath.tan(operand[operandOffset]);
        function[0] = t;
        if ((order) > 0) {
            final double[] p = new double[(order) + 2];
            p[1] = 1;
            final double t2 = t * t;
            for (int n = 1; n <= (order); ++n) {
                double v = 0;
                p[(n + 1)] = n * (p[n]);
                for (int k = n + 1; k >= 0; k -= 2) {
                    v = (v * t2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + ((k - 3) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= t;
                }
                function[n] = v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void acos(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.acos(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = -1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (n - 1) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + (((2 * n) - k) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void asin(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.asin(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (n - 1) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + (((2 * n) - k) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atan(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.atan(x);
        if ((order) > 0) {
            final double[] q = new double[order];
            q[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 + x2);
            double coeff = f;
            function[1] = coeff * (q[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                q[(n - 1)] = (-n) * (q[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (q[k]);
                    if (k > 2) {
                        q[(k - 2)] = ((k - 1) * (q[(k - 1)])) + (((k - 1) - (2 * n)) * (q[(k - 3)]));
                    }else
                        if (k == 2) {
                            q[0] = q[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atan2(final double[] y, final int yOffset, final double[] x, final int xOffset, final double[] result, final int resultOffset) {
        double[] tmp1 = new double[getSize()];
        multiply(x, xOffset, x, xOffset, tmp1, 0);
        double[] tmp2 = new double[getSize()];
        multiply(y, yOffset, y, yOffset, tmp2, 0);
        add(tmp1, 0, tmp2, 0, tmp2, 0);
        rootN(tmp2, 0, 2, tmp1, 0);
        if ((x[xOffset]) >= 0) {
            add(tmp1, 0, x, xOffset, tmp2, 0);
            divide(y, yOffset, tmp2, 0, tmp1, 0);
            atan(tmp1, 0, tmp2, 0);
            for (int i = 0; i < (tmp2.length); ++i) {
                result[(resultOffset + i)] = 2 * (tmp2[i]);
            }
        }else {
            subtract(tmp1, 0, x, xOffset, tmp2, 0);
            divide(y, yOffset, tmp2, 0, tmp1, 0);
            atan(tmp1, 0, tmp2, 0);
            result[resultOffset] = ((tmp2[0]) <= 0 ? -(org.apache.commons.math3.util.FastMath.PI) : org.apache.commons.math3.util.FastMath.PI) - (2 * (tmp2[0]));
            for (int i = 1; i < (tmp2.length); ++i) {
                result[(resultOffset + i)] = (-2) * (tmp2[i]);
            }
        }
    }

    public void cosh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.cosh(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.sinh(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = function[(i - 2)];
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void sinh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.sinh(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.cosh(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = function[(i - 2)];
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void tanh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        final double[] function = new double[1 + (order)];
        final double t = org.apache.commons.math3.util.FastMath.tanh(operand[operandOffset]);
        function[0] = t;
        if ((order) > 0) {
            final double[] p = new double[(order) + 2];
            p[1] = 1;
            final double t2 = t * t;
            for (int n = 1; n <= (order); ++n) {
                double v = 0;
                p[(n + 1)] = (-n) * (p[n]);
                for (int k = n + 1; k >= 0; k -= 2) {
                    v = (v * t2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) - ((k - 3) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= t;
                }
                function[n] = v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void acosh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.acosh(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (x2 - 1);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (1 - n) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((1 - k) * (p[(k - 1)])) + ((k - (2 * n)) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = -(p[1]);
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void asinh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.asinh(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 + x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (1 - n) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + ((k - (2 * n)) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atanh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.atanh(x);
        if ((order) > 0) {
            final double[] q = new double[order];
            q[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = f;
            function[1] = coeff * (q[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                q[(n - 1)] = n * (q[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (q[k]);
                    if (k > 2) {
                        q[(k - 2)] = ((k - 1) * (q[(k - 1)])) + ((((2 * n) - k) + 1) * (q[(k - 3)]));
                    }else
                        if (k == 2) {
                            q[0] = q[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void compose(final double[] operand, final int operandOffset, final double[] f, final double[] result, final int resultOffset) {
        for (int i = 0; i < (compIndirection.length); ++i) {
            final int[][] mappingI = compIndirection[i];
            double r = 0;
            for (int j = 0; j < (mappingI.length); ++j) {
                final int[] mappingIJ = mappingI[j];
                double product = (mappingIJ[0]) * (f[mappingIJ[1]]);
                for (int k = 2; k < (mappingIJ.length); ++k) {
                    product *= operand[(operandOffset + (mappingIJ[k]))];
                }
                r += product;
            }
            result[(resultOffset + i)] = r;
        }
    }

    public double taylor(final double[] ds, final int dsOffset, final double... delta) {
        double value = 0;
        for (int i = (getSize()) - 1; i >= 0; --i) {
            final int[] orders = getPartialDerivativeOrders(i);
            double term = ds[(dsOffset + i)];
            for (int k = 0; k < (orders.length); ++k) {
                if ((orders[k]) > 0) {
                    term *= (org.apache.commons.math3.util.FastMath.pow(delta[k], orders[k])) / (org.apache.commons.math3.util.ArithmeticUtils.factorial(orders[k]));
                }
            }
            value += term;
        }
        return value;
    }

    public void checkCompatibility(final org.apache.commons.math3.analysis.differentiation.DSCompiler compiler) throws org.apache.commons.math3.exception.DimensionMismatchException {
        if ((parameters) != (compiler.parameters)) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(parameters, compiler.parameters);
        }
        if ((order) != (compiler.order)) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(order, compiler.order);
        }
    }
}
00:40:08.859 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:40:08.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
00:40:08.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:950 which is executed by 30 tests
-707765681
00:40:09.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:10.183 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1001 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:10.621 [pool-143-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:10.623 [pool-144-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:10.623 [pool-141-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:10.623 [pool-141-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:10.623 [pool-141-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:950.
00:40:10.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
00:40:10.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:969 which is executed by 32 tests
-707765681
00:40:10.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
00:40:10.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:967 which is executed by 32 tests
-707765681
00:40:11.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:12.266 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (995 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:12.700 [pool-147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:12.702 [pool-148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:12.702 [pool-145-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:12.703 [pool-145-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:12.703 [pool-145-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:967.
00:40:12.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
00:40:12.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:963 which is executed by 32 tests
-707765681
00:40:13.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:14.020 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (992 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:14.458 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:14.460 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:14.460 [pool-149-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:14.460 [pool-149-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:14.460 [pool-149-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:963.
00:40:14.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
00:40:14.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:962 which is executed by 32 tests
-707765681
00:40:14.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:15.860 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1035 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:16.290 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:16.292 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:16.293 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:16.293 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:16.293 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:962.
00:40:16.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
00:40:16.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:961 which is executed by 32 tests
-707765681
00:40:16.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:17.616 [pool-158-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1000 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:18.045 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:18.047 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:18.047 [pool-157-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:18.048 [pool-157-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:18.048 [pool-157-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:961.
00:40:18.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
00:40:18.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:960 which is executed by 32 tests
-707765681
00:40:18.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
00:40:18.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:959 which is executed by 32 tests
-707765681
00:40:18.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
00:40:18.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:949 which is executed by 32 tests
-707765681
00:40:18.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:20.010 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1011 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:20.417 [pool-161-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DSCompiler.java:400: error: variable xk might not have been initialized
            function[i] = xk;
                          ^
00:40:20.432 [pool-161-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class DSCompiler {
    private static java.util.concurrent.atomic.AtomicReference<org.apache.commons.math3.analysis.differentiation.DSCompiler[][]> compilers = new java.util.concurrent.atomic.AtomicReference<org.apache.commons.math3.analysis.differentiation.DSCompiler[][]>(null);

    private final int parameters;

    private final int order;

    private final int[][] sizes;

    private final int[][] derivativesIndirection;

    private final int[] lowerIndirection;

    private final int[][][] multIndirection;

    private final int[][][] compIndirection;

    private DSCompiler(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        this.parameters = parameters;
        this.order = order;
        this.sizes = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(parameters, order, valueCompiler);
        this.derivativesIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(parameters, order, valueCompiler, derivativeCompiler);
        this.lowerIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(parameters, order, valueCompiler, derivativeCompiler);
        this.multIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(parameters, order, valueCompiler, derivativeCompiler, lowerIndirection);
        this.compIndirection = org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(parameters, order, valueCompiler, derivativeCompiler, sizes, derivativesIndirection);
    }

    public static org.apache.commons.math3.analysis.differentiation.DSCompiler getCompiler(int parameters, int order) {
        final org.apache.commons.math3.analysis.differentiation.DSCompiler[][] cache = org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers.get();
        if (((cache != null) && ((cache.length) > parameters)) && ((cache[parameters].length) > order)) {
            if ((cache[parameters][order]) != null) {
                return cache[parameters][order];
            }
        }
        final int maxParameters = org.apache.commons.math3.util.FastMath.max(parameters, (cache == null ? 0 : cache.length));
        final int maxOrder = org.apache.commons.math3.util.FastMath.max(order, (cache == null ? 0 : cache[0].length));
        final org.apache.commons.math3.analysis.differentiation.DSCompiler[][] newCache = new org.apache.commons.math3.analysis.differentiation.DSCompiler[maxParameters + 1][maxOrder + 1];
        if (cache != null) {
            for (int i = 0; i < (cache.length); ++i) {
                java.lang.System.arraycopy(cache[i], 0, newCache[i], 0, cache[i].length);
            }
        }
        for (int diag = 0; diag <= (parameters + order); ++diag) {
            for (int o = org.apache.commons.math3.util.FastMath.max(0, (diag - parameters)); o <= (org.apache.commons.math3.util.FastMath.min(order, diag)); ++o) {
                final int p = diag - o;
                if ((newCache[p][o]) == null) {
                    final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler = (p == 0) ? null : newCache[(p - 1)][o];
                    final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler = (o == 0) ? null : newCache[p][(o - 1)];
                    newCache[p][o] = new org.apache.commons.math3.analysis.differentiation.DSCompiler(p, o, valueCompiler, derivativeCompiler);
                }
            }
        }
        org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers.compareAndSet(cache, newCache);
        return newCache[parameters][order];
    }

    private static int[][] compileSizes(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler) {
        final int[][] sizes = new int[parameters + 1][order + 1];
        if (parameters == 0) {
            java.util.Arrays.fill(sizes[0], 1);
        }else {
            java.lang.System.arraycopy(valueCompiler.sizes, 0, sizes, 0, parameters);
            sizes[parameters][0] = 1;
            for (int i = 0; i < order; ++i) {
                sizes[parameters][(i + 1)] = (sizes[parameters][i]) + (sizes[(parameters - 1)][(i + 1)]);
            }
        }
        return sizes;
    }

    private static int[][] compileDerivativesIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        if ((parameters == 0) || (order == 0)) {
            return new int[1][parameters];
        }
        final int vSize = valueCompiler.derivativesIndirection.length;
        final int dSize = derivativeCompiler.derivativesIndirection.length;
        final int[][] derivativesIndirection = new int[vSize + dSize][parameters];
        for (int i = 0; i < vSize; ++i) {
            java.lang.System.arraycopy(valueCompiler.derivativesIndirection[i], 0, derivativesIndirection[i], 0, (parameters - 1));
        }
        for (int i = 0; i < dSize; ++i) {
            java.lang.System.arraycopy(derivativeCompiler.derivativesIndirection[i], 0, derivativesIndirection[(vSize + i)], 0, parameters);
            (derivativesIndirection[(vSize + i)][(parameters - 1)])++;
        }
        return derivativesIndirection;
    }

    private static int[] compileLowerIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler) {
        if ((parameters == 0) || (order <= 1)) {
            return new int[]{ 0 };
        }
        final int vSize = valueCompiler.lowerIndirection.length;
        final int dSize = derivativeCompiler.lowerIndirection.length;
        final int[] lowerIndirection = new int[vSize + dSize];
        java.lang.System.arraycopy(valueCompiler.lowerIndirection, 0, lowerIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            lowerIndirection[(vSize + i)] = (valueCompiler.getSize()) + (derivativeCompiler.lowerIndirection[i]);
        }
        return lowerIndirection;
    }

    private static int[][][] compileMultiplicationIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler, final int[] lowerIndirection) {
        if ((parameters == 0) || (order == 0)) {
            return new int[][][]{ new int[][]{ new int[]{ 1, 0, 0 } } };
        }
        final int vSize = valueCompiler.multIndirection.length;
        final int dSize = derivativeCompiler.multIndirection.length;
        final int[][][] multIndirection = new int[vSize + dSize][][];
        java.lang.System.arraycopy(valueCompiler.multIndirection, 0, multIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            final int[][] dRow = derivativeCompiler.multIndirection[i];
            java.util.List<int[]> row = new java.util.ArrayList<int[]>();
            for (int j = 0; j < (dRow.length); ++j) {
                row.add(new int[]{ dRow[j][0], lowerIndirection[dRow[j][1]], vSize + (dRow[j][2]) });
                row.add(new int[]{ dRow[j][0], vSize + (dRow[j][1]), lowerIndirection[dRow[j][2]] });
            }
            final java.util.List<int[]> combined = new java.util.ArrayList<int[]>(row.size());
            for (int j = 0; j < (row.size()); ++j) {
                final int[] termJ = row.get(j);
                if ((termJ[0]) > 0) {
                    for (int k = j + 1; k < (row.size()); ++k) {
                        final int[] termK = row.get(k);
                        if (((termJ[1]) == (termK[1])) && ((termJ[2]) == (termK[2]))) {
                            termJ[0] += termK[0];
                            termK[0] = 0;
                        }
                    }
                    combined.add(termJ);
                }
            }
            multIndirection[(vSize + i)] = combined.toArray(new int[combined.size()][]);
        }
        return multIndirection;
    }

    private static int[][][] compileCompositionIndirection(final int parameters, final int order, final org.apache.commons.math3.analysis.differentiation.DSCompiler valueCompiler, final org.apache.commons.math3.analysis.differentiation.DSCompiler derivativeCompiler, final int[][] sizes, final int[][] derivativesIndirection) {
        if ((parameters == 0) || (order == 0)) {
            return new int[][][]{ new int[][]{ new int[]{ 1, 0 } } };
        }
        final int vSize = valueCompiler.compIndirection.length;
        final int dSize = derivativeCompiler.compIndirection.length;
        final int[][][] compIndirection = new int[vSize + dSize][][];
        java.lang.System.arraycopy(valueCompiler.compIndirection, 0, compIndirection, 0, vSize);
        for (int i = 0; i < dSize; ++i) {
            java.util.List<int[]> row = new java.util.ArrayList<int[]>();
            for (int[] term : derivativeCompiler.compIndirection[i]) {
                int[] derivedTermF = new int[(term.length) + 1];
                derivedTermF[0] = term[0];
                derivedTermF[1] = (term[1]) + 1;
                int[] orders = new int[parameters];
                orders[(parameters - 1)] = 1;
                derivedTermF[term.length] = org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
                for (int j = 2; j < (term.length); ++j) {
                    derivedTermF[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(term[j], parameters, derivativeCompiler.derivativesIndirection, parameters, order, sizes);
                }
                java.util.Arrays.sort(derivedTermF, 2, derivedTermF.length);
                row.add(derivedTermF);
                for (int l = 2; l < (term.length); ++l) {
                    int[] derivedTermG = new int[term.length];
                    derivedTermG[0] = term[0];
                    derivedTermG[1] = term[1];
                    for (int j = 2; j < (term.length); ++j) {
                        derivedTermG[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(term[j], parameters, derivativeCompiler.derivativesIndirection, parameters, order, sizes);
                        if (j == l) {
                            java.lang.System.arraycopy(derivativesIndirection[derivedTermG[j]], 0, orders, 0, parameters);
                            (orders[(parameters - 1)])++;
                            derivedTermG[j] = org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
                        }
                    }
                    java.util.Arrays.sort(derivedTermG, 2, derivedTermG.length);
                    row.add(derivedTermG);
                }
            }
            final java.util.List<int[]> combined = new java.util.ArrayList<int[]>(row.size());
            for (int j = 0; j < (row.size()); ++j) {
                final int[] termJ = row.get(j);
                if ((termJ[0]) > 0) {
                    for (int k = j + 1; k < (row.size()); ++k) {
                        final int[] termK = row.get(k);
                        boolean equals = (termJ.length) == (termK.length);
                        for (int l = 1; equals && (l < (termJ.length)); ++l) {
                            equals &= (termJ[l]) == (termK[l]);
                        }
                        if (equals) {
                            termJ[0] += termK[0];
                            termK[0] = 0;
                        }
                    }
                    combined.add(termJ);
                }
            }
            compIndirection[(vSize + i)] = combined.toArray(new int[combined.size()][]);
        }
        return compIndirection;
    }

    public int getPartialDerivativeIndex(final int... orders) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooLargeException {
        if ((orders.length) != (getFreeParameters())) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(orders.length, getFreeParameters());
        }
        return org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(parameters, order, sizes, orders);
    }

    private static int getPartialDerivativeIndex(final int parameters, final int order, final int[][] sizes, final int... orders) throws org.apache.commons.math3.exception.NumberIsTooLargeException {
        int index = 0;
        int m = order;
        int ordersSum = 0;
        for (int i = parameters - 1; i >= 0; --i) {
            int derivativeOrder = orders[i];
            ordersSum += derivativeOrder;
            if (ordersSum > order) {
                throw new org.apache.commons.math3.exception.NumberIsTooLargeException(ordersSum, order, true);
            }
            while ((derivativeOrder--) > 0) {
                index += sizes[i][(m--)];
            } 
        }
        return index;
    }

    private static int convertIndex(final int index, final int srcP, final int[][] srcDerivativesIndirection, final int destP, final int destO, final int[][] destSizes) {
        int[] orders = new int[destP];
        java.lang.System.arraycopy(srcDerivativesIndirection[index], 0, orders, 0, org.apache.commons.math3.util.FastMath.min(srcP, destP));
        return org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(destP, destO, destSizes, orders);
    }

    public int[] getPartialDerivativeOrders(final int index) {
        return derivativesIndirection[index];
    }

    public int getFreeParameters() {
        return parameters;
    }

    public int getOrder() {
        return order;
    }

    public int getSize() {
        return sizes[parameters][order];
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)]);
        }
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double a3, final double[] c3, final int offset3, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)], a3, c3[(offset3 + i)]);
        }
    }

    public void linearCombination(final double a1, final double[] c1, final int offset1, final double a2, final double[] c2, final int offset2, final double a3, final double[] c3, final int offset3, final double a4, final double[] c4, final int offset4, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = org.apache.commons.math3.util.MathArrays.linearCombination(a1, c1[(offset1 + i)], a2, c2[(offset2 + i)], a3, c3[(offset3 + i)], a4, c4[(offset4 + i)]);
        }
    }

    public void add(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) + (rhs[(rhsOffset + i)]);
        }
    }

    public void subtract(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) - (rhs[(rhsOffset + i)]);
        }
    }

    public void multiply(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        for (int i = 0; i < (multIndirection.length); ++i) {
            final int[][] mappingI = multIndirection[i];
            double r = 0;
            for (int j = 0; j < (mappingI.length); ++j) {
                r += ((mappingI[j][0]) * (lhs[(lhsOffset + (mappingI[j][1]))])) * (rhs[(rhsOffset + (mappingI[j][2]))]);
            }
            result[(resultOffset + i)] = r;
        }
    }

    public void divide(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        final double[] reciprocal = new double[getSize()];
        pow(rhs, lhsOffset, (-1), reciprocal, 0);
        multiply(lhs, lhsOffset, reciprocal, 0, result, resultOffset);
    }

    public void remainder(final double[] lhs, final int lhsOffset, final double[] rhs, final int rhsOffset, final double[] result, final int resultOffset) {
        final double rem = (lhs[lhsOffset]) % (rhs[rhsOffset]);
        final double k = org.apache.commons.math3.util.FastMath.rint((((lhs[lhsOffset]) - rem) / (rhs[rhsOffset])));
        result[resultOffset] = rem;
        for (int i = 1; i < (getSize()); ++i) {
            result[(resultOffset + i)] = (lhs[(lhsOffset + i)]) - (k * (rhs[(rhsOffset + i)]));
        }
    }

    public void pow(final double[] operand, final int operandOffset, final double p, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        double xk = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (p - (order)));
        for (int i = order; i > 0; --i) {
            function[i] = xk;
            xk *= operand[operandOffset];
        }
        function[0] = xk;
        double coefficient = p;
        for (int i = 1; i <= (order); ++i) {
            function[i] *= coefficient;
            coefficient *= p - i;
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void pow(final double[] operand, final int operandOffset, final int n, final double[] result, final int resultOffset) {
        if (n == 0) {
            result[resultOffset] = 1.0;
            java.util.Arrays.fill(result, (resultOffset + 1), (resultOffset + (getSize())), 0);
            return;
        }
        double[] function = new double[1 + (order)];
        if (n > 0) {
            final int maxOrder = org.apache.commons.math3.util.FastMath.min(order, n);
            double xk = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (n - maxOrder));
            for (int i = maxOrder; i > 0; --i) {
                function[i] = xk;
                xk *= operand[operandOffset];
            }
            function[0] = xk;
        }else {
            final double inv = 1.0 / (operand[operandOffset]);
            double xk = org.apache.commons.math3.util.FastMath.pow(inv, (-n));
            for (int i = 0; i <= (order); ++i) {
                function[i] = xk;
                xk *= inv;
            }
        }
        double coefficient = n;
        for (int i = 1; i <= (order); ++i) {
            function[i] *= coefficient;
            coefficient *= n - i;
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void pow(final double[] x, final int xOffset, final double[] y, final int yOffset, final double[] result, final int resultOffset) {
        final double[] logX = new double[getSize()];
        log(x, xOffset, logX, 0);
        final double[] yLogX = new double[getSize()];
        multiply(logX, 0, y, yOffset, yLogX, 0);
        exp(yLogX, 0, result, resultOffset);
    }

    public void rootN(final double[] operand, final int operandOffset, final int n, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        double xk;
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(40).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.order",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.order);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("operandOffset",operandOffset);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("n",n);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("result",result);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("n == 2",n == 2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.multIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.multIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("2",2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers",org.apache.commons.math3.analysis.differentiation.DSCompiler.compilers);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.parameters",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.parameters);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("function",function);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("resultOffset",resultOffset);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.derivativesIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.derivativesIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.compIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.compIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.lowerIndirection",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.lowerIndirection);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("org.apache.commons.math3.analysis.differentiation.DSCompiler.this.sizes",org.apache.commons.math3.analysis.differentiation.DSCompiler.this.sizes);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectInput("operand",operand);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(40).collectionEnds();
        }
        if (runtimeAngelicValue) if (n == 2) {
            function[0] = org.apache.commons.math3.util.FastMath.sqrt(operand[operandOffset]);
            xk = 0.5 / (function[0]);
        }else
            if (n == 3) {
                function[0] = org.apache.commons.math3.util.FastMath.cbrt(operand[operandOffset]);
                xk = 1.0 / ((3.0 * (function[0])) * (function[0]));
            }else {
                function[0] = org.apache.commons.math3.util.FastMath.pow(operand[operandOffset], (1.0 / n));
                xk = 1.0 / (n * (org.apache.commons.math3.util.FastMath.pow(function[0], (n - 1))));
            }

        final double nReciprocal = 1.0 / n;
        final double xReciprocal = 1.0 / (operand[operandOffset]);
        for (int i = 1; i <= (order); ++i) {
            function[i] = xk;
            xk *= xReciprocal * (nReciprocal - i);
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void exp(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        java.util.Arrays.fill(function, org.apache.commons.math3.util.FastMath.exp(operand[operandOffset]));
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void expm1(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.expm1(operand[operandOffset]);
        java.util.Arrays.fill(function, 1, (1 + (order)), org.apache.commons.math3.util.FastMath.exp(operand[operandOffset]));
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (operand[operandOffset]);
            double xk = inv;
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log1p(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log1p(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (1.0 + (operand[operandOffset]));
            double xk = inv;
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void log10(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.log10(operand[operandOffset]);
        if ((order) > 0) {
            double inv = 1.0 / (operand[operandOffset]);
            double xk = inv / (org.apache.commons.math3.util.FastMath.log(10.0));
            for (int i = 1; i <= (order); ++i) {
                function[i] = xk;
                xk *= (-i) * inv;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void cos(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.cos(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = -(org.apache.commons.math3.util.FastMath.sin(operand[operandOffset]));
            for (int i = 2; i <= (order); ++i) {
                function[i] = -(function[(i - 2)]);
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void sin(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.sin(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.cos(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = -(function[(i - 2)]);
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void tan(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        final double[] function = new double[1 + (order)];
        final double t = org.apache.commons.math3.util.FastMath.tan(operand[operandOffset]);
        function[0] = t;
        if ((order) > 0) {
            final double[] p = new double[(order) + 2];
            p[1] = 1;
            final double t2 = t * t;
            for (int n = 1; n <= (order); ++n) {
                double v = 0;
                p[(n + 1)] = n * (p[n]);
                for (int k = n + 1; k >= 0; k -= 2) {
                    v = (v * t2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + ((k - 3) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= t;
                }
                function[n] = v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void acos(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.acos(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = -1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (n - 1) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + (((2 * n) - k) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void asin(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.asin(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (n - 1) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + (((2 * n) - k) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atan(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.atan(x);
        if ((order) > 0) {
            final double[] q = new double[order];
            q[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 + x2);
            double coeff = f;
            function[1] = coeff * (q[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                q[(n - 1)] = (-n) * (q[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (q[k]);
                    if (k > 2) {
                        q[(k - 2)] = ((k - 1) * (q[(k - 1)])) + (((k - 1) - (2 * n)) * (q[(k - 3)]));
                    }else
                        if (k == 2) {
                            q[0] = q[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atan2(final double[] y, final int yOffset, final double[] x, final int xOffset, final double[] result, final int resultOffset) {
        double[] tmp1 = new double[getSize()];
        multiply(x, xOffset, x, xOffset, tmp1, 0);
        double[] tmp2 = new double[getSize()];
        multiply(y, yOffset, y, yOffset, tmp2, 0);
        add(tmp1, 0, tmp2, 0, tmp2, 0);
        rootN(tmp2, 0, 2, tmp1, 0);
        if ((x[xOffset]) >= 0) {
            add(tmp1, 0, x, xOffset, tmp2, 0);
            divide(y, yOffset, tmp2, 0, tmp1, 0);
            atan(tmp1, 0, tmp2, 0);
            for (int i = 0; i < (tmp2.length); ++i) {
                result[(resultOffset + i)] = 2 * (tmp2[i]);
            }
        }else {
            subtract(tmp1, 0, x, xOffset, tmp2, 0);
            divide(y, yOffset, tmp2, 0, tmp1, 0);
            atan(tmp1, 0, tmp2, 0);
            result[resultOffset] = ((tmp2[0]) <= 0 ? -(org.apache.commons.math3.util.FastMath.PI) : org.apache.commons.math3.util.FastMath.PI) - (2 * (tmp2[0]));
            for (int i = 1; i < (tmp2.length); ++i) {
                result[(resultOffset + i)] = (-2) * (tmp2[i]);
            }
        }
    }

    public void cosh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.cosh(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.sinh(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = function[(i - 2)];
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void sinh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        function[0] = org.apache.commons.math3.util.FastMath.sinh(operand[operandOffset]);
        if ((order) > 0) {
            function[1] = org.apache.commons.math3.util.FastMath.cosh(operand[operandOffset]);
            for (int i = 2; i <= (order); ++i) {
                function[i] = function[(i - 2)];
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void tanh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        final double[] function = new double[1 + (order)];
        final double t = org.apache.commons.math3.util.FastMath.tanh(operand[operandOffset]);
        function[0] = t;
        if ((order) > 0) {
            final double[] p = new double[(order) + 2];
            p[1] = 1;
            final double t2 = t * t;
            for (int n = 1; n <= (order); ++n) {
                double v = 0;
                p[(n + 1)] = (-n) * (p[n]);
                for (int k = n + 1; k >= 0; k -= 2) {
                    v = (v * t2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) - ((k - 3) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= t;
                }
                function[n] = v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void acosh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.acosh(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (x2 - 1);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (1 - n) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((1 - k) * (p[(k - 1)])) + ((k - (2 * n)) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = -(p[1]);
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void asinh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.asinh(x);
        if ((order) > 0) {
            final double[] p = new double[order];
            p[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 + x2);
            double coeff = org.apache.commons.math3.util.FastMath.sqrt(f);
            function[1] = coeff * (p[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                p[(n - 1)] = (1 - n) * (p[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (p[k]);
                    if (k > 2) {
                        p[(k - 2)] = ((k - 1) * (p[(k - 1)])) + ((k - (2 * n)) * (p[(k - 3)]));
                    }else
                        if (k == 2) {
                            p[0] = p[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void atanh(final double[] operand, final int operandOffset, final double[] result, final int resultOffset) {
        double[] function = new double[1 + (order)];
        final double x = operand[operandOffset];
        function[0] = org.apache.commons.math3.util.FastMath.atanh(x);
        if ((order) > 0) {
            final double[] q = new double[order];
            q[0] = 1;
            final double x2 = x * x;
            final double f = 1.0 / (1 - x2);
            double coeff = f;
            function[1] = coeff * (q[0]);
            for (int n = 2; n <= (order); ++n) {
                double v = 0;
                q[(n - 1)] = n * (q[(n - 2)]);
                for (int k = n - 1; k >= 0; k -= 2) {
                    v = (v * x2) + (q[k]);
                    if (k > 2) {
                        q[(k - 2)] = ((k - 1) * (q[(k - 1)])) + ((((2 * n) - k) + 1) * (q[(k - 3)]));
                    }else
                        if (k == 2) {
                            q[0] = q[1];
                        }

                }
                if ((n & 1) == 0) {
                    v *= x;
                }
                coeff *= f;
                function[n] = coeff * v;
            }
        }
        compose(operand, operandOffset, function, result, resultOffset);
    }

    public void compose(final double[] operand, final int operandOffset, final double[] f, final double[] result, final int resultOffset) {
        for (int i = 0; i < (compIndirection.length); ++i) {
            final int[][] mappingI = compIndirection[i];
            double r = 0;
            for (int j = 0; j < (mappingI.length); ++j) {
                final int[] mappingIJ = mappingI[j];
                double product = (mappingIJ[0]) * (f[mappingIJ[1]]);
                for (int k = 2; k < (mappingIJ.length); ++k) {
                    product *= operand[(operandOffset + (mappingIJ[k]))];
                }
                r += product;
            }
            result[(resultOffset + i)] = r;
        }
    }

    public double taylor(final double[] ds, final int dsOffset, final double... delta) {
        double value = 0;
        for (int i = (getSize()) - 1; i >= 0; --i) {
            final int[] orders = getPartialDerivativeOrders(i);
            double term = ds[(dsOffset + i)];
            for (int k = 0; k < (orders.length); ++k) {
                if ((orders[k]) > 0) {
                    term *= (org.apache.commons.math3.util.FastMath.pow(delta[k], orders[k])) / (org.apache.commons.math3.util.ArithmeticUtils.factorial(orders[k]));
                }
            }
            value += term;
        }
        return value;
    }

    public void checkCompatibility(final org.apache.commons.math3.analysis.differentiation.DSCompiler compiler) throws org.apache.commons.math3.exception.DimensionMismatchException {
        if ((parameters) != (compiler.parameters)) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(parameters, compiler.parameters);
        }
        if ((order) != (compiler.order)) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(order, compiler.order);
        }
    }
}
00:40:20.433 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:40:20.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:21.453 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1013 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:21.919 [pool-165-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:21.921 [pool-166-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:21.922 [pool-163-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:21.922 [pool-163-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:21.922 [pool-163-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:949.
00:40:21.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
00:40:21.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:947 which is executed by 32 tests
-707765681
00:40:22.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
00:40:22.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:905 which is executed by 33 tests
-707765681
00:40:22.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:23.554 [pool-168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (994 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:23.980 [pool-169-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:23.982 [pool-170-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:23.982 [pool-167-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:23.982 [pool-167-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:23.983 [pool-167-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:905.
00:40:23.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
00:40:23.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:904 which is executed by 33 tests
-707765681
00:40:24.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:25.303 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (996 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:25.724 [pool-173-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:25.726 [pool-174-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:25.726 [pool-171-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:25.726 [pool-171-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:25.726 [pool-171-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:904.
00:40:25.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
00:40:25.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:898 which is executed by 33 tests
-707765681
00:40:26.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:27.068 [pool-176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1019 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:27.487 [pool-177-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:27.488 [pool-178-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:27.489 [pool-175-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:27.489 [pool-175-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:27.489 [pool-175-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:898.
00:40:27.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
00:40:27.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:897 which is executed by 33 tests
-707765681
00:40:27.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:28.874 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1062 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:29.296 [pool-181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:29.299 [pool-182-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:29.299 [pool-179-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:29.299 [pool-179-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:29.299 [pool-179-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:897.
00:40:29.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
00:40:29.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:896 which is executed by 33 tests
-707765681
00:40:29.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:30.641 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1020 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:31.059 [pool-185-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:31.060 [pool-186-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:31.061 [pool-183-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:31.061 [pool-183-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:31.061 [pool-183-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:896.
00:40:31.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
00:40:31.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:895 which is executed by 33 tests
-707765681
00:40:31.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
00:40:31.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:894 which is executed by 33 tests
-707765681
00:40:31.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
00:40:31.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2423 which is executed by 33 tests
1033054629
00:40:32.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
00:40:32.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:911 which is executed by 35 tests
-707765681
00:40:32.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
00:40:32.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:909 which is executed by 35 tests
-707765681
00:40:32.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:33.730 [pool-188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1012 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:34.153 [pool-189-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:34.155 [pool-190-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:34.155 [pool-187-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:34.155 [pool-187-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:34.156 [pool-187-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:909.
00:40:34.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
00:40:34.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:903 which is executed by 35 tests
-707765681
00:40:34.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:35.500 [pool-192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1020 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:35.926 [pool-193-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:35.970 [pool-194-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:35.970 [pool-191-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:35.971 [pool-191-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:35.971 [pool-191-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:903.
00:40:35.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
00:40:35.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:902 which is executed by 35 tests
-707765681
00:40:36.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
00:40:36.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:883 which is executed by 35 tests
-707765681
00:40:36.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:37.615 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1001 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:38.034 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:38.036 [pool-198-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:38.036 [pool-195-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:38.036 [pool-195-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:38.036 [pool-195-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:883.
00:40:38.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:39.039 [pool-200-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (994 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:39.458 [pool-201-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:39.460 [pool-202-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:39.460 [pool-199-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:39.461 [pool-199-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:39.461 [pool-199-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:883.
00:40:39.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
00:40:39.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:881 which is executed by 35 tests
-707765681
00:40:39.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
00:40:39.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:872 which is executed by 35 tests
-707765681
00:40:40.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:41.110 [pool-204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1009 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:41.529 [pool-205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:41.531 [pool-206-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:41.531 [pool-203-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:41.532 [pool-203-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:41.532 [pool-203-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:872.
00:40:41.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:42.538 [pool-208-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (999 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:43.422 [pool-209-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (432 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:43.425 [pool-210-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<3.141592653589793> but was:<0.0>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:822)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:43.426 [pool-207-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:43.426 [pool-207-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<3.141592653589793> but was:<0.0>]
00:40:43.426 [pool-207-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.analysis.differentiation.DSCompiler:872.
00:40:43.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
00:40:43.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2481 which is executed by 36 tests
1033054629
00:40:43.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
00:40:43.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2480 which is executed by 36 tests
1033054629
00:40:44.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:45.153 [pool-212-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1006 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:46.605 [pool-213-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:46.608 [pool-214-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:46.612 [pool-211-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:46.612 [pool-211-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:46.612 [pool-211-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:2480.
00:40:46.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
00:40:46.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2479 which is executed by 36 tests
1033054629
00:40:46.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:47.999 [pool-216-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1027 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:49.383 [pool-217-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:49.385 [pool-218-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:40:49.385 [pool-215-thread-1] DEBUG tests.output - Failing tests with false: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:49.385 [pool-215-thread-1] DEBUG tests.output - Failing tests with true: 
[testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest): expected:<0.0> but was:<NaN>]
00:40:49.385 [pool-215-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:2479.
00:40:49.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
00:40:49.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2477 which is executed by 36 tests
1033054629
00:40:49.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
00:40:49.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1666 which is executed by 80 tests
1033054629
00:40:50.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
00:40:50.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1664 which is executed by 80 tests
1033054629
00:40:50.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
00:40:50.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1662 which is executed by 80 tests
1033054629
00:40:50.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:51.777 [pool-220-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (999 ms)
<> Total tests run: 66
<> Ignored tests: 0
<> Failed tests: 1
~ testAtan2SpecialCases(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:44:36.382 [pool-219-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:44:36.383 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:44:36.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
00:44:36.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1660 which is executed by 80 tests
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at fr.inria.lille.repair.Main.main(Main.java:106)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.Arrays.copyOfRange(Arrays.java:3664)
	at java.lang.String.<init>(String.java:207)
	at java.util.zip.ZipCoder.toString(ZipCoder.java:59)
	at java.util.zip.ZipFile.getZipEntry(ZipFile.java:583)
	at java.util.zip.ZipFile.access$900(ZipFile.java:60)
	at java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
	at java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:514)
	at java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:495)
	at org.eclipse.jdt.internal.compiler.batch.ClasspathJar.getModulesDeclaringPackage(ClasspathJar.java:234)
	at org.eclipse.jdt.internal.compiler.batch.ClasspathLocation.isPackage(ClasspathLocation.java:177)
	at org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(ClasspathJar.java:111)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.internalFindClass(FileSystem.java:443)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.findClass(FileSystem.java:385)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(FileSystem.java:529)
	at org.eclipse.jdt.internal.compiler.env.IModuleAwareNameEnvironment.findType(IModuleAwareNameEnvironment.java:94)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPackage(LookupEnvironment.java:1094)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildTypeBindings(CompilationUnitScope.java:129)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(LookupEnvironment.java:457)
	at org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(Compiler.java:838)
	at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:387)
	at spoon.support.compiler.jdt.TreeBuilderCompiler.buildUnits(TreeBuilderCompiler.java:73)
	at spoon.support.compiler.jdt.JDTBatchCompiler.getUnits(JDTBatchCompiler.java:266)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnits(JDTBasedSpoonCompiler.java:444)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:388)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:53)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:61)
	at fr.inria.lille.commons.spoon.SpoonedClass.<init>(SpoonedClass.java:14)
	at fr.inria.lille.commons.spoon.SpoonedProject.forked(SpoonedProject.java:47)
	at fr.inria.lille.repair.nopol.NoPol.runOnStatement(NoPol.java:222)

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic> [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < cocospoon|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

  [(-m|--mode) <repair|ranking>]
        Define the mode of execution. (default: repair)

  (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic>
        The repair type (example fixing only conditions, or adding
        precondition). REQUIRED OPTION (default: condition)

  [(-o|--oracle) <angelic|symbolic>]
        Define the oracle (only used with repair mode). (default: angelic)

  [(-y|--synthesis) <smt|dynamoth>]
        Define the patch synthesis. (default: smt)

  [(-l|--solver) <z3|cvc4>]
        Define the solver (only used with smt synthesis). (default: z3)

  [(-p|--solver-path) <solverPath>]
        Define the solver binary path (only used with smt synthesis).

  (-s|--source) source1:source2:...:sourceN 
        Define the path to the source code of the project.

  (-c|--classpath) <classpath>
        Define the classpath of the project.

  [(-t|--test) test1:test2:...:testN ]
        Define the tests of the project (both failing and passing),
        fully-qualified, separated with ':' (even if the classpath contains
        other tests, only those are considered.

  [--complianceLevel <complianceLevel>]
        The compliance level of the project. (default: 7)

  [--maxTime <maxTime>]
        The maximum time execution in minute for the whole execution of
        Nopol.(default: 10)

  [--maxTimeType <maxTimeType>]
        The maximum time execution in minute for one type of patch. (default: 5)

  [(-z|--flocal) < cocospoon|dumb|gzoltar>]
        Define the fault localizer to be used. (default: gzoltar)

  [--output <outputFolder>]
        Define the location where the patches will be saved. (default: .)

  [--json[:<outputJson>]]
        Output a json file in the current working directory.

Command exited with non-zero status 255
3617.84user 29.91system 24:41.26elapsed 246%CPU (0avgtext+0avgdata 4632448maxresident)k
50992inputs+9160outputs (4major+1630646minor)pagefaults 0swaps


Node: granduc-18.luxembourg.grid5000.fr



Date: Thu Nov 29 00:45:42 EST 2018

