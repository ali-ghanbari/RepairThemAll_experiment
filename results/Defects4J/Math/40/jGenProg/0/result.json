{
  "repair_end": "2018-12-01 23:01:16.946552", 
  "repair_begin": "2018-12-01 22:49:33.121414", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "\\/var\\/lib\\/oar\\/.batch_job_bashrc: line 5: \\/home\\/tdurieux\\/.bashrc: No such file or directory\\n--- org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BracketingNthOrderBrentSolver.java\\n+++ org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BracketingNthOrderBrentSolver.java\\n@@ -260,7 +260,7 @@\\n \\t\\t\\t\\t\\tif ((signChangeIndex - start) >= (end - signChangeIndex)) {\\n \\n \\t\\t\\t\\t\\t\\t++start;\\n-\\t\\t\\t\\t\\t}else {\\n+\\t\\t\\t\\t\\t}else { \\t\\t\\t\\t\\t\\tdo { \\t\\t\\t\\t\\t\\t\\tjava.lang.System.arraycopy(x, start, tmpX, start, (end - start)); \\t\\t\\t\\t\\t\\t\\tnextX = guessX(targetY, tmpX, y, start, end); \\t\\t\\t\\t\\t\\t\\tif (!((nextX > xA) && (nextX < xB))) { \\t\\t\\t\\t\\t\\t\\t\\tif ((signChangeIndex - start) >= (end - signChangeIndex)) { \\t\\t\\t\\t\\t\\t\\t\\t\\t++start;}else {\\n \\n \\t\\t\\t\\t\\t\\t--end;\\n \\t\\t\\t\\t\\t}\\n@@ -270,7 +270,7 @@\\n \\n \\t\\t\\t\\t}\\n \\n-\\t\\t\\t} while ((java.lang.Double.isNaN(nextX)) && ((end - start) > 1) );\\n+\\t\\t\\t\\t\\t\\t} while ((java.lang.Double.isNaN(nextX)) && ((end - start) > 1) ); \\t\\t\\t\\t\\t\\t--end;} \\t\\t\\t\\t\\tnextX = java.lang.Double.NaN;}} while ((java.lang.Double.isNaN(nextX)) && ((end - start) > 1) );\\n \\n \\t\\t\\tif (java.lang.Double.isNaN(nextX)) {\\n \\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/tmp\\/jGenProg_Defects4J_Math_40\\/.\\/output_astor\\/AstorMain-Math-40\\/\\/src\\/\\/variant-38_f\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BracketingNthOrderBrentSolver.java", 
          "ORIGINAL_CODE": "--end", 
          "INGREDIENT_SCOPE": "LOCAL", 
          "PATCH_HUNK_CODE": "do {\\n\\n\\n\\tjava.lang.System.arraycopy(x, start, tmpX, start, (end - start));\\n\\tnextX = guessX(targetY, tmpX, y, start, end);\\n\\n\\tif (!((nextX > xA) && (nextX < xB))) {\\n\\n\\n\\n\\n\\n\\t\\tif ((signChangeIndex - start) >= (end - signChangeIndex)) {\\n\\n\\t\\t\\t++start;\\n\\t\\t}else {\\n\\n\\t\\t\\t--end;\\n\\t\\t}\\n\\n\\n\\t\\tnextX = java.lang.Double.NaN;\\n\\n\\t}\\n\\n} while ((java.lang.Double.isNaN(nextX)) && ((end - start) > 1) )", 
          "INGREDIENT_PARENT": "do {\\n\\n\\n\\tjava.lang.System.arraycopy(x, start, tmpX, start, (end - start));\\n\\tnextX = guessX(targetY, tmpX, y, start, end);\\n\\n\\tif (!((nextX > xA) && (nextX < xB))) {\\n\\n\\n\\n\\n\\n\\t\\tif ((signChangeIndex - start) >= (end - signChangeIndex)) {\\n\\n\\t\\t\\t++start;\\n\\t\\t}else {\\n\\n\\t\\t\\t--end;\\n\\t\\t}\\n\\n\\n\\t\\tnextX = java.lang.Double.NaN;\\n\\n\\t}\\n\\n} while ((java.lang.Double.isNaN(nextX)) && ((end - start) > 1) )", 
          "LOCATION": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver", 
          "BUGGY_CODE_TYPE": "CtUnaryOperatorImpl|CtBlockImpl", 
          "OPERATOR": "InsertBeforeOp", 
          "PATH": "\\/tmp\\/jGenProg_Defects4J_Math_40\\/output_astor\\/AstorMain-Math-40\\/src\\/default\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BracketingNthOrderBrentSolver.java", 
          "LINE": "265", 
          "MP_RANKING": "19", 
          "SUSPICIOUNESS": "0.189", 
          "PATCH_HUNK_TYPE": "CtDoImpl|CtBlockImpl"
        }
      ], 
      "GENERATION": "19", 
      "VARIANT_ID": "38", 
      "TIME": "257", 
      "VALIDATION": "|true|0|3199|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/tmp\\/jGenProg_Defects4J_Math_40\\/.\\/output_astor\\/AstorMain-Math-40\\/\\/bin\\/\\/variant-38"
    }
  ]
}