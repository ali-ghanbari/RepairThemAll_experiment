{
  "repair_end": "2018-12-01 14:24:39.531616", 
  "repair_begin": "2018-12-01 12:24:37.469563", 
  "patches": [
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_434/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:24:59.457925990 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_495/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 07:30:05.228953053 -0500\n@@ -71,7 +71,8 @@\n \n     /** {@inheritDoc} */\n     public ExceptionContext getContext() {\n-        return context;\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context;\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_495/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:30:05.228953053 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 74, 
          "faulty": "return context;", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1446/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:18:58.250151351 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_562/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:33:09.958781443 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1080/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:59:03.182241950 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1080/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:59:03.186241991 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1397/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:16:17.920555596 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return Float.POSITIVE_INFINITY;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return Float.POSITIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_601/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:34:25.183525909 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "Replace", 
          "seed": "return buildMessage(locale,\": \");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_865/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:50:36.269174635 -0500\n@@ -183,7 +183,10 @@\n             }\n         }\n \n-        return sb.toString();\n+        if (++count < len) {\n+\t\t\tsb.append(separator);\n+\t\t}\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_865/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:50:36.273174675 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "if (++count < len) {\n  sb.append(separator);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_626/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:35:15.028019174 -0500\n@@ -212,6 +212,10 @@\n      */\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n+\t\t\tnumericalVarianceIsCalculated = true;\n+\t\t}\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_626/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:35:15.028019174 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_839/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:49:40.160613423 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        numericalVarianceIsCalculated = true;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_839/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:49:40.164613462 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "numericalVarianceIsCalculated=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1254/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:08:08.867686518 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return a + b;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return a + b;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_939/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:53:06.606678019 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -1.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1114/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 08:01:12.039529259 -0500\n@@ -174,9 +174,11 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            msgPatterns.add(pat);\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n-            sb.append(fmt.format(args));\n+            this.throwable = throwable;\n+\t\t\tsb.append(fmt.format(args));\n             if (++count < len) {\n                 // Add a separator if there are other messages.\n                 sb.append(separator);\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1114/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:01:12.039529259 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 179, 
          "faulty": "sb.append(fmt.format(args));", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_547/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:31:42.501915862 -0500\n@@ -188,7 +188,11 @@\n      * </ul>\n      */\n     public double getNumericalMean() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        if (!numericalVarianceIsCalculated) {\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n+\t\t\tnumericalVarianceIsCalculated = true;\n+\t\t}\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n             return denominatorDF / (denominatorDF - 2);\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_547/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:31:42.501915862 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 191, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_593/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:34:10.559381184 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_593/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:34:10.563381224 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_687/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:39:22.270465614 -0500\n@@ -190,7 +190,12 @@\n     public double getNumericalMean() {\n         final double denominatorDF = getDenominatorDegreesOfFreedom();\n \n-        if (denominatorDF > 2) {\n+        if (denominatorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tdenominatorDegreesOfFreedom);\n+\t\t}\n+\t\tif (denominatorDF > 2) {\n             return denominatorDF / (denominatorDF - 2);\n         }\n \n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_687/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:39:22.274465653 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_687/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:39:22.274465653 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 193, 
          "faulty": "if (denominatorDF > 2) {\n  return denominatorDF / (denominatorDF - 2);\n}", 
          "type": "InsertBefore", 
          "seed": "if (denominatorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,denominatorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_647/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:37:00.953067350 -0500\n@@ -176,14 +176,16 @@\n             final Object[] args = msgArguments.get(i);\n             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n-            sb.append(fmt.format(args));\n+            this.throwable = throwable;\n+\t\t\tsb.append(fmt.format(args));\n             if (++count < len) {\n                 // Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n \n-        return sb.toString();\n+        msgPatterns = new ArrayList<Localizable>(len);\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_647/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:37:00.953067350 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 179, 
          "faulty": "sb.append(fmt.format(args));", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "msgPatterns=new ArrayList<Localizable>(len);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_498/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:30:09.428994626 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_498/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:30:09.428994626 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_608/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:34:41.719689555 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_608/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 07:34:41.719689555 -0500\n@@ -121,7 +121,7 @@\n      * {@code n * p * (1 - p)}.\n      */\n     public double getNumericalVariance() {\n-        final double p = probabilityOfSuccess;\n+        final double p = getProbabilityOfSuccess();\n         return numberOfTrials * p * (1 - p);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 124, 
          "faulty": "final double p=probabilityOfSuccess;", 
          "type": "Replace", 
          "seed": "final double p=getProbabilityOfSuccess();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_847/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:49:58.764799513 -0500\n@@ -183,7 +183,8 @@\n             }\n         }\n \n-        return sb.toString();\n+        msgPatterns = new ArrayList<Localizable>(len);\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_847/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:49:58.764799513 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "msgPatterns=new ArrayList<Localizable>(len);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_533/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:31:17.561669011 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            msgPatterns.add(pat);\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_533/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:31:17.565669050 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1147/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 08:02:16.712175234 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1147/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:02:16.716175274 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1147/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 08:02:16.716175274 -0500\n@@ -121,7 +121,7 @@\n      * {@code n * p * (1 - p)}.\n      */\n     public double getNumericalVariance() {\n-        final double p = probabilityOfSuccess;\n+        final double p = getProbabilityOfSuccess();\n         return numberOfTrials * p * (1 - p);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 124, 
          "faulty": "final double p=probabilityOfSuccess;", 
          "type": "Replace", 
          "seed": "final double p=getProbabilityOfSuccess();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1349/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 08:14:34.411525244 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1349/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:14:34.411525244 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_538/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:31:25.693749500 -0500\n@@ -176,7 +176,8 @@\n             final Object[] args = msgArguments.get(i);\n             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n-            sb.append(fmt.format(args));\n+            this.throwable = throwable;\n+\t\t\tsb.append(fmt.format(args));\n             if (++count < len) {\n                 // Add a separator if there are other messages.\n                 sb.append(separator);\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_538/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:31:25.697749539 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_538/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 07:31:25.697749539 -0500\n@@ -121,7 +121,7 @@\n      * {@code n * p * (1 - p)}.\n      */\n     public double getNumericalVariance() {\n-        final double p = probabilityOfSuccess;\n+        final double p = getProbabilityOfSuccess();\n         return numberOfTrials * p * (1 - p);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 179, 
          "faulty": "sb.append(fmt.format(args));", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 124, 
          "faulty": "final double p=probabilityOfSuccess;", 
          "type": "Replace", 
          "seed": "final double p=getProbabilityOfSuccess();"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_555/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:31:57.274062069 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_929/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 07:52:49.846510440 -0500\n@@ -71,7 +71,8 @@\n \n     /** {@inheritDoc} */\n     public ExceptionContext getContext() {\n-        return context;\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context;\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_929/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:52:49.850510480 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.log(n);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.log(n);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 74, 
          "faulty": "return context;", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_851/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:50:05.072862609 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            msgPatterns.add(pat);\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_851/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:50:05.072862609 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_851/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 07:50:05.072862609 -0500\n@@ -121,7 +121,7 @@\n      * {@code n * p * (1 - p)}.\n      */\n     public double getNumericalVariance() {\n-        final double p = probabilityOfSuccess;\n+        final double p = getProbabilityOfSuccess();\n         return numberOfTrials * p * (1 - p);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 124, 
          "faulty": "final double p=probabilityOfSuccess;", 
          "type": "Replace", 
          "seed": "final double p=getProbabilityOfSuccess();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1135/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:01:53.579944189 -0500\n@@ -213,7 +213,6 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1135/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:01:53.579944189 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Delete", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_674/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:37:57.173623642 -0500\n@@ -171,7 +171,8 @@\n         final StringBuilder sb = new StringBuilder();\n         int count = 0;\n         final int len = msgPatterns.size();\n-        for (int i = 0; i < len; i++) {\n+        this.throwable = throwable;\n+\t\tfor (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_674/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:37:57.173623642 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 174, 
          "faulty": "for (int i=0; i < len; i++) {\n  final Localizable pat=msgPatterns.get(i);\n  final Object[] args=msgArguments.get(i);\n  final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);\n  sb.append(fmt.format(args));\n  if (++count < len) {\n    sb.append(separator);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_588/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:34:02.355299993 -0500\n@@ -213,7 +213,7 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            return numericalVariance;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_588/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:34:02.355299993 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -1.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_731/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 07:41:56.251989012 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_731/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:41:56.255989052 -0500\n@@ -213,7 +213,7 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            return numericalVariance;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_731/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:41:56.255989052 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_763/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:42:59.156611303 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n@@ -183,7 +183,10 @@\n             }\n         }\n \n-        return sb.toString();\n+        if (++count < len) {\n+\t\t\tsb.append(separator);\n+\t\t}\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_763/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:42:59.160611342 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "if (++count < len) {\n  sb.append(separator);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1341/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:14:19.691378709 -0500\n@@ -191,7 +191,9 @@\n         final double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n-            return denominatorDF / (denominatorDF - 2);\n+            if (denominatorDF > 2) {\n+\t\t\t\treturn denominatorDF / (denominatorDF - 2);\n+\t\t\t}\n         }\n \n         return Double.NaN;\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1341/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:14:19.695378749 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 194, 
          "faulty": "return denominatorDF / (denominatorDF - 2);", 
          "type": "Replace", 
          "seed": "if (denominatorDF > 2) {\n  return denominatorDF / (denominatorDF - 2);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_396/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:20:42.019376740 -0500\n@@ -175,7 +175,8 @@\n     /** {@inheritDoc} */\n     @Override\n     protected double getSolverAbsoluteAccuracy() {\n-        return solverAbsoluteAccuracy;\n+        numericalVariance = calculateNumericalVariance();\n+\t\treturn solverAbsoluteAccuracy;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_396/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:20:42.019376740 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 178, 
          "faulty": "return solverAbsoluteAccuracy;", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_663/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:37:32.477379280 -0500\n@@ -183,7 +183,8 @@\n             }\n         }\n \n-        return sb.toString();\n+        this.throwable = throwable;\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_663/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:37:32.481379319 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1438/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:18:43.542004972 -0500\n@@ -212,6 +212,10 @@\n      */\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n+\t\t\tnumericalVarianceIsCalculated = true;\n+\t\t}\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1438/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 08:18:43.542004972 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            msgPatterns.add(pat);\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1438/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:18:43.542004972 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_964/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:53:54.807159927 -0500\n@@ -183,7 +183,8 @@\n             }\n         }\n \n-        return sb.toString();\n+        msgArguments = new ArrayList<Object[]>(len);\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_964/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:53:54.811159966 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "msgArguments=new ArrayList<Object[]>(len);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_904/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:51:55.861970627 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "Replace", 
          "seed": "return sb.toString();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_758/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 07:42:50.748528126 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_758/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:42:50.752528166 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_621/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:35:06.767937433 -0500\n@@ -176,7 +176,8 @@\n             final Object[] args = msgArguments.get(i);\n             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n-            sb.append(fmt.format(args));\n+            this.throwable = throwable;\n+\t\t\tsb.append(fmt.format(args));\n             if (++count < len) {\n                 // Add a separator if there are other messages.\n                 sb.append(separator);\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_621/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:35:06.767937433 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 179, 
          "faulty": "sb.append(fmt.format(args));", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_449/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:25:26.590194627 -0500\n@@ -213,7 +213,7 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            return numericalVariance;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_449/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:25:26.590194627 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            msgPatterns.add(pat);\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_449/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:25:26.590194627 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_960/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:53:48.463096501 -0500\n@@ -191,7 +191,10 @@\n         final double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n-            return denominatorDF / (denominatorDF - 2);\n+            if (denominatorDF > 2) {\n+\t\t\t\treturn denominatorDF / (denominatorDF - 2);\n+\t\t\t}\n+\t\t\treturn denominatorDF / (denominatorDF - 2);\n         }\n \n         return Double.NaN;\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_960/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:53:48.467096542 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 194, 
          "faulty": "return denominatorDF / (denominatorDF - 2);", 
          "type": "InsertBefore", 
          "seed": "if (denominatorDF > 2) {\n  return denominatorDF / (denominatorDF - 2);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_936/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:53:02.418636145 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return Math.PI / 2.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return Math.PI / 2.0;"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_527/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:31:07.285567299 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 74, 
          "faulty": "return context;", 
          "type": "Replace", 
          "seed": "return context;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1365/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:15:05.251832246 -0500\n@@ -227,7 +227,8 @@\n         final double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n-            final double numeratorDF = getNumeratorDegreesOfFreedom();\n+            numericalVarianceIsCalculated = true;\n+\t\t\tfinal double numeratorDF = getNumeratorDegreesOfFreedom();\n             final double denomDFMinusTwo = denominatorDF - 2;\n \n             return ( 2 * (denominatorDF * denominatorDF) * (numeratorDF + denominatorDF - 2) ) /\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1365/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:15:05.255832286 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.log(n);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 230, 
          "faulty": "final double numeratorDF=getNumeratorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "numericalVarianceIsCalculated=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.log(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 06:24:22.022021414 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1399/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-01 08:16:20.032576618 -0500\n@@ -71,7 +71,8 @@\n \n     /** {@inheritDoc} */\n     public ExceptionContext getContext() {\n-        return context;\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context;\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1399/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 08:16:20.032576618 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1399/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-01 08:16:20.036576658 -0500\n@@ -121,7 +121,7 @@\n      * {@code n * p * (1 - p)}.\n      */\n     public double getNumericalVariance() {\n-        final double p = probabilityOfSuccess;\n+        final double p = getProbabilityOfSuccess();\n         return numberOfTrials * p * (1 - p);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 124, 
          "faulty": "final double p=probabilityOfSuccess;", 
          "type": "Replace", 
          "seed": "final double p=getProbabilityOfSuccess();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 74, 
          "faulty": "return context;", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 06:24:22.026021453 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_319/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-01 07:13:05.918858638 -0500\n@@ -170,7 +170,8 @@\n                                 String separator) {\n         final StringBuilder sb = new StringBuilder();\n         int count = 0;\n-        final int len = msgPatterns.size();\n+        context = new HashMap<String, Object>();\n+\t\tfinal int len = msgPatterns.size();\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_319/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:13:05.918858638 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 173, 
          "faulty": "final int len=msgPatterns.size();", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1052/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:58:02.905639668 -0500\n@@ -213,9 +213,9 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            return numericalVariance;\n         }\n-        return numericalVariance;\n+        return solverAbsoluteAccuracy;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_1052/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:58:02.909639709 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 218, 
          "faulty": "return numericalVariance;", 
          "type": "Replace", 
          "seed": "return solverAbsoluteAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:24:22.274023893 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_438/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:25:05.733988131 -0500\n@@ -213,7 +213,7 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            return numericalVariance;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_438/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:25:05.733988131 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "return numericalVariance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 06:24:25.950060055 -0500\n+++ /tmp/Arja_Defects4J_Math_31/patches_85dh/Patch_262/patched/tmp/Arja_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-01 07:09:10.048522610 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }
  ]
}