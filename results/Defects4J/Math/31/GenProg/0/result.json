{
  "repair_end": "2018-12-02 20:42:16.801121", 
  "repair_begin": "2018-12-02 18:47:53.515904", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1229/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:42:15.639590958 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1229/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:42:15.643590971 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1229/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:42:15.643590971 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1229/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:42:15.643590971 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 176, 
          "faulty": "final Object[] args=msgArguments.get(i);", 
          "type": "Replace", 
          "seed": "final Object[] args=msgArguments.get(i);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_945/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:16:22.782300044 -0500\n@@ -213,7 +213,6 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_945/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:16:22.782300044 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Delete", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_556/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:52:17.133236530 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        numericalVariance = calculateNumericalVariance();\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_556/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:52:17.133236530 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_603/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:55:13.129858850 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_603/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:55:13.129858850 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_930/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:15:55.442209842 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_930/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:55.442209842 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                double p = 2.7553817452272217E-6;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_930/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:55.446209855 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "double p=2.7553817452272217E-6;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_453/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:46:19.079984002 -0500\n@@ -183,7 +183,10 @@\n             }\n         }\n \n-        return sb.toString();\n+        if (++count < len) {\n+\t\t\tsb.append(separator);\n+\t\t}\n+\t\treturn sb.toString();\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_453/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:46:19.083984017 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 186, 
          "faulty": "return sb.toString();", 
          "type": "InsertBefore", 
          "seed": "if (++count < len) {\n  sb.append(separator);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_776/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:07:25.852484548 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_776/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:07:25.852484548 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_776/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:07:25.856484562 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_648/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:00:42.899007249 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_648/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:00:42.899007249 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_648/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:00:42.903007264 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_648/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:00:42.903007264 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1109/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:32:09.785524555 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1109/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:32:09.785524555 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1109/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:32:09.789524570 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_808/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:10:44.733170162 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_532/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:50:29.864843505 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_532/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:50:29.864843505 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_532/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:50:29.880843563 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1214/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:41:48.207498728 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1214/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:41:48.207498728 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -144,7 +146,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1214/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:41:48.211498741 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1214/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:41:48.211498741 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1214/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:41:48.211498741 -0500\n@@ -83,6 +83,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_835/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:11:37.169347878 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_835/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:11:37.173347892 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_835/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:11:37.173347892 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 12:47:37.712289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 14:00:45.163016030 -0500\n@@ -146,7 +146,8 @@\n      * @return upper bound of the support (number of trials or 0)\n      */\n     public int getSupportUpperBound() {\n-        return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n+        final double mu = getNumericalMean();\n+\t\treturn probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:00:45.167016045 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:00:45.167016045 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 149, 
          "faulty": "return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1139/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:27.066205082 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1139/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:35:27.066205082 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1139/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:27.070205096 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1193/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:38:27.306819898 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1193/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:38:27.310819912 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1193/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:38:27.310819912 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1193/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:38:27.310819912 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 176, 
          "faulty": "final Object[] args=msgArguments.get(i);", 
          "type": "Replace", 
          "seed": "final Object[] args=msgArguments.get(i);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1046/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:23:22.727669537 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1172/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:36:27.042410340 -0500\n@@ -215,7 +215,8 @@\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n-        return numericalVariance;\n+        final double mu = getNumericalMean();\n+\t\treturn numericalVariance;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1172/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:36:27.046410354 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1172/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:36:27.046410354 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1172/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:36:27.046410354 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1172/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:36:27.050410368 -0500\n@@ -83,6 +83,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 218, 
          "faulty": "return numericalVariance;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1055/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:26:19.412291081 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -144,7 +146,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1055/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:26:19.436291166 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1055/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:26:19.440291181 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1055/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:26:19.440291181 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_785/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:09:04.728827933 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_785/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:09:04.732827947 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_725/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:03:15.171583786 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_725/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:15.175583800 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_725/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:15.175583800 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_725/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:15.175583800 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_934/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:16:02.274232399 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_934/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:16:02.278232411 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_793/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:09:18.888876679 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_793/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:09:18.888876679 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_793/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:09:18.892876692 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_380/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:43:38.155421225 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_380/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:43:38.167421268 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                x *= 1.8014398509481984E16;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_380/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:43:38.167421268 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "x*=1.8014398509481984E16;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_832/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:11:32.553332276 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_832/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:11:32.553332276 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_832/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:11:32.557332289 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_832/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:11:32.557332289 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_742/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:45.111694159 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_742/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:45.111694159 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_742/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:45.115694173 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 12:47:37.712289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_591/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 13:54:50.593780475 -0500\n@@ -122,7 +122,10 @@\n      */\n     public double getNumericalVariance() {\n         final double p = probabilityOfSuccess;\n-        return numberOfTrials * p * (1 - p);\n+        if (p < 0 || p > 1) {\n+\t\t\tthrow new OutOfRangeException(p, 0, 1);\n+\t\t}\n+\t\treturn numberOfTrials * p * (1 - p);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_591/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:54:50.597780491 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double pi2a = 1.5707963267948966;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_591/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:54:50.597780491 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double pi2a=1.5707963267948966;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 125, 
          "faulty": "return numberOfTrials * p * (1 - p);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0 || p > 1) {\n  throw new OutOfRangeException(p,0,1);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_925/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:15:46.502180310 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_925/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:46.502180310 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_925/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:46.506180324 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_540/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:50:43.412893824 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_540/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:50:43.412893824 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_479/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:47:08.488152977 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_692/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:02:11.023344193 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_692/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:02:11.023344193 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_965/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:18:23.038694995 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_965/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:18:23.042695007 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_965/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:18:23.042695007 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_965/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:18:23.042695007 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_764/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:04:23.931836006 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_764/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:04:23.931836006 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_764/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:04:23.931836006 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_441/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:45:53.887897218 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_858/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:13:38.293754583 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_858/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:13:38.297754597 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_858/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:38.297754597 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_753/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:04:03.395761139 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_753/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:04:03.395761139 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_753/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:04:03.399761153 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 12:47:37.712289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_678/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 14:01:45.995249469 -0500\n@@ -146,7 +146,8 @@\n      * @return upper bound of the support (number of trials or 0)\n      */\n     public int getSupportUpperBound() {\n-        return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n+        final double mu = getNumericalMean();\n+\t\treturn probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_678/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:01:45.995249469 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_678/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:01:45.995249469 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 149, 
          "faulty": "return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_783/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:09:02.384819854 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_783/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:09:02.388819868 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:55:08.545842936 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        numericalVariance = calculateNumericalVariance();\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:55:08.549842949 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 13:55:08.549842949 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:55:08.573843033 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:55:08.573843033 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_578/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:53:06.481413563 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double pi2a = 1.5707963267948966;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_578/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:53:06.485413578 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double pi2a=1.5707963267948966;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_729/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:21.975608945 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_729/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:21.975608945 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1128/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:10.786149242 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1128/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:10.786149242 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1205/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:40:10.715170081 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1205/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:40:10.715170081 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1205/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:40:10.715170081 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1073/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:28:14.912701726 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1073/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:28:14.912701726 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1107/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:32:07.377516193 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1107/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:32:07.377516193 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1107/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:32:07.381516208 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1107/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:32:07.381516208 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_466/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:46:43.768068632 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_466/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:46:43.772068647 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_882/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:14:26.117913899 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_882/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:14:26.121913912 -0500\n@@ -77,12 +77,13 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_887/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:14:35.773945989 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_887/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:14:35.777946003 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_469/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:46:48.304084138 -0500\n@@ -160,7 +160,12 @@\n      * @return the numerator degrees of freedom.\n      */\n     public double getNumeratorDegreesOfFreedom() {\n-        return numeratorDegreesOfFreedom;\n+        if (numeratorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tnumeratorDegreesOfFreedom);\n+\t\t}\n+\t\treturn numeratorDegreesOfFreedom;\n     }\n \n     /**\n@@ -211,7 +216,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        numericalVariance = calculateNumericalVariance();\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_469/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:46:48.304084138 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 163, 
          "faulty": "return numeratorDegreesOfFreedom;", 
          "type": "InsertBefore", 
          "seed": "if (numeratorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,numeratorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_787/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:09:07.396837125 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_787/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:09:07.396837125 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\tint result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1137/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:35:24.770197210 -0500\n@@ -215,7 +215,8 @@\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n-        return numericalVariance;\n+        final double mu = getNumericalMean();\n+\t\treturn numericalVariance;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1137/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:24.774197224 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1137/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:35:24.774197224 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1137/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:24.774197224 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1137/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:24.774197224 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 218, 
          "faulty": "return numericalVariance;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_977/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:19:55.350996455 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_977/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:19:55.350996455 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_977/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:19:55.350996455 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_977/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:19:55.354996469 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_709/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:02:45.179472315 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_709/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:02:45.179472315 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_709/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:02:45.183472329 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_709/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:02:45.183472329 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1027/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:21:23.787284113 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -168,7 +170,9 @@\n      */\n     private String buildMessage(Locale locale,\n                                 String separator) {\n-        final StringBuilder sb = new StringBuilder();\n+        final String path = LocalizedFormats.class\n+\t\t\t\t\t\t\t\t\t\t\t.getName().replaceAll(\"\\\\.\", \"/\");\n+\t\tfinal StringBuilder sb = new StringBuilder();\n         int count = 0;\n         final int len = msgPatterns.size();\n         for (int i = 0; i < len; i++) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1027/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:21:23.791284126 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1027/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:21:23.791284126 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1027/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:21:23.791284126 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 171, 
          "faulty": "final StringBuilder sb=new StringBuilder();", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_719/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:03.775541539 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_719/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:03.775541539 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_719/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:03.779541555 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1155/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:56.838307059 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1155/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:56.838307059 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1155/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:56.842307074 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 176, 
          "faulty": "final Object[] args=msgArguments.get(i);", 
          "type": "Replace", 
          "seed": "final Object[] args=msgArguments.get(i);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_703/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:02:33.715429456 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        this.throwable = throwable;\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_703/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:02:33.719429470 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_703/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:02:33.719429470 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_703/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:02:33.719429470 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1182/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:38:06.666749792 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1182/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:38:06.666749792 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return Math.PI / 2;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1182/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:38:06.670749805 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return Math.PI / 2;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_937/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:16:07.002248002 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_917/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:15:32.810135044 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_917/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:32.810135044 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_917/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:32.810135044 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_841/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:13:06.497648288 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_841/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:06.501648301 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1125/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:06.138133291 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1125/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:06.138133291 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1125/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:06.142133304 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 176, 
          "faulty": "final Object[] args=msgArguments.get(i);", 
          "type": "Replace", 
          "seed": "final Object[] args=msgArguments.get(i);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_851/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:13:24.757709370 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -144,7 +146,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_851/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:13:24.761709383 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_851/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:24.761709383 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1016/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:21:00.735209229 -0500\n@@ -168,7 +168,9 @@\n      */\n     private String buildMessage(Locale locale,\n                                 String separator) {\n-        final StringBuilder sb = new StringBuilder();\n+        final String path = LocalizedFormats.class\n+\t\t\t\t\t\t\t\t\t\t\t.getName().replaceAll(\"\\\\.\", \"/\");\n+\t\tfinal StringBuilder sb = new StringBuilder();\n         int count = 0;\n         final int len = msgPatterns.size();\n         for (int i = 0; i < len; i++) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1016/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:21:00.739209242 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1016/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:21:00.739209242 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1016/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:21:00.739209242 -0500\n@@ -83,6 +83,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 171, 
          "faulty": "final StringBuilder sb=new StringBuilder();", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_871/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:14:03.541838773 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_871/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:14:03.541838773 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                boolean subnormal = false;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_871/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:14:03.545838787 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "boolean subnormal=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_744/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:03:47.367702440 -0500\n@@ -213,7 +213,6 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_744/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:47.371702454 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_744/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:47.371702454 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_744/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:47.371702454 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Delete", 
          "seed": "recomputeZ();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_797/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:09:25.736900217 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_797/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:09:25.736900217 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_803/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:10:35.881140051 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_803/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:10:35.881140051 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_803/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:10:35.881140051 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1132/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:35:17.714173012 -0500\n@@ -188,7 +188,8 @@\n      * </ul>\n      */\n     public double getNumericalMean() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        int j = 1;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n             return denominatorDF / (denominatorDF - 2);\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1132/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:17.714173012 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1132/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:17.714173012 -0500\n@@ -83,6 +83,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 191, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "int j=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1012/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:53.879186945 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1012/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:20:53.879186945 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1012/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:53.883186957 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1012/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:53.883186957 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1004/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:42.179148902 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1004/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:20:42.179148902 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1004/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:42.183148914 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1004/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:42.183148914 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1007/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:46.819163991 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1007/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:46.823164003 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1007/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:46.823164003 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_906/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:15:14.362073984 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_906/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:14.362073984 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_906/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:14.362073984 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1135/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:22.410189118 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -144,7 +146,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1135/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:22.410189118 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1135/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:22.414189131 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_838/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:13:01.905632911 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_838/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:01.909632924 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_838/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:13:01.909632924 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_751/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:04:01.031752497 -0500\n@@ -125,7 +125,8 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final int len = msgPatterns.size();\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_751/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:04:01.035752512 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_751/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:04:01.035752512 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final int len=msgPatterns.size();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_683/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:01:55.151284206 -0500\n@@ -211,9 +211,9 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_683/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:01:55.151284206 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_683/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:01:55.155284222 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_683/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:01:55.155284222 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Delete", 
          "seed": "final double m=getMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_863/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:13:47.525785389 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_863/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:47.525785389 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_863/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:13:47.529785403 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_843/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:13:08.865656216 -0500\n@@ -213,7 +213,6 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_843/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:13:08.865656216 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_843/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:13:08.869656228 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Delete", 
          "seed": "double value=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_614/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:56:53.754204863 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                final List<Object> list = new ArrayList<Object>();\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_614/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 13:56:53.754204863 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_614/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:56:53.754204863 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_614/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:56:53.758204877 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1009/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:49.215171782 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1009/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:49.219171795 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1165/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:36:15.378370477 -0500\n@@ -174,7 +174,10 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\n+\t\t\t\t\t\"\\\\.\", \"/\");\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1165/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:36:15.382370491 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_587/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:54:43.737756563 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_587/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:54:43.741756578 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_690/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:02:08.691335397 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_690/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:02:08.691335397 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_690/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:02:08.695335411 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_609/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:56:44.626173720 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_609/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:56:44.630173734 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1223/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:42:06.467560131 -0500\n@@ -174,7 +174,9 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            final String path = LocalizedFormats.class.getName().replaceAll(\n+\t\t\t\t\t\"\\\\.\", \"/\");\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1223/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:42:06.467560131 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1141/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:35:29.366212966 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1141/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:29.370212980 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1141/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:29.370212980 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1141/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:29.370212980 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_979/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:19:57.743004250 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_979/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:19:57.747004262 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_755/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:04:05.763769792 -0500\n@@ -188,7 +188,8 @@\n      * </ul>\n      */\n     public double getNumericalMean() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        final double mhalf = denominatorDegreesOfFreedom / 2;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n             return denominatorDF / (denominatorDF - 2);\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_755/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:04:05.767769806 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 191, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "final double mhalf=denominatorDegreesOfFreedom / 2;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_428/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:45:26.799803395 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_830/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:11:30.261324527 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_830/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:11:30.261324527 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1227/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:42:13.335583215 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1227/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:42:13.339583228 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1227/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:42:13.339583228 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1227/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:42:13.339583228 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                double za = epsilon;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1227/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:42:13.343583242 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "double za=epsilon;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_892/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:14:44.913976340 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_892/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:14:44.913976340 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_892/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:14:44.913976340 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1088/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:28:46.904814722 -0500\n@@ -213,7 +213,7 @@\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n-            numericalVarianceIsCalculated = true;\n+            double result = Double.NaN;\n         }\n         return numericalVariance;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1088/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:28:46.904814722 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1088/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:28:46.904814722 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 216, 
          "faulty": "numericalVarianceIsCalculated=true;", 
          "type": "Replace", 
          "seed": "double result=Double.NaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1153/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:35:54.578299325 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1153/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:35:54.582299338 -0500\n@@ -144,7 +144,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1153/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:35:54.582299338 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1153/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:35:54.582299338 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_521/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 13:50:07.372759494 -0500\n@@ -388,7 +388,8 @@\n             // do nothing here\n         }\n \n-        // either the locale is not supported or the resource is unknown\n+        int count = 0;\n+\t\t// either the locale is not supported or the resource is unknown\n         // don't translate and fall back to using the source format\n         return sourceFormat;\n \n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_521/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:50:07.376759508 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 393, 
          "faulty": "return sourceFormat;", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_636/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:00:18.094910584 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_636/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:00:18.098910599 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_636/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:00:18.098910599 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_987/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:09.371042129 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -178,7 +180,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_987/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:09.371042129 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_987/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:09.375042142 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_913/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:15:25.998112507 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_913/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:26.002112521 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_913/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:26.002112521 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_573/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:52:53.589367523 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_573/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:52:53.589367523 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_769/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:05:52.120153456 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_769/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:05:52.124153470 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_769/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:05:52.124153470 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_769/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:05:52.124153470 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1189/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:38:20.442796592 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1189/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:38:20.446796605 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1189/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:38:20.446796605 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_993/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:18.831072931 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_993/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:20:18.831072931 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_993/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:18.831072931 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_993/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:18.835072944 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_910/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:21.342097097 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\thN = cPrev * deltaN;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_910/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:21.342097097 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "hN=cPrev * deltaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_920/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:15:37.394150205 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                hN = cPrev * deltaN;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_920/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:15:37.394150205 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "hN=cPrev * deltaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_551/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:52:08.285204553 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        numericalVariance = calculateNumericalVariance();\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_551/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 13:52:08.285204553 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_551/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:52:08.289204568 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_551/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:52:08.289204568 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1117/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:34:50.006077890 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -171,7 +173,9 @@\n         final StringBuilder sb = new StringBuilder();\n         int count = 0;\n         final int len = msgPatterns.size();\n-        for (int i = 0; i < len; i++) {\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\tfor (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1117/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:34:50.006077890 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1117/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:34:50.006077890 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 174, 
          "faulty": "for (int i=0; i < len; i++) {\n  final Localizable pat=msgPatterns.get(i);\n  final Object[] args=msgArguments.get(i);\n  final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);\n  sb.append(fmt.format(args));\n  if (++count < len) {\n    sb.append(separator);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1170/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:36:24.638402127 -0500\n@@ -224,7 +224,8 @@\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        double n = numeratorDegreesOfFreedom;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 4) {\n             final double numeratorDF = getNumeratorDegreesOfFreedom();\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1170/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:36:24.638402127 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1170/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:36:24.638402127 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1170/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:36:24.642402140 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 227, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "double n=numeratorDegreesOfFreedom;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1195/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:38:29.714828072 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -144,7 +146,8 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1195/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:38:29.718828086 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1195/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:38:29.718828086 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1195/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:38:29.718828086 -0500\n@@ -83,6 +83,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 176, 
          "faulty": "final Object[] args=msgArguments.get(i);", 
          "type": "Replace", 
          "seed": "final Object[] args=msgArguments.get(i);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_991/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:16.451065182 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_991/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:16.455065196 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_534/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 13:50:32.132851943 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_534/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:50:32.136851959 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_534/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:50:32.136851959 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_623/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 13:57:11.650265789 -0500\n@@ -211,7 +211,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 12:47:37.712289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_623/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 13:57:11.654265803 -0500\n@@ -146,7 +146,8 @@\n      * @return upper bound of the support (number of trials or 0)\n      */\n     public int getSupportUpperBound() {\n-        return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n+        final double mu = getNumericalMean();\n+\t\treturn probabilityOfSuccess > 0.0 ? numberOfTrials : 0;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_623/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:57:11.654265803 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 149, 
          "faulty": "return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_740/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:03:42.803685681 -0500\n@@ -188,7 +188,8 @@\n      * </ul>\n      */\n     public double getNumericalMean() {\n-        final double denominatorDF = getDenominatorDegreesOfFreedom();\n+        final double mhalf = denominatorDegreesOfFreedom / 2;\n+\t\tfinal double denominatorDF = getDenominatorDegreesOfFreedom();\n \n         if (denominatorDF > 2) {\n             return denominatorDF / (denominatorDF - 2);\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_740/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:42.803685681 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_740/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:42.807685696 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 191, 
          "faulty": "final double denominatorDF=getDenominatorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "final double mhalf=denominatorDegreesOfFreedom / 2;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_733/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:03:28.823634222 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_733/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:03:28.823634222 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_733/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:03:28.823634222 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1162/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:36:10.750354652 -0500\n@@ -215,7 +215,8 @@\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n-        return numericalVariance;\n+        final double mu = getNumericalMean();\n+\t\treturn numericalVariance;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1162/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:36:10.750354652 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1162/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:36:10.750354652 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1162/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:36:10.754354667 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1162/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:36:10.754354667 -0500\n@@ -83,6 +83,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 218, 
          "faulty": "return numericalVariance;", 
          "type": "InsertBefore", 
          "seed": "final double mu=getNumericalMean();"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_970/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:19:37.798939238 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_970/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:19:37.798939238 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 215, 
          "faulty": "numericalVariance=calculateNumericalVariance();", 
          "type": "Replace", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_955/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:18:02.434627518 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_955/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:18:02.434627518 -0500\n@@ -77,12 +77,13 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_984/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:04.783027184 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_984/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:20:04.783027184 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_984/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:04.787027198 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_984/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:04.787027198 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_463/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 13:46:39.224053086 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_463/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 13:46:39.224053086 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_463/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 13:46:39.228053100 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1030/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:21:28.375299010 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -134,7 +136,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1030/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:21:28.375299010 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1030/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:21:28.375299010 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1065/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:27:58.852644882 -0500\n@@ -174,7 +174,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1065/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:27:58.852644882 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double facta = 0.01745329052209854;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_1065/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:27:58.852644882 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double facta=0.01745329052209854;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 12:47:37.712289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_982/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java\t2018-12-02 14:20:02.339019224 -0500\n@@ -111,7 +111,8 @@\n      * {@code n * p}.\n      */\n     public double getNumericalMean() {\n-        return numberOfTrials * probabilityOfSuccess;\n+        double lowerBound = getSupportLowerBound();\n+\t\treturn numberOfTrials * probabilityOfSuccess;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_982/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:20:02.339019224 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -174,7 +176,8 @@\n         for (int i = 0; i < len; i++) {\n             final Localizable pat = msgPatterns.get(i);\n             final Object[] args = msgArguments.get(i);\n-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n+            context = new HashMap<String, Object>();\n+\t\t\tfinal MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_982/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:20:02.343019237 -0500\n@@ -174,8 +174,9 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                int result = 1;\n+\t\t\t\treturn FastMath.floor(FastMath.exp(ArithmeticUtils\n+\t\t\t\t\t\t.factorialLog(n)) + 0.5);\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_982/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:20:02.343019237 -0500\n@@ -83,6 +83,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\tgetContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "int result=1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return FastMath.floor(FastMath.exp(ArithmeticUtils.factorialLog(n)) + 0.5);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 177, 
          "faulty": "final MessageFormat fmt=new MessageFormat(pat.getLocalizedString(locale),locale);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java", 
          "line": 114, 
          "faulty": "return numberOfTrials * probabilityOfSuccess;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getSupportLowerBound();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_827/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:11:25.645308913 -0500\n@@ -144,7 +144,9 @@\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n-        return buildMessage(locale, \": \");\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn buildMessage(locale, \": \");\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_827/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\t2018-12-02 14:11:25.645308913 -0500\n@@ -376,7 +376,8 @@\n     /** {@inheritDoc} */\n     public String getLocalizedString(final Locale locale) {\n         try {\n-            final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n+            int count = 0;\n+\t\t\tfinal String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\", \"/\");\n             ResourceBundle bundle =\n                     ResourceBundle.getBundle(\"assets/\" + path, locale);\n             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_827/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:11:25.645308913 -0500\n@@ -174,8 +174,8 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                final double invx = 1d / x;\n+\t\t\t\treturn 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "InsertBefore", 
          "seed": "final double invx=1d / x;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java", 
          "line": 379, 
          "faulty": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 147, 
          "faulty": "return buildMessage(locale,\": \");", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 12:47:37.716289918 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_715/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-02 14:02:56.695515227 -0500\n@@ -175,7 +175,8 @@\n     /** {@inheritDoc} */\n     @Override\n     protected double getSolverAbsoluteAccuracy() {\n-        return solverAbsoluteAccuracy;\n+        double result = Double.NaN;\n+\t\treturn solverAbsoluteAccuracy;\n     }\n \n     /**\n@@ -211,7 +212,8 @@\n      * </ul>\n      */\n     public double getNumericalVariance() {\n-        if (!numericalVarianceIsCalculated) {\n+        numericalVariance = calculateNumericalVariance();\n+\t\tif (!numericalVarianceIsCalculated) {\n             numericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_715/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-02 14:02:56.695515227 -0500\n@@ -125,7 +125,9 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final String path = LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\n+\t\t\t\t\"/\");\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 12:47:41.336290119 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_715/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2018-12-02 14:02:56.699515241 -0500\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return 1d;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 12:47:37.456289903 -0500\n+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_715/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-02 14:02:56.699515241 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return 1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 214, 
          "faulty": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final String path=LocalizedFormats.class.getName().replaceAll(\"\\\\.\",\"/\");"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 178, 
          "faulty": "return solverAbsoluteAccuracy;", 
          "type": "InsertBefore", 
          "seed": "double result=Double.NaN;"
        }
      ]
    }
  ]
}