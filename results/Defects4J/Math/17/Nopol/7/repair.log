cd /tmp/Nopol_Defects4J_Math_17;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_17/target/classes/:/tmp/Nopol_Defects4J_Math_17/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
00:04:58.155 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
00:04:58.159 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_17/target/classes/, file:/tmp/Nopol_Defects4J_Math_17/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_17/target/classes/, file:/tmp/Nopol_Defects4J_Math_17/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
00:04:58.159 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
00:04:58.160 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
00:04:58.163 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
00:04:58.164 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
00:04:58.171 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 394 MB
00:04:58.171 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
00:04:58.171 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
00:04:58.171 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
00:04:58.172 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
00:04:58.173 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
00:13:14.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
00:13:14.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1658 which is executed by 1 tests
68623
00:13:14.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:15.163 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (487 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:16.914 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:16.919 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:16.919 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:16.920 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:16.920 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1658.
00:13:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
00:13:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1640 which is executed by 1 tests
68623
00:13:17.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:17.624 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (472 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:18.371 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:18.376 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:18.377 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:18.377 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:18.377 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1640.
00:13:18.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
00:13:18.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1639 which is executed by 1 tests
68623
00:13:18.578 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:19.094 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (507 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:19.827 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:19.830 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:19.831 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:19.831 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:19.831 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1639.
00:13:19.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
00:13:19.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1638 which is executed by 1 tests
68623
00:13:20.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:20.514 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (459 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:21.159 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:21.163 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:21.164 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:21.164 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:21.164 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1638.
00:13:21.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
00:13:21.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1637 which is executed by 1 tests
68623
00:13:21.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:21.826 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (463 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:22.477 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (181 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:22.482 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:22.483 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:22.483 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:22.483 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1637.
00:13:22.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
00:13:22.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1636 which is executed by 1 tests
68623
00:13:22.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:23.130 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (442 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:23.748 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (183 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 0]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:23.752 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:23.752 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 0]
00:13:23.753 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:23.753 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1636.
00:13:23.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
00:13:23.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1630 which is executed by 1 tests
68623
00:13:23.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:24.399 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:24.944 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:24.948 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:24.948 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:24.948 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:24.949 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1630.
00:13:24.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
00:13:24.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1629 which is executed by 1 tests
68623
00:13:25.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:25.591 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (445 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:26.126 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (180 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:26.129 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:26.130 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:26.130 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:26.130 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1629.
00:13:26.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
00:13:26.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1628 which is executed by 1 tests
68623
00:13:26.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:26.796 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:27.335 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:27.338 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:27.338 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:27.338 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:27.338 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1628.
00:13:27.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
00:13:27.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1627 which is executed by 1 tests
68623
00:13:27.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:28.044 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (511 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:28.548 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (174 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:28.551 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:28.551 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:28.552 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:28.552 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1627.
00:13:28.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
00:13:28.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1626 which is executed by 1 tests
68623
00:13:28.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:29.193 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (449 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = NaN flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:29.692 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = NaN flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = NaN flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:29.695 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:29.696 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = NaN flags = 0]
00:13:29.696 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:29.697 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1626.
00:13:29.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
00:13:29.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1625 which is executed by 1 tests
68623
00:13:29.883 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:30.329 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (439 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:30.842 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (164 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:30.845 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:30.846 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:13:30.846 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:30.846 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1625.
00:13:30.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:31.292 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (439 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:31.880 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (194 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:31.883 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:31.883 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:13:31.883 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:31.884 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1625.
00:13:31.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
00:13:31.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1622 which is executed by 1 tests
68623
00:13:32.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:32.547 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (455 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:33.070 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (165 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:33.075 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:33.075 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:33.075 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:33.075 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1622.
00:13:33.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
00:13:33.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1621 which is executed by 1 tests
68623
00:13:33.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:35.422 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (2155 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:35.955 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (188 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:35.958 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:35.959 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:35.959 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:35.959 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1621.
00:13:35.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
00:13:35.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1620 which is executed by 1 tests
68623
00:13:36.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:36.601 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (453 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:37.096 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:37.098 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:37.099 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:37.099 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:37.099 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1620.
00:13:37.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:37.541 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:38.012 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:38.015 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:38.015 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:38.015 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:13:38.015 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1620.
00:13:38.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
00:13:38.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1617 which is executed by 1 tests
68623
00:13:38.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:38.672 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (468 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:39.155 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:39.158 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:39.158 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:39.158 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:39.158 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1617.
00:13:39.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
00:13:39.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1616 which is executed by 1 tests
68623
00:13:39.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:39.789 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (441 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:40.294 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (186 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:40.297 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:40.297 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:40.297 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:40.297 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1616.
00:13:40.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:40.803 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (498 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:41.310 [pool-81-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:41.314 [pool-82-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:41.314 [pool-79-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:41.314 [pool-79-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:13:41.314 [pool-79-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1616.
00:13:41.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
00:13:41.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1542 which is executed by 1 tests
68623
00:13:41.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:42.024 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (482 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:42.578 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (195 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:42.581 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:42.582 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:42.582 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:42.582 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1542.
00:13:42.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
00:13:42.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1541 which is executed by 1 tests
68623
00:13:42.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:43.248 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (424 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:43.733 [pool-89-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (172 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:43.735 [pool-90-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:43.735 [pool-87-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:43.736 [pool-87-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:43.736 [pool-87-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1541.
00:13:43.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
00:13:43.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1540 which is executed by 1 tests
68623
00:13:43.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:44.363 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (439 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:44.857 [pool-93-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (196 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:44.860 [pool-94-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:44.860 [pool-91-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:44.860 [pool-91-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:44.860 [pool-91-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1540.
00:13:44.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
00:13:44.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1539 which is executed by 1 tests
68623
00:13:45.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:45.550 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (501 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:46.028 [pool-97-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:46.031 [pool-98-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:46.031 [pool-95-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:46.031 [pool-95-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:46.031 [pool-95-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1539.
00:13:46.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
00:13:46.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1538 which is executed by 1 tests
68623
00:13:46.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:46.696 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (477 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:47.171 [pool-101-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = NaN flags = 0]
java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:47.174 [pool-102-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:47.174 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = NaN flags = 0]
00:13:47.174 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:47.174 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1538.
00:13:47.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
00:13:47.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1536 which is executed by 1 tests
68623
00:13:47.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:47.831 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (464 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:48.335 [pool-105-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:48.338 [pool-106-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:48.338 [pool-103-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = 0. flags = 0]
00:13:48.338 [pool-103-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:48.338 [pool-103-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1536.
00:13:48.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:48.824 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (479 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:49.328 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (197 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:49.331 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:49.331 [pool-107-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = 0. flags = 0]
00:13:49.331 [pool-107-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:49.331 [pool-107-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1536.
00:13:49.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
00:13:49.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1533 which is executed by 1 tests
68623
00:13:49.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:49.955 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (437 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:50.436 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (179 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:50.439 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:50.439 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:50.439 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:50.439 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1533.
00:13:50.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
00:13:50.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1532 which is executed by 1 tests
68623
00:13:50.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:51.107 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (476 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #32 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:889)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:51.574 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #32 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #32 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:889)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:51.577 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:51.577 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #32 x = Infinity flags = 0]
00:13:51.577 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:51.577 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1532.
00:13:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
00:13:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1531 which is executed by 1 tests
68623
00:13:51.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:52.228 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (463 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:52.686 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (159 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #30 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:52.689 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:52.689 [pool-119-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #30 x = 0. flags = 0]
00:13:52.689 [pool-119-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:52.689 [pool-119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1531.
00:13:52.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
00:13:52.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1530 which is executed by 1 tests
68623
00:13:52.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:53.324 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (446 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:53.790 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #30 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:53.792 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:53.793 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #30 x = 0. flags = 0]
00:13:53.793 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:53.793 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1530.
00:13:53.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:54.279 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (479 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:54.742 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #30 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #30 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:881)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:54.744 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #28 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:54.744 [pool-127-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #30 x = 0. flags = 0]
00:13:54.744 [pool-127-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = Infinity flags = 0]
00:13:54.744 [pool-127-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1530.
00:13:54.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
00:13:54.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1527 which is executed by 1 tests
68623
00:13:54.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:55.351 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (420 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:55.822 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:55.824 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:55.824 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:55.824 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:55.825 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1527.
00:13:55.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
00:13:55.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1526 which is executed by 1 tests
68623
00:13:56.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:56.473 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (462 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #17 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:56.955 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (188 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #17 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #17 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:56.958 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:56.958 [pool-135-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #17 x = Infinity flags = 0]
00:13:56.958 [pool-135-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:56.958 [pool-135-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1526.
00:13:56.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
00:13:56.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1525 which is executed by 1 tests
68623
00:13:57.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:57.609 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (462 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:58.112 [pool-141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (172 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #15 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:58.115 [pool-142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:58.116 [pool-139-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #15 x = 0. flags = 0]
00:13:58.116 [pool-139-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:58.116 [pool-139-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1525.
00:13:58.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
00:13:58.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1524 which is executed by 1 tests
68623
00:13:58.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:58.755 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (439 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:59.226 [pool-145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #15 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:59.230 [pool-146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:13:59.230 [pool-143-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #15 x = 0. flags = 0]
00:13:59.230 [pool-143-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:13:59.230 [pool-143-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1524.
00:13:59.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:13:59.698 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (461 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:00.169 [pool-149-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #15 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #15 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:00.172 [pool-150-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:00.172 [pool-147-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #15 x = 0. flags = 0]
00:14:00.172 [pool-147-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = 0. flags = 0]
00:14:00.172 [pool-147-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1524.
00:14:00.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
00:14:00.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1521 which is executed by 2 tests
68623
00:14:00.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:00.865 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (505 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:01.348 [pool-153-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (187 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:01.350 [pool-154-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:01.351 [pool-151-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:01.351 [pool-151-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:01.351 [pool-151-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1521.
00:14:01.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
00:14:01.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1520 which is executed by 2 tests
68623
00:14:01.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:01.975 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #18.1 x = -Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:02.446 [pool-157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #18.1 x = -Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #18.1 x = -Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:02.448 [pool-158-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:02.449 [pool-155-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #18.1 x = -Infinity flags = 0]
00:14:02.449 [pool-155-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:02.449 [pool-155-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1520.
00:14:02.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
00:14:02.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1519 which is executed by 2 tests
68623
00:14:02.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:03.087 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (451 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:03.554 [pool-161-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #18.1 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:03.556 [pool-162-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:03.556 [pool-159-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #18.1 x = 0. flags = 0]
00:14:03.556 [pool-159-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:03.556 [pool-159-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1519.
00:14:03.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
00:14:03.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1518 which is executed by 2 tests
68623
00:14:03.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:04.250 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (506 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:04.725 [pool-165-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (182 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #18.1 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:04.728 [pool-166-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:04.729 [pool-163-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #18.1 x = 0. flags = 0]
00:14:04.729 [pool-163-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:04.729 [pool-163-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1518.
00:14:04.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:05.186 [pool-168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (450 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:05.662 [pool-169-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (181 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #18.1 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #18.1 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:833)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #15 x = 2. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:05.664 [pool-170-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #15 x = 2. flags = 0]
java.lang.AssertionError: assersion failed Multiply #15 x = 2. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:05.664 [pool-167-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #18.1 x = 0. flags = 0]
00:14:05.664 [pool-167-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #15 x = 2. flags = 0]
00:14:05.664 [pool-167-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1518.
00:14:05.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
00:14:05.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1515 which is executed by 2 tests
68623
00:14:05.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:06.331 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (478 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:06.830 [pool-173-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (203 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:06.833 [pool-174-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:06.833 [pool-171-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = 0. flags = 0]
00:14:06.833 [pool-171-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:06.833 [pool-171-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1515.
00:14:06.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
00:14:06.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1514 which is executed by 2 tests
68623
00:14:07.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:07.453 [pool-176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (433 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:07.917 [pool-177-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:07.920 [pool-178-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:07.921 [pool-175-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = 0. flags = 0]
00:14:07.921 [pool-175-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:07.921 [pool-175-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1514.
00:14:07.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:08.383 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (455 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:08.846 [pool-181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #25 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #17 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:08.848 [pool-182-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #17 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #17 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:08.848 [pool-179-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = 0. flags = 0]
00:14:08.848 [pool-179-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #17 x = Infinity flags = 0]
00:14:08.848 [pool-179-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1514.
00:14:08.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
00:14:08.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1511 which is executed by 2 tests
68623
00:14:09.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:09.488 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (451 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:09.954 [pool-185-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (172 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #26 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:09.956 [pool-186-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:09.956 [pool-183-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #26 x = 0. flags = 0]
00:14:09.956 [pool-183-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:09.956 [pool-183-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1511.
00:14:09.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
00:14:09.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1510 which is executed by 2 tests
68623
00:14:10.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:10.588 [pool-188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (444 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:11.070 [pool-189-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (191 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #26 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:11.074 [pool-190-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:11.074 [pool-187-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #26 x = 0. flags = 0]
00:14:11.074 [pool-187-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:11.074 [pool-187-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1510.
00:14:11.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:11.516 [pool-192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:11.983 [pool-193-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (161 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #26 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #26 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:861)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #15 x = 2. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:11.985 [pool-194-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #15 x = 2. flags = 0]
java.lang.AssertionError: assersion failed Multiply #15 x = 2. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:817)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:11.985 [pool-191-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #26 x = 0. flags = 0]
00:14:11.985 [pool-191-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #15 x = 2. flags = 0]
00:14:11.985 [pool-191-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1510.
00:14:11.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
00:14:11.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1479 which is executed by 4 tests
68623
00:14:12.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:12.650 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (477 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:13.119 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (181 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:13.122 [pool-198-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:13.122 [pool-195-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
00:14:13.122 [pool-195-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:13.122 [pool-195-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1479.
00:14:13.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
00:14:13.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 4 tests
68623
00:14:13.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:13.753 [pool-200-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (442 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:14.235 [pool-201-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:14.238 [pool-202-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:14.238 [pool-199-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 0]
00:14:14.238 [pool-199-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:14.238 [pool-199-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1478.
00:14:14.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
00:14:14.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2282 which is executed by 5 tests
68623
00:14:14.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:14.882 [pool-204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (432 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e32 flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:15.372 [pool-205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e32 flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e32 flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:15.374 [pool-206-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:15.375 [pool-203-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e32 flags = 4]
00:14:15.375 [pool-203-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:15.375 [pool-203-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2282.
00:14:15.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
00:14:15.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2281 which is executed by 5 tests
68623
00:14:15.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:16.044 [pool-208-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (474 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:16.534 [pool-209-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (164 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 0. flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:16.537 [pool-210-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:16.537 [pool-207-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 0. flags = 4]
00:14:16.537 [pool-207-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:16.537 [pool-207-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2281.
00:14:16.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
00:14:16.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2280 which is executed by 5 tests
68623
00:14:16.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:17.205 [pool-212-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (474 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #22 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:845)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:17.686 [pool-213-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #22 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #22 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:845)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:17.689 [pool-214-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:17.689 [pool-211-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #22 x = Infinity flags = 4]
00:14:17.689 [pool-211-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:17.689 [pool-211-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2280.
00:14:17.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
00:14:17.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2279 which is executed by 5 tests
68623
00:14:17.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:18.319 [pool-216-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (438 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:18.800 [pool-217-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:18.802 [pool-218-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:18.803 [pool-215-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:18.803 [pool-215-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:18.803 [pool-215-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2279.
00:14:18.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
00:14:18.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2278 which is executed by 5 tests
68623
00:14:18.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:19.448 [pool-220-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (456 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:19.922 [pool-221-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:19.924 [pool-222-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:19.925 [pool-219-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:19.925 [pool-219-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:19.925 [pool-219-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2278.
00:14:19.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
00:14:19.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1663 which is executed by 5 tests
68623
00:14:20.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:20.548 [pool-224-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (436 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:21.014 [pool-225-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:21.016 [pool-226-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:21.016 [pool-223-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
00:14:21.016 [pool-223-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:21.016 [pool-223-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1663.
00:14:21.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
00:14:21.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2275 which is executed by 6 tests
68623
00:14:21.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:21.648 [pool-228-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (442 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = Infinity flags = 8
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:22.144 [pool-229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (165 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = Infinity flags = 8]
java.lang.AssertionError: assersion failed Multiply #24 x = Infinity flags = 8    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:22.146 [pool-230-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:22.146 [pool-227-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = Infinity flags = 8]
00:14:22.146 [pool-227-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:22.147 [pool-227-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2275.
00:14:22.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
00:14:22.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2274 which is executed by 6 tests
68623
00:14:22.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:22.801 [pool-232-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (464 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:23.286 [pool-233-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (182 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:23.289 [pool-234-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:23.289 [pool-231-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:23.289 [pool-231-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:23.289 [pool-231-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2274.
00:14:23.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
00:14:23.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2272 which is executed by 6 tests
68623
00:14:23.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:23.920 [pool-236-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (440 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:24.397 [pool-237-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (164 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8]
java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:24.399 [pool-238-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:24.399 [pool-235-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8]
00:14:24.399 [pool-235-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:24.399 [pool-235-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2272.
00:14:24.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
00:14:24.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2268 which is executed by 6 tests
68623
00:14:24.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:25.030 [pool-240-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (441 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:25.512 [pool-241-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (163 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8]
java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:25.516 [pool-242-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:25.516 [pool-239-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 1.000000000000000000e-38 flags = 8]
00:14:25.516 [pool-239-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:25.516 [pool-239-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2268.
00:14:25.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:25.983 [pool-244-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (460 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:26.454 [pool-245-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 0. flags = 8
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:26.457 [pool-246-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 0. flags = 8]
java.lang.AssertionError: assersion failed Multiply #24 x = 0. flags = 8    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:26.457 [pool-243-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:26.457 [pool-243-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 0. flags = 8]
00:14:26.457 [pool-243-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2268.
00:14:26.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
00:14:26.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1473 which is executed by 7 tests
68623
00:14:26.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:27.085 [pool-248-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (438 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:27.542 [pool-249-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:27.544 [pool-250-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:27.545 [pool-247-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:27.545 [pool-247-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:27.545 [pool-247-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1473.
00:14:27.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
00:14:27.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1472 which is executed by 7 tests
68623
00:14:27.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:28.175 [pool-252-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (443 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:28.625 [pool-253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (161 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0]
java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:28.628 [pool-254-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:28.628 [pool-251-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0]
00:14:28.628 [pool-251-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:28.628 [pool-251-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1472.
00:14:28.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
00:14:28.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2059 which is executed by 9 tests
68623
00:14:28.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:29.250 [pool-256-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (431 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = 0. flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:29.745 [pool-257-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = 0. flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = 0. flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:29.749 [pool-258-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:29.749 [pool-255-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = 0. flags = 1]
00:14:29.749 [pool-255-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:29.749 [pool-255-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2059.
00:14:29.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
00:14:29.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2056 which is executed by 9 tests
68623
00:14:29.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:30.388 [pool-260-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (447 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = 0. flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:30.842 [pool-261-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = 0. flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = 0. flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:30.845 [pool-262-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:30.845 [pool-259-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = 0. flags = 1]
00:14:30.845 [pool-259-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:30.845 [pool-259-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2056.
00:14:30.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:31.342 [pool-264-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (490 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:31.811 [pool-265-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (183 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = Infinity flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:31.814 [pool-266-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = Infinity flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = Infinity flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:31.814 [pool-263-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:31.814 [pool-263-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = Infinity flags = 1]
00:14:31.814 [pool-263-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2056.
00:14:31.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
00:14:31.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:932 which is executed by 9 tests
68623
00:14:31.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:32.472 [pool-268-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (474 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:32.955 [pool-269-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (193 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:32.958 [pool-270-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:32.959 [pool-267-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = NaN flags = 1]
00:14:32.959 [pool-267-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:32.959 [pool-267-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:932.
00:14:32.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
00:14:32.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:907 which is executed by 9 tests
68623
00:14:33.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:33.574 [pool-272-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (431 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:34.047 [pool-273-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:34.050 [pool-274-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:34.050 [pool-271-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:34.050 [pool-271-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:34.050 [pool-271-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:907.
00:14:34.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
00:14:34.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2240 which is executed by 10 tests
68623
00:14:34.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:34.682 [pool-276-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (440 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = Infinity flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:35.146 [pool-277-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (161 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = Infinity flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = Infinity flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:35.149 [pool-278-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:35.149 [pool-275-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = Infinity flags = 1]
00:14:35.149 [pool-275-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:35.149 [pool-275-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2240.
00:14:35.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
00:14:35.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2239 which is executed by 10 tests
68623
00:14:35.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:35.813 [pool-280-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (474 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:36.293 [pool-281-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = 0. flags = 1]
java.lang.AssertionError: assersion failed Multiply #28 x = 0. flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:36.295 [pool-282-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:36.296 [pool-279-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = 0. flags = 1]
00:14:36.296 [pool-279-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:36.296 [pool-279-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2239.
00:14:36.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
00:14:36.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2238 which is executed by 10 tests
68623
00:14:36.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:36.913 [pool-284-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (427 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:37.392 [pool-285-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:37.394 [pool-286-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:37.395 [pool-283-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:37.395 [pool-283-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:37.395 [pool-283-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2238.
00:14:37.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
00:14:37.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2237 which is executed by 10 tests
68623
00:14:37.597 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:38.060 [pool-288-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (456 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:38.536 [pool-289-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:38.538 [pool-290-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:38.538 [pool-287-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:38.539 [pool-287-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:38.539 [pool-287-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2237.
00:14:38.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
00:14:38.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:969 which is executed by 10 tests
68623
00:14:38.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:39.154 [pool-292-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (432 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:39.613 [pool-293-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:39.617 [pool-294-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:39.617 [pool-291-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:39.617 [pool-291-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:39.617 [pool-291-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:969.
00:14:39.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
00:14:39.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:961 which is executed by 10 tests
68623
00:14:39.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:40.251 [pool-296-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (449 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:40.718 [pool-297-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (177 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:40.721 [pool-298-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:40.721 [pool-295-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:40.721 [pool-295-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:40.721 [pool-295-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:961.
00:14:40.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
00:14:40.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2218 which is executed by 13 tests
68623
00:14:40.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:41.339 [pool-300-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:41.816 [pool-301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:41.819 [pool-302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:41.819 [pool-299-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:41.819 [pool-299-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:41.819 [pool-299-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2218.
00:14:41.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
00:14:41.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:931 which is executed by 16 tests
68623
00:14:41.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:42.541 [pool-304-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (537 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:43.001 [pool-305-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:43.003 [pool-306-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:43.003 [pool-303-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = NaN flags = 1]
00:14:43.003 [pool-303-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:43.003 [pool-303-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:931.
00:14:43.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:43.486 [pool-308-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (476 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:43.958 [pool-309-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (181 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #25 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #25 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:857)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:43.960 [pool-310-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:43.960 [pool-307-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #25 x = NaN flags = 1]
00:14:43.960 [pool-307-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:43.960 [pool-307-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:931.
00:14:43.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
00:14:43.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2208 which is executed by 19 tests
68623
00:14:44.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:44.606 [pool-312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (456 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:45.098 [pool-313-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (190 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:45.101 [pool-314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:45.101 [pool-311-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:45.101 [pool-311-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:45.101 [pool-311-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2208.
00:14:45.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
00:14:45.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2167 which is executed by 19 tests
68623
00:14:45.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:45.803 [pool-316-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (506 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:46.503 [pool-317-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (190 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:46.507 [pool-318-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:46.507 [pool-315-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:46.507 [pool-315-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:46.507 [pool-315-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2167.
00:14:46.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
00:14:46.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2166 which is executed by 19 tests
68623
00:14:46.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:47.160 [pool-320-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (450 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: -20
    at java.lang.String.<init>(String.java:196)
    at org.apache.commons.math3.dfp.Dfp.dfp2string(Dfp.java:1466)
    at org.apache.commons.math3.dfp.Dfp.toString(Dfp.java:1310)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:69)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:801)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:14:47.646 [pool-321-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: -20]
java.lang.StringIndexOutOfBoundsException: String index out of range: -20    at java.lang.String.<init>(String.java:196)
    at org.apache.commons.math3.dfp.Dfp.dfp2string(Dfp.java:1466)
    at org.apache.commons.math3.dfp.Dfp.toString(Dfp.java:1310)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:69)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:801)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:47.649 [pool-322-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:47.649 [pool-319-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: -20]
00:14:47.649 [pool-319-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:47.649 [pool-319-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2166.
00:14:47.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
00:14:47.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2165 which is executed by 19 tests
68623
00:14:47.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:48.298 [pool-324-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (460 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.dfp.Dfp.dfp2string(Dfp.java:1464)
    at org.apache.commons.math3.dfp.Dfp.toString(Dfp.java:1310)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:69)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:801)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:48.778 [pool-325-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.dfp.Dfp.dfp2string(Dfp.java:1464)
    at org.apache.commons.math3.dfp.Dfp.toString(Dfp.java:1310)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:69)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:801)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:48.781 [pool-326-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:14:48.781 [pool-323-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): -1]
00:14:48.781 [pool-323-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:14:48.781 [pool-323-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2165.
00:14:48.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
00:14:48.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 81 tests
1857420685
00:14:48.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
00:14:48.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 81 tests
1857420685
00:14:49.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:58.872 [pool-328-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9772 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:59.125 [pool-329-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:59.129 [pool-330-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:14:59.312 [pool-331-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (183 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:59.319 [pool-332-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:14:59.319 [pool-327-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): null, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
00:14:59.319 [pool-327-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:59.319 [pool-327-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
00:14:59.319 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:09.013 [pool-334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9685 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:09.243 [pool-335-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:09.247 [pool-336-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:09.416 [pool-337-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:09.513 [pool-338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (96 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:09.513 [pool-333-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): null, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
00:15:09.513 [pool-333-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:09.513 [pool-333-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
00:15:09.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
00:15:09.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 81 tests
1857420685
00:15:09.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
00:15:09.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 81 tests
1857420685
00:15:09.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:19.675 [pool-340-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9843 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:20.069 [pool-341-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (162 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:20.081 [pool-342-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:20.083 [pool-343-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:20.085 [pool-344-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:20.085 [pool-339-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:20.085 [pool-339-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:20.086 [pool-339-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:568.
00:15:20.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
00:15:20.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 81 tests
1857420685
00:15:20.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:29.969 [pool-346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9725 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:30.354 [pool-347-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:30.367 [pool-348-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:30.370 [pool-349-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:30.375 [pool-350-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:30.375 [pool-345-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:30.375 [pool-345-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:30.375 [pool-345-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:564.
00:15:30.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
00:15:30.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 81 tests
1857420685
00:15:30.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:40.263 [pool-352-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9730 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:40.709 [pool-353-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (215 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:40.755 [pool-354-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:40.794 [pool-355-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:40.833 [pool-356-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:40.833 [pool-351-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:40.833 [pool-351-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:40.833 [pool-351-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
00:15:40.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:50.739 [pool-358-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9897 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:51.160 [pool-359-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (205 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:51.205 [pool-360-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:51.243 [pool-361-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (37 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:51.282 [pool-362-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:51.282 [pool-357-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:51.282 [pool-357-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:51.282 [pool-357-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
00:15:51.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
00:15:51.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 81 tests
1857420685
00:15:51.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:01.161 [pool-364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9705 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:01.566 [pool-365-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (194 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:01.606 [pool-366-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (37 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:01.640 [pool-367-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:01.674 [pool-368-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:01.674 [pool-363-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:01.674 [pool-363-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:01.674 [pool-363-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:562.
00:16:01.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
00:16:01.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 81 tests
1857420685
00:16:01.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:11.656 [pool-370-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9823 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:12.033 [pool-371-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:12.042 [pool-372-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:12.043 [pool-373-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:12.045 [pool-374-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:12.045 [pool-369-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:12.045 [pool-369-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:12.045 [pool-369-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:561.
00:16:12.045 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
00:16:12.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 81 tests
1857420685
00:16:12.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:21.921 [pool-376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9716 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:22.296 [pool-377-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:22.304 [pool-378-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:22.306 [pool-379-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:22.308 [pool-380-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:22.309 [pool-375-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:22.309 [pool-375-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:22.309 [pool-375-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:559.
00:16:22.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
00:16:22.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 81 tests
1857420685
00:16:22.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:32.220 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9754 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:16:32.617 [pool-383-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (191 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:16:32.627 [pool-384-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:32.630 [pool-385-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:32.639 [pool-386-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:32.639 [pool-381-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:16:32.639 [pool-381-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:32.639 [pool-381-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:555.
00:16:32.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
00:16:32.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 81 tests
1857420685
00:16:32.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:42.559 [pool-388-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9763 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:16:42.958 [pool-389-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (191 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:16:42.968 [pool-390-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:42.972 [pool-391-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:42.982 [pool-392-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:42.982 [pool-387-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:16:42.982 [pool-387-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:42.982 [pool-387-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
00:16:42.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:52.814 [pool-394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9822 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:16:53.199 [pool-395-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:16:53.209 [pool-396-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:53.213 [pool-397-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:53.222 [pool-398-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:53.222 [pool-393-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:16:53.222 [pool-393-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:53.222 [pool-393-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
00:16:53.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
00:16:53.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 81 tests
1857420685
00:16:53.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:03.133 [pool-400-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9753 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:03.509 [pool-401-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:03.518 [pool-402-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:03.519 [pool-403-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:03.521 [pool-404-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:03.521 [pool-399-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:03.521 [pool-399-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:03.521 [pool-399-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:551.
00:17:03.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
00:17:03.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 81 tests
1857420685
00:17:03.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:13.439 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9760 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:17:13.833 [pool-407-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (189 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:17:13.836 [pool-408-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:13.839 [pool-409-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:13.846 [pool-410-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:13.847 [pool-405-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:17:13.847 [pool-405-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:13.847 [pool-405-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:550.
00:17:13.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
00:17:13.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 81 tests
1857420685
00:17:13.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:23.758 [pool-412-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9754 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:17:24.144 [pool-413-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (162 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:17:24.154 [pool-414-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:24.158 [pool-415-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:24.167 [pool-416-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:24.167 [pool-411-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:17:24.167 [pool-411-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:24.167 [pool-411-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
00:17:24.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:33.913 [pool-418-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9737 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:17:34.324 [pool-419-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (204 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:17:34.334 [pool-420-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:17:34.336 [pool-421-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:17:34.337 [pool-422-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

00:17:34.337 [pool-417-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:17:34.337 [pool-417-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:17:34.337 [pool-417-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
00:17:34.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
00:17:34.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 81 tests
1857420685
00:17:34.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:44.225 [pool-424-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9729 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:44.601 [pool-425-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:44.610 [pool-426-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:44.611 [pool-427-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:44.614 [pool-428-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:44.614 [pool-423-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:44.614 [pool-423-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:44.614 [pool-423-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:546.
00:17:44.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
00:17:44.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 81 tests
1857420685
00:17:44.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:54.505 [pool-430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9733 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:54.887 [pool-431-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (176 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:54.896 [pool-432-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:54.898 [pool-433-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:54.900 [pool-434-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:54.900 [pool-429-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:54.900 [pool-429-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:54.900 [pool-429-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:545.
00:17:54.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
00:17:54.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 81 tests
1857420685
00:17:55.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:04.821 [pool-436-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9764 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:05.203 [pool-437-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:05.215 [pool-438-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:05.218 [pool-439-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:05.223 [pool-440-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:05.223 [pool-435-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:05.223 [pool-435-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:05.223 [pool-435-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
00:18:05.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:15.065 [pool-442-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9832 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:15.440 [pool-443-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:15.453 [pool-444-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:15.455 [pool-445-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:15.458 [pool-446-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:15.458 [pool-441-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:15.458 [pool-441-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:15.458 [pool-441-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
00:18:15.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
00:18:15.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 81 tests
1857420685
00:18:15.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:25.272 [pool-448-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9657 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:25.656 [pool-449-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (179 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:25.668 [pool-450-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:25.670 [pool-451-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:25.675 [pool-452-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:25.675 [pool-447-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:25.676 [pool-447-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:25.676 [pool-447-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:541.
00:18:25.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
00:18:25.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 81 tests
1857420685
00:18:25.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:35.651 [pool-454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9818 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:36.030 [pool-455-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:36.043 [pool-456-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:36.046 [pool-457-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:36.051 [pool-458-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:36.051 [pool-453-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:36.051 [pool-453-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:36.051 [pool-453-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
00:18:36.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:45.809 [pool-460-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9749 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:46.205 [pool-461-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (190 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:46.217 [pool-462-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:46.220 [pool-463-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:46.225 [pool-464-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:46.225 [pool-459-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:46.225 [pool-459-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:46.225 [pool-459-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
00:18:46.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
00:18:46.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 81 tests
1857420685
00:18:46.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:56.199 [pool-466-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9815 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:18:56.569 [pool-467-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:18:56.579 [pool-468-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:56.584 [pool-469-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:56.593 [pool-470-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:56.593 [pool-465-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:18:56.593 [pool-465-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:56.593 [pool-465-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:538.
00:18:56.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
00:18:56.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 81 tests
1857420685
00:18:56.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:06.481 [pool-472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9730 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:19:06.841 [pool-473-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (156 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:19:06.844 [pool-474-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:06.847 [pool-475-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:06.853 [pool-476-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:06.853 [pool-471-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:19:06.853 [pool-471-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:06.853 [pool-471-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:537.
00:19:06.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
00:19:06.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 81 tests
1857420685
00:19:07.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
00:19:07.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 81 tests
1857420685
00:19:07.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
00:19:07.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 81 tests
1857420685
00:19:07.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
00:19:07.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 81 tests
1857420685
00:19:07.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
00:19:07.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 81 tests
1857420685
00:19:07.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
00:19:07.597 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 81 tests
1857420685
00:19:07.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
00:19:07.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 81 tests
1857420685
00:19:07.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:17.723 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9820 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:18.369 [pool-479-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (453 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:18.379 [pool-480-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:18.382 [pool-481-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:18.384 [pool-482-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:18.384 [pool-477-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:18.384 [pool-477-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:18.384 [pool-477-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:331.
00:19:18.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
00:19:18.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 81 tests
1857420685
00:19:18.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
00:19:18.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 81 tests
1857420685
00:19:18.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
00:19:18.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1488 which is executed by 81 tests
68623
00:19:18.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
00:19:18.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1485 which is executed by 81 tests
68623
00:19:19.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:28.871 [pool-484-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9802 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:29.560 [pool-485-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (392 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:29.571 [pool-486-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:29.573 [pool-487-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:29.575 [pool-488-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:29.575 [pool-483-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:29.576 [pool-483-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:29.576 [pool-483-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1485.
00:19:29.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
00:19:29.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 81 tests
68623
00:19:29.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:39.495 [pool-490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9733 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:40.215 [pool-491-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (423 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:40.226 [pool-492-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:40.228 [pool-493-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:40.230 [pool-494-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:40.230 [pool-489-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:40.230 [pool-489-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:40.230 [pool-489-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1484.
00:19:40.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
00:19:40.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1482 which is executed by 81 tests
68623
00:19:40.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:50.208 [pool-496-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9788 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:50.936 [pool-497-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (435 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:50.947 [pool-498-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:19:50.952 [pool-499-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:50.954 [pool-500-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:50.954 [pool-495-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:50.954 [pool-495-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:50.955 [pool-495-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1482.
00:19:50.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:00.711 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9748 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:01.405 [pool-503-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (403 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:01.417 [pool-504-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 16
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:01.419 [pool-505-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = 1. flags = 16]
java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 16    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:01.421 [pool-506-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:01.421 [pool-501-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:01.421 [pool-501-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = 1. flags = 16, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:01.421 [pool-501-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1482.
00:20:01.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
00:20:01.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1476 which is executed by 81 tests
68623
00:20:01.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:11.415 [pool-508-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9807 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:12.164 [pool-509-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (458 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:12.175 [pool-510-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:12.182 [pool-511-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:12.184 [pool-512-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:12.184 [pool-507-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:12.184 [pool-507-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:12.184 [pool-507-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1476.
00:20:12.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:21.894 [pool-514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9701 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:22.637 [pool-515-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (447 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:22.648 [pool-516-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #1 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:22.650 [pool-517-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #1 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:22.653 [pool-518-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:22.653 [pool-513-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:22.653 [pool-513-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = Infinity flags = 4, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:22.653 [pool-513-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1476.
00:20:22.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
00:20:22.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1470 which is executed by 81 tests
68623
00:20:22.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:32.628 [pool-520-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9788 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:33.347 [pool-521-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (427 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0]
java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:33.358 [pool-522-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:33.365 [pool-523-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:33.367 [pool-524-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:33.367 [pool-519-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:33.367 [pool-519-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:33.367 [pool-519-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1470.
00:20:33.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:43.092 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9716 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:43.857 [pool-527-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (474 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0]
java.lang.AssertionError: assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:853)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:43.869 [pool-528-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 8
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:43.871 [pool-529-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = 1. flags = 8]
java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 8    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:43.873 [pool-530-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:43.873 [pool-525-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #24 x = 1.000000000000000000e-131078 flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:43.873 [pool-525-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = 1. flags = 8, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:43.873 [pool-525-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1470.
00:20:43.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
00:20:43.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1463 which is executed by 81 tests
68623
00:20:44.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:53.782 [pool-532-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9700 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:54.360 [pool-533-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (281 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:54.370 [pool-534-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:20:54.371 [pool-535-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:54.373 [pool-536-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:54.373 [pool-531-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:54.373 [pool-531-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:54.373 [pool-531-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1463.
00:20:54.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:04.151 [pool-538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9770 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:04.721 [pool-539-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (275 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:04.731 [pool-540-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:04.733 [pool-541-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:04.735 [pool-542-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:04.735 [pool-537-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:04.735 [pool-537-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:04.735 [pool-537-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1463.
00:21:04.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
00:21:04.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 81 tests
68623
00:21:04.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:14.688 [pool-544-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9765 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:21.726 [pool-545-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6747 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:21.769 [pool-546-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:21.772 [pool-547-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:21.775 [pool-548-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:21.775 [pool-543-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:21.775 [pool-543-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:21.776 [pool-543-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1460.
00:21:21.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
00:21:21.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 81 tests
68623
00:21:21.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:21:31.844 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9867 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:24:52.144 [pool-549-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:24:52.144 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:24:52.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
00:24:52.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 81 tests
68623
00:24:52.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
00:24:52.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1457 which is executed by 81 tests
68623
00:24:52.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:02.241 [pool-553-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9727 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:25:56.547 [pool-554-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (54016 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:26:50.750 [pool-555-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (54199 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:51.017 [pool-556-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (266 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:51.024 [pool-557-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:51.024 [pool-552-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:26:51.024 [pool-552-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:26:51.025 [pool-552-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1457.
00:26:51.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
00:26:51.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 81 tests
68623
00:26:51.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
00:26:51.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1454 which is executed by 81 tests
68623
00:26:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:01.280 [pool-559-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9875 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:01.992 [pool-560-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (405 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:02.002 [pool-561-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:02.008 [pool-562-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:02.010 [pool-563-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:27:02.010 [pool-558-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:02.010 [pool-558-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:02.010 [pool-558-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1454.
00:27:02.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:11.892 [pool-565-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9874 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:12.605 [pool-566-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (409 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:12.616 [pool-567-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #1 x = 1.0000000000000003 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:12.618 [pool-568-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = 1.0000000000000003 flags = 0]
java.lang.AssertionError: assersion failed Multiply #1 x = 1.0000000000000003 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:12.620 [pool-569-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:27:12.620 [pool-564-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:12.620 [pool-564-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = 1.0000000000000003 flags = 0, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:12.620 [pool-564-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1454.
00:27:12.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
00:27:12.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1438 which is executed by 81 tests
68623
00:27:12.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:22.692 [pool-571-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9887 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:23.394 [pool-572-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (417 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:23.405 [pool-573-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:23.410 [pool-574-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:23.412 [pool-575-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:27:23.413 [pool-570-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:23.413 [pool-570-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:23.413 [pool-570-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1438.
00:27:23.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
00:27:23.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1437 which is executed by 81 tests
68623
00:27:23.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:33.563 [pool-577-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9960 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:34.271 [pool-578-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (421 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:34.281 [pool-579-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:34.286 [pool-580-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:34.288 [pool-581-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:27:34.289 [pool-576-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:34.289 [pool-576-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:34.289 [pool-576-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1437.
00:27:34.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
00:27:34.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1419 which is executed by 81 tests
68623
00:27:34.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:44.557 [pool-583-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10082 ms)
<> Total tests run: 70
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:45.245 [pool-584-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (401 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:45.259 [pool-585-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:45.265 [pool-586-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:27:45.267 [pool-587-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:27:45.267 [pool-582-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:45.267 [pool-582-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1, checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:27:45.267 [pool-582-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1419.
00:27:45.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
00:27:45.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1418 which is executed by 81 tests
68623
00:27:45.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
00:27:45.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:642 which is executed by 81 tests
68623
00:27:45.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
00:27:45.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:284 which is executed by 21 tests
1857420685
00:27:45.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
00:27:45.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1580 which is executed by 21 tests
68623
00:27:45.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:46.453 [pool-589-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (495 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:47.008 [pool-590-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (266 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:47.010 [pool-591-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:47.010 [pool-588-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:47.010 [pool-588-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:47.010 [pool-588-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1580.
00:27:47.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
00:27:47.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:948 which is executed by 21 tests
68623
00:27:47.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:47.634 [pool-593-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (443 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:48.098 [pool-594-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (174 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:48.100 [pool-595-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:48.101 [pool-592-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:48.101 [pool-592-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:48.101 [pool-592-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:948.
00:27:48.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
00:27:48.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1654 which is executed by 22 tests
68623
00:27:48.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:48.736 [pool-597-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (451 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:49.208 [pool-598-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:49.210 [pool-599-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:49.210 [pool-596-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 0. flags = 0]
00:27:49.210 [pool-596-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:49.210 [pool-596-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1654.
00:27:49.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
00:27:49.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1653 which is executed by 22 tests
68623
00:27:49.388 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:49.831 [pool-601-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (436 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131068 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:50.303 [pool-602-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (183 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131068 flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131068 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:50.305 [pool-603-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:50.305 [pool-600-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131068 flags = 0]
00:27:50.306 [pool-600-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:50.306 [pool-600-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1653.
00:27:50.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
00:27:50.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1652 which is executed by 22 tests
68623
00:27:50.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:50.977 [pool-605-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (487 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:51.447 [pool-606-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (180 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:51.450 [pool-607-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:51.450 [pool-604-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:51.450 [pool-604-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:51.450 [pool-604-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1652.
00:27:51.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
00:27:51.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1666 which is executed by 27 tests
68623
00:27:51.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
00:27:51.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1662 which is executed by 27 tests
68623
00:27:51.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:52.286 [pool-609-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:52.798 [pool-610-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (219 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:52.801 [pool-611-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:52.801 [pool-608-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
00:27:52.801 [pool-608-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:52.801 [pool-608-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1662.
00:27:52.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:53.315 [pool-613-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (508 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:53.775 [pool-614-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:53.778 [pool-615-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:53.778 [pool-612-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 1.0000000000000000e131072 flags = 4]
00:27:53.778 [pool-612-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:53.779 [pool-612-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1662.
00:27:53.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
00:27:53.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1661 which is executed by 27 tests
68623
00:27:53.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
00:27:53.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1657 which is executed by 27 tests
68623
00:27:54.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:54.598 [pool-617-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (457 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:55.067 [pool-618-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (174 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:55.070 [pool-619-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:55.070 [pool-616-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:55.070 [pool-616-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:55.070 [pool-616-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1657.
00:27:55.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:55.514 [pool-621-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (438 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:55.970 [pool-622-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #2 x = 0.0001 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:55.972 [pool-623-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #2 x = 0.0001 flags = 0]
java.lang.AssertionError: assersion failed Multiply #2 x = 0.0001 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:55.972 [pool-620-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:55.972 [pool-620-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #2 x = 0.0001 flags = 0]
00:27:55.972 [pool-620-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1657.
00:27:55.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
00:27:55.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1651 which is executed by 27 tests
68623
00:27:56.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:56.630 [pool-625-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (463 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:57.102 [pool-626-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (185 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:57.106 [pool-627-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:57.106 [pool-624-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 0. flags = 0]
00:27:57.106 [pool-624-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:57.106 [pool-624-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1651.
00:27:57.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:57.556 [pool-629-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (444 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:58.015 [pool-630-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (174 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = 0. flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = 0. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #2 x = 0.00000001 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:58.017 [pool-631-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #2 x = 0.00000001 flags = 0]
java.lang.AssertionError: assersion failed Multiply #2 x = 0.00000001 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:58.017 [pool-628-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = 0. flags = 0]
00:27:58.017 [pool-628-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #2 x = 0.00000001 flags = 0]
00:27:58.017 [pool-628-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1651.
00:27:58.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
00:27:58.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1650 which is executed by 27 tests
68623
00:27:58.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
00:27:58.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1647 which is executed by 27 tests
68623
00:27:58.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:58.870 [pool-633-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (492 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #6 x = 2. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:779)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:59.334 [pool-634-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #6 x = 2. flags = 0]
java.lang.AssertionError: assersion failed Multiply #6 x = 2. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:779)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:59.338 [pool-635-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:27:59.339 [pool-632-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #6 x = 2. flags = 0]
00:27:59.339 [pool-632-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:27:59.339 [pool-632-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1647.
00:27:59.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
00:27:59.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1646 which is executed by 27 tests
68623
00:27:59.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:27:59.991 [pool-637-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (468 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = :.0000000000000000000e131071 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:00.437 [pool-638-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (161 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = :.0000000000000000000e131071 flags = 0]
java.lang.AssertionError: assersion failed Multiply #19 x = :.0000000000000000000e131071 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:00.440 [pool-639-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:00.440 [pool-636-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = :.0000000000000000000e131071 flags = 0]
00:28:00.440 [pool-636-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:00.440 [pool-636-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1646.
00:28:00.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
00:28:00.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1645 which is executed by 27 tests
68623
00:28:00.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
00:28:00.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1644 which is executed by 27 tests
68623
00:28:00.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:01.245 [pool-641-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (443 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #6 x = 2. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:779)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:01.703 [pool-642-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (172 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #6 x = 2. flags = 0]
java.lang.AssertionError: assersion failed Multiply #6 x = 2. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:779)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:01.706 [pool-643-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:01.707 [pool-640-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #6 x = 2. flags = 0]
00:28:01.707 [pool-640-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:01.707 [pool-640-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1644.
00:28:01.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
00:28:01.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1643 which is executed by 27 tests
68623
00:28:01.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
00:28:01.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1635 which is executed by 27 tests
68623
00:28:02.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:02.547 [pool-645-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #39 x = /. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:917)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:03.014 [pool-646-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (180 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #39 x = /. flags = 0]
java.lang.AssertionError: assersion failed Multiply #39 x = /. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:917)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:03.016 [pool-647-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:03.017 [pool-644-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #39 x = /. flags = 0]
00:28:03.017 [pool-644-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:03.017 [pool-644-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1635.
00:28:03.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:03.472 [pool-649-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (449 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #39 x = /. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:917)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:03.928 [pool-650-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (170 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #39 x = /. flags = 0]
java.lang.AssertionError: assersion failed Multiply #39 x = /. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:917)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #2 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:03.929 [pool-651-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #2 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #2 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:762)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:03.930 [pool-648-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #39 x = /. flags = 0]
00:28:03.930 [pool-648-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #2 x = NaN flags = 1]
00:28:03.930 [pool-648-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1635.
00:28:03.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
00:28:03.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1615 which is executed by 27 tests
68623
00:28:04.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:04.541 [pool-653-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (427 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:04.991 [pool-654-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:04.994 [pool-655-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:04.994 [pool-652-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:28:04.994 [pool-652-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:04.994 [pool-652-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1615.
00:28:04.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:05.458 [pool-657-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (458 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:05.942 [pool-658-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #35 x = Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #35 x = Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:901)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:05.945 [pool-659-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:05.945 [pool-656-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #35 x = Infinity flags = 0]
00:28:05.945 [pool-656-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:05.945 [pool-656-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1615.
00:28:05.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
00:28:05.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1612 which is executed by 27 tests
68623
00:28:06.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
00:28:06.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1603 which is executed by 27 tests
68623
00:28:06.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
00:28:06.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2253 which is executed by 28 tests
68623
00:28:06.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:06.967 [pool-661-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (480 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #27 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:865)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:07.440 [pool-662-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #27 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #27 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:865)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:07.442 [pool-663-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:07.443 [pool-660-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #27 x = NaN flags = 1]
00:28:07.443 [pool-660-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:07.443 [pool-660-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2253.
00:28:07.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
00:28:07.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2252 which is executed by 28 tests
68623
00:28:07.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:08.110 [pool-665-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (480 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:08.608 [pool-666-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (181 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:08.611 [pool-667-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:08.611 [pool-664-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:08.611 [pool-664-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:08.611 [pool-664-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2252.
00:28:08.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
00:28:08.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:386 which is executed by 29 tests
1857420685
00:28:08.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
00:28:08.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2185 which is executed by 29 tests
68623
00:28:08.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:09.416 [pool-669-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:09.895 [pool-670-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:09.898 [pool-671-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:09.898 [pool-668-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:09.898 [pool-668-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:09.898 [pool-668-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2185.
00:28:09.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
00:28:09.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2184 which is executed by 29 tests
68623
00:28:10.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:10.569 [pool-673-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (484 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:11.073 [pool-674-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (203 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:11.075 [pool-675-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:11.076 [pool-672-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:11.076 [pool-672-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:11.076 [pool-672-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2184.
00:28:11.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
00:28:11.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:396 which is executed by 30 tests
1857420685
00:28:11.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
00:28:11.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:299 which is executed by 31 tests
1857420685
00:28:11.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
00:28:11.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:298 which is executed by 31 tests
1857420685
00:28:11.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:11.974 [pool-677-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (449 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 18
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:12.336 [pool-678-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (169 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = 1. flags = 18]
java.lang.AssertionError: assersion failed Multiply #1 x = 1. flags = 18    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:12.340 [pool-679-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:12.341 [pool-676-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = 1. flags = 18]
00:28:12.341 [pool-676-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:12.341 [pool-676-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:298.
00:28:12.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
00:28:12.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2261 which is executed by 31 tests
68623
00:28:12.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:12.947 [pool-681-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (419 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:13.442 [pool-682-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:13.445 [pool-683-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:13.445 [pool-680-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:13.445 [pool-680-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:13.445 [pool-680-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2261.
00:28:13.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:13.921 [pool-685-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:14.404 [pool-686-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (182 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:14.407 [pool-687-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:14.407 [pool-684-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:14.407 [pool-684-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 4]
00:28:14.407 [pool-684-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2261.
00:28:14.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
00:28:14.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2256 which is executed by 31 tests
68623
00:28:14.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:15.055 [pool-689-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (459 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:15.524 [pool-690-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:15.526 [pool-691-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:15.527 [pool-688-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:15.527 [pool-688-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:15.527 [pool-688-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2256.
00:28:15.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:15.974 [pool-693-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (441 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:16.443 [pool-694-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:16.445 [pool-695-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:16.446 [pool-692-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:16.446 [pool-692-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 4]
00:28:16.446 [pool-692-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2256.
00:28:16.446 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
00:28:16.446 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2250 which is executed by 31 tests
68623
00:28:16.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:17.070 [pool-697-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (437 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:17.556 [pool-698-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (185 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:17.558 [pool-699-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:17.559 [pool-696-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = NaN flags = 1]
00:28:17.559 [pool-696-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:17.559 [pool-696-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2250.
00:28:17.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:18.005 [pool-701-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (440 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:18.472 [pool-702-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:18.473 [pool-703-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:18.474 [pool-700-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = NaN flags = 1]
00:28:18.474 [pool-700-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 4]
00:28:18.474 [pool-700-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2250.
00:28:18.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
00:28:18.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2247 which is executed by 31 tests
68623
00:28:18.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:19.142 [pool-705-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (470 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:19.608 [pool-706-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #19 x = Infinity flags = 4]
java.lang.AssertionError: assersion failed Multiply #19 x = Infinity flags = 4    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:837)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:19.610 [pool-707-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:19.610 [pool-704-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #19 x = Infinity flags = 4]
00:28:19.610 [pool-704-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:19.610 [pool-704-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2247.
00:28:19.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
00:28:19.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2246 which is executed by 31 tests
68623
00:28:19.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:20.256 [pool-709-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (458 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #17 x = -Infinity flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:20.715 [pool-710-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (160 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #17 x = -Infinity flags = 0]
java.lang.AssertionError: assersion failed Multiply #17 x = -Infinity flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:825)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:20.717 [pool-711-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:20.717 [pool-708-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #17 x = -Infinity flags = 0]
00:28:20.717 [pool-708-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:20.717 [pool-708-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2246.
00:28:20.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
00:28:20.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2245 which is executed by 31 tests
68623
00:28:20.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:21.377 [pool-713-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (472 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:21.841 [pool-714-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (164 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:21.843 [pool-715-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:21.843 [pool-712-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:21.843 [pool-712-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:21.843 [pool-712-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2245.
00:28:21.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
00:28:21.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:2243 which is executed by 31 tests
68623
00:28:22.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:22.508 [pool-717-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (475 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:22.979 [pool-718-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (168 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:22.980 [pool-719-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:22.981 [pool-716-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:22.981 [pool-716-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:22.981 [pool-716-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2243.
00:28:22.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:23.485 [pool-721-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (498 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:23.977 [pool-722-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (177 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:23.979 [pool-723-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:23.980 [pool-720-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:23.980 [pool-720-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:23.980 [pool-720-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:2243.
00:28:23.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
00:28:23.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1733 which is executed by 31 tests
68623
00:28:24.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:24.618 [pool-725-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (453 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArithmeticException: / by zero
    at org.apache.commons.math3.dfp.Dfp.divide(Dfp.java:1147)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:40)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:28:25.128 [pool-726-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (189 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[/ by zero]
java.lang.ArithmeticException: / by zero    at org.apache.commons.math3.dfp.Dfp.divide(Dfp.java:1147)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:40)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:25.131 [pool-727-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:25.131 [pool-724-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): / by zero]
00:28:25.131 [pool-724-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:25.131 [pool-724-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1733.
00:28:25.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
00:28:25.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1732 which is executed by 31 tests
68623
00:28:25.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:25.753 [pool-729-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (438 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:26.212 [pool-730-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (166 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #28 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #28 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:873)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:26.214 [pool-731-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:26.214 [pool-728-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #28 x = NaN flags = 1]
00:28:26.214 [pool-728-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:26.214 [pool-728-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1732.
00:28:26.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
00:28:26.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1731 which is executed by 31 tests
68623
00:28:26.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:26.879 [pool-733-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (481 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:27.345 [pool-734-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (172 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:27.348 [pool-735-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:27.348 [pool-732-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:27.348 [pool-732-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:27.348 [pool-732-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1731.
00:28:27.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
00:28:27.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1730 which is executed by 31 tests
68623
00:28:27.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:27.983 [pool-737-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (451 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:28.466 [pool-738-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (185 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:28.469 [pool-739-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:28.469 [pool-736-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:28.469 [pool-736-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:28.469 [pool-736-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1730.
00:28:28.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
00:28:28.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1729 which is executed by 31 tests
68623
00:28:28.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:29.100 [pool-741-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (448 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:29.569 [pool-742-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (178 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:29.571 [pool-743-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:29.572 [pool-740-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:29.572 [pool-740-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:29.572 [pool-740-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1729.
00:28:29.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
00:28:29.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1728 which is executed by 31 tests
68623
00:28:29.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:30.204 [pool-745-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (448 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:30.688 [pool-746-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (177 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:30.690 [pool-747-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:30.690 [pool-744-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:30.690 [pool-744-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:30.690 [pool-744-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1728.
00:28:30.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
00:28:30.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1591 which is executed by 32 tests
68623
00:28:30.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:31.378 [pool-749-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (506 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:32.123 [pool-750-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (460 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:32.125 [pool-751-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:32.125 [pool-748-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:32.125 [pool-748-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:32.125 [pool-748-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1591.
00:28:32.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
00:28:32.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1594 which is executed by 33 tests
68623
00:28:32.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
00:28:32.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1590 which is executed by 33 tests
68623
00:28:32.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:32.952 [pool-753-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (467 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:33.660 [pool-754-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (423 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:33.663 [pool-755-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:33.664 [pool-752-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:33.664 [pool-752-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:33.664 [pool-752-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1590.
00:28:33.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:34.123 [pool-757-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (453 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:34.817 [pool-758-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (407 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:34.821 [pool-759-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:34.821 [pool-756-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:34.821 [pool-756-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:34.821 [pool-756-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1590.
00:28:34.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
00:28:34.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1585 which is executed by 33 tests
68623
00:28:34.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:35.526 [pool-761-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (521 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:35.806 [pool-760-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:1023: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
00:28:35.843 [pool-760-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Dfp implements org.apache.commons.math3.FieldElement<org.apache.commons.math3.dfp.Dfp> {
    public static final int RADIX = 10000;

    public static final int MIN_EXP = -32767;

    public static final int MAX_EXP = 32768;

    public static final int ERR_SCALE = 32760;

    public static final byte FINITE = 0;

    public static final byte INFINITE = 1;

    public static final byte SNAN = 2;

    public static final byte QNAN = 3;

    private static final java.lang.String NAN_STRING = "NaN";

    private static final java.lang.String POS_INFINITY_STRING = "Infinity";

    private static final java.lang.String NEG_INFINITY_STRING = "-Infinity";

    private static final java.lang.String ADD_TRAP = "add";

    private static final java.lang.String MULTIPLY_TRAP = "multiply";

    private static final java.lang.String DIVIDE_TRAP = "divide";

    private static final java.lang.String SQRT_TRAP = "sqrt";

    private static final java.lang.String ALIGN_TRAP = "align";

    private static final java.lang.String TRUNC_TRAP = "trunc";

    private static final java.lang.String NEXT_AFTER_TRAP = "nextAfter";

    private static final java.lang.String LESS_THAN_TRAP = "lessThan";

    private static final java.lang.String GREATER_THAN_TRAP = "greaterThan";

    private static final java.lang.String NEW_INSTANCE_TRAP = "newInstance";

    protected int[] mant;

    protected byte sign;

    protected int exp;

    protected byte nans;

    private final org.apache.commons.math3.dfp.DfpField field;

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, byte x) {
        this(field, ((long) (x)));
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, int x) {
        this(field, ((long) (x)));
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, long x) {
        mant = new int[field.getRadixDigits()];
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        boolean isLongMin = false;
        if (x == (java.lang.Long.MIN_VALUE)) {
            isLongMin = true;
            ++x;
        }
        if (x < 0) {
            sign = -1;
            x = -x;
        }else {
            sign = 1;
        }
        exp = 0;
        while (x != 0) {
            java.lang.System.arraycopy(mant, ((mant.length) - (exp)), mant, (((mant.length) - 1) - (exp)), exp);
            mant[((mant.length) - 1)] = ((int) (x % (org.apache.commons.math3.dfp.Dfp.RADIX)));
            x /= org.apache.commons.math3.dfp.Dfp.RADIX;
            (exp)++;
        } 
        if (isLongMin) {
            for (int i = 0; i < ((mant.length) - 1); i++) {
                if ((mant[i]) != 0) {
                    (mant[i])++;
                    break;
                }
            }
        }
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, double x) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        long bits = java.lang.Double.doubleToLongBits(x);
        long mantissa = bits & 4503599627370495L;
        int exponent = ((int) ((bits & 9218868437227405312L) >> 52)) - 1023;
        if (exponent == (-1023)) {
            if (x == 0) {
                if ((bits & -9223372036854775808L) != 0) {
                    sign = -1;
                }
                return;
            }
            exponent++;
            while ((mantissa & 4503599627370496L) == 0) {
                exponent--;
                mantissa <<= 1;
            } 
            mantissa &= 4503599627370495L;
        }
        if (exponent == 1024) {
            if (x != x) {
                sign = ((byte) (1));
                nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            }else
                if (x < 0) {
                    sign = ((byte) (-1));
                    nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }else {
                    sign = ((byte) (1));
                    nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }

            return;
        }
        org.apache.commons.math3.dfp.Dfp xdfp = new org.apache.commons.math3.dfp.Dfp(field, mantissa);
        xdfp = xdfp.divide(new org.apache.commons.math3.dfp.Dfp(field, 4503599627370496L)).add(field.getOne());
        xdfp = xdfp.multiply(org.apache.commons.math3.dfp.DfpMath.pow(field.getTwo(), exponent));
        if ((bits & -9223372036854775808L) != 0) {
            xdfp = xdfp.negate();
        }
        java.lang.System.arraycopy(xdfp.mant, 0, mant, 0, mant.length);
        sign = xdfp.sign;
        exp = xdfp.exp;
        nans = xdfp.nans;
    }

    public Dfp(final org.apache.commons.math3.dfp.Dfp d) {
        mant = d.mant.clone();
        sign = d.sign;
        exp = d.exp;
        nans = d.nans;
        field = d.field;
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, final java.lang.String s) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        boolean decimalFound = false;
        final int rsize = 4;
        final int offset = 4;
        final char[] striped = new char[((getRadixDigits()) * rsize) + (offset * 2)];
        if (s.equals(org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING)) {
            sign = ((byte) (1));
            nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            return;
        }
        if (s.equals(org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING)) {
            sign = ((byte) (-1));
            nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            return;
        }
        if (s.equals(org.apache.commons.math3.dfp.Dfp.NAN_STRING)) {
            sign = ((byte) (1));
            nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return;
        }
        int p = s.indexOf("e");
        if (p == (-1)) {
            p = s.indexOf("E");
        }
        final java.lang.String fpdecimal;
        int sciexp = 0;
        if (p != (-1)) {
            fpdecimal = s.substring(0, p);
            java.lang.String fpexp = s.substring((p + 1));
            boolean negative = false;
            for (int i = 0; i < (fpexp.length()); i++) {
                if ((fpexp.charAt(i)) == '-') {
                    negative = true;
                    continue;
                }
                if (((fpexp.charAt(i)) >= '0') && ((fpexp.charAt(i)) <= '9')) {
                    sciexp = ((sciexp * 10) + (fpexp.charAt(i))) - '0';
                }
            }
            if (negative) {
                sciexp = -sciexp;
            }
        }else {
            fpdecimal = s;
        }
        if ((fpdecimal.indexOf("-")) != (-1)) {
            sign = -1;
        }
        p = 0;
        int decimalPos = 0;
        for (; ;) {
            if (((fpdecimal.charAt(p)) >= '1') && ((fpdecimal.charAt(p)) <= '9')) {
                break;
            }
            if (decimalFound && ((fpdecimal.charAt(p)) == '0')) {
                decimalPos--;
            }
            if ((fpdecimal.charAt(p)) == '.') {
                decimalFound = true;
            }
            p++;
            if (p == (fpdecimal.length())) {
                break;
            }
        }
        int q = offset;
        striped[0] = '0';
        striped[1] = '0';
        striped[2] = '0';
        striped[3] = '0';
        int significantDigits = 0;
        for (; ;) {
            if (p == (fpdecimal.length())) {
                break;
            }
            if (q == ((((mant.length) * rsize) + offset) + 1)) {
                break;
            }
            if ((fpdecimal.charAt(p)) == '.') {
                decimalFound = true;
                decimalPos = significantDigits;
                p++;
                continue;
            }
            if (((fpdecimal.charAt(p)) < '0') || ((fpdecimal.charAt(p)) > '9')) {
                p++;
                continue;
            }
            striped[q] = fpdecimal.charAt(p);
            q++;
            p++;
            significantDigits++;
        }
        if (decimalFound && (q != offset)) {
            for (; ;) {
                q--;
                if (q == offset) {
                    break;
                }
                if ((striped[q]) == '0') {
                    significantDigits--;
                }else {
                    break;
                }
            }
        }
        if (decimalFound && (significantDigits == 0)) {
            decimalPos = 0;
        }
        if (!decimalFound) {
            decimalPos = q - offset;
        }
        q = offset;
        p = (significantDigits - 1) + offset;
        while (p > q) {
            if ((striped[p]) != '0') {
                break;
            }
            p--;
        } 
        int i = (((rsize * 100) - decimalPos) - (sciexp % rsize)) % rsize;
        q -= i;
        decimalPos += i;
        while ((p - q) < ((mant.length) * rsize)) {
            for (i = 0; i < rsize; i++) {
                striped[(++p)] = '0';
            }
        } 
        for (i = (mant.length) - 1; i >= 0; i--) {
            mant[i] = (((((striped[q]) - '0') * 1000) + (((striped[(q + 1)]) - '0') * 100)) + (((striped[(q + 2)]) - '0') * 10)) + ((striped[(q + 3)]) - '0');
            q += 4;
        }
        exp = (decimalPos + sciexp) / rsize;
        if (q < (striped.length)) {
            round((((striped[q]) - '0') * 1000));
        }
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, final byte sign, final byte nans) {
        this.field = field;
        this.mant = new int[field.getRadixDigits()];
        this.sign = sign;
        this.exp = 0;
        this.nans = nans;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance() {
        return new org.apache.commons.math3.dfp.Dfp(getField());
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final byte x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final int x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final long x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final double x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final org.apache.commons.math3.dfp.Dfp d) {
        if ((field.getRadixDigits()) != (d.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP, d, result);
        }
        return new org.apache.commons.math3.dfp.Dfp(d);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final java.lang.String s) {
        return new org.apache.commons.math3.dfp.Dfp(field, s);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final byte sig, final byte code) {
        return field.newDfp(sig, code);
    }

    public org.apache.commons.math3.dfp.DfpField getField() {
        return field;
    }

    public int getRadixDigits() {
        return field.getRadixDigits();
    }

    public org.apache.commons.math3.dfp.Dfp getZero() {
        return field.getZero();
    }

    public org.apache.commons.math3.dfp.Dfp getOne() {
        return field.getOne();
    }

    public org.apache.commons.math3.dfp.Dfp getTwo() {
        return field.getTwo();
    }

    protected void shiftLeft() {
        for (int i = (mant.length) - 1; i > 0; i--) {
            mant[i] = mant[(i - 1)];
        }
        mant[0] = 0;
        (exp)--;
    }

    protected void shiftRight() {
        for (int i = 0; i < ((mant.length) - 1); i++) {
            mant[i] = mant[(i + 1)];
        }
        mant[((mant.length) - 1)] = 0;
        (exp)++;
    }

    protected int align(int e) {
        int lostdigit = 0;
        boolean inexact = false;
        int diff = (exp) - e;
        int adiff = diff;
        if (adiff < 0) {
            adiff = -adiff;
        }
        if (diff == 0) {
            return 0;
        }
        if (adiff > ((mant.length) + 1)) {
            java.util.Arrays.fill(mant, 0);
            exp = e;
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP, this, this);
            return 0;
        }
        for (int i = 0; i < adiff; i++) {
            if (diff < 0) {
                if (lostdigit != 0) {
                    inexact = true;
                }
                lostdigit = mant[0];
                shiftRight();
            }else {
                shiftLeft();
            }
        }
        if (inexact) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP, this, this);
        }
        return lostdigit;
    }

    public boolean lessThan(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, x, result);
            return false;
        }
        if ((isNaN()) || (x.isNaN())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, x, newInstance(getZero()));
            return false;
        }
        return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) < 0;
    }

    public boolean greaterThan(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP, x, result);
            return false;
        }
        if ((isNaN()) || (x.isNaN())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP, x, newInstance(getZero()));
            return false;
        }
        return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) > 0;
    }

    public boolean negativeOrNull() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) < 0) || (((mant[((mant.length) - 1)]) == 0) && (!(isInfinite())));
    }

    public boolean strictlyNegative() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) < 0) && (((mant[((mant.length) - 1)]) != 0) || (isInfinite()));
    }

    public boolean positiveOrNull() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) > 0) || (((mant[((mant.length) - 1)]) == 0) && (!(isInfinite())));
    }

    public boolean strictlyPositive() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) > 0) && (((mant[((mant.length) - 1)]) != 0) || (isInfinite()));
    }

    public org.apache.commons.math3.dfp.Dfp abs() {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        result.sign = 1;
        return result;
    }

    public boolean isInfinite() {
        return (nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE);
    }

    public boolean isNaN() {
        return ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN));
    }

    public boolean isZero() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((mant[((mant.length) - 1)]) == 0) && (!(isInfinite()));
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object other) {
        if (other instanceof org.apache.commons.math3.dfp.Dfp) {
            final org.apache.commons.math3.dfp.Dfp x = ((org.apache.commons.math3.dfp.Dfp) (other));
            if (((isNaN()) || (x.isNaN())) || ((field.getRadixDigits()) != (x.field.getRadixDigits()))) {
                return false;
            }
            return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) == 0;
        }
        return false;
    }

    @java.lang.Override
    public int hashCode() {
        return (((17 + ((sign) << 8)) + ((nans) << 16)) + (exp)) + (java.util.Arrays.hashCode(mant));
    }

    public boolean unequal(final org.apache.commons.math3.dfp.Dfp x) {
        if (((isNaN()) || (x.isNaN())) || ((field.getRadixDigits()) != (x.field.getRadixDigits()))) {
            return false;
        }
        return (greaterThan(x)) || (lessThan(x));
    }

    private static int compare(final org.apache.commons.math3.dfp.Dfp a, final org.apache.commons.math3.dfp.Dfp b) {
        if (((((a.mant[((a.mant.length) - 1)]) == 0) && ((b.mant[((b.mant.length) - 1)]) == 0)) && ((a.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            return 0;
        }
        if ((a.sign) != (b.sign)) {
            if ((a.sign) == (-1)) {
                return -1;
            }else {
                return 1;
            }
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            return a.sign;
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            return -(b.sign);
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            return 0;
        }
        if (((b.mant[((b.mant.length) - 1)]) != 0) && ((a.mant[((b.mant.length) - 1)]) != 0)) {
            if ((a.exp) < (b.exp)) {
                return -(a.sign);
            }
            if ((a.exp) > (b.exp)) {
                return a.sign;
            }
        }
        for (int i = (a.mant.length) - 1; i >= 0; i--) {
            if ((a.mant[i]) > (b.mant[i])) {
                return a.sign;
            }
            if ((a.mant[i]) < (b.mant[i])) {
                return -(a.sign);
            }
        }
        return 0;
    }

    public org.apache.commons.math3.dfp.Dfp rint() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN);
    }

    public org.apache.commons.math3.dfp.Dfp floor() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_FLOOR);
    }

    public org.apache.commons.math3.dfp.Dfp ceil() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_CEIL);
    }

    public org.apache.commons.math3.dfp.Dfp remainder(final org.apache.commons.math3.dfp.Dfp d) {
        final org.apache.commons.math3.dfp.Dfp result = this.subtract(this.divide(d).rint().multiply(d));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.sign = sign;
        }
        return result;
    }

    protected org.apache.commons.math3.dfp.Dfp trunc(final org.apache.commons.math3.dfp.DfpField.RoundingMode rmode) {
        boolean changed = false;
        if (isNaN()) {
            return newInstance(this);
        }
        if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
            return newInstance(this);
        }
        if ((mant[((mant.length) - 1)]) == 0) {
            return newInstance(this);
        }
        if ((exp) < 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP, this, result);
            return result;
        }
        if ((exp) >= (mant.length)) {
            return newInstance(this);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        for (int i = 0; i < ((mant.length) - (result.exp)); i++) {
            changed |= (result.mant[i]) != 0;
            result.mant[i] = 0;
        }
        if (changed) {
            switch (rmode) {
                case ROUND_FLOOR :
                    if ((result.sign) == (-1)) {
                        result = result.add(newInstance((-1)));
                    }
                    break;
                case ROUND_CEIL :
                    if ((result.sign) == 1) {
                        result = result.add(getOne());
                    }
                    break;
                case ROUND_HALF_EVEN :
                default :
                    final org.apache.commons.math3.dfp.Dfp half = newInstance("0.5");
                    org.apache.commons.math3.dfp.Dfp a = subtract(result);
                    a.sign = 1;
                    if (a.greaterThan(half)) {
                        a = newInstance(getOne());
                        a.sign = sign;
                        result = result.add(a);
                    }
                    if (((a.equals(half)) && ((result.exp) > 0)) && (((result.mant[((mant.length) - (result.exp))]) & 1) != 0)) {
                        a = newInstance(getOne());
                        a.sign = sign;
                        result = result.add(a);
                    }
                    break;
            }
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP, this, result);
            return result;
        }
        return result;
    }

    public int intValue() {
        org.apache.commons.math3.dfp.Dfp rounded;
        int result = 0;
        rounded = rint();
        if (rounded.greaterThan(newInstance(2147483647))) {
            return 2147483647;
        }
        if (rounded.lessThan(newInstance(-2147483648))) {
            return -2147483648;
        }
        for (int i = (mant.length) - 1; i >= ((mant.length) - (rounded.exp)); i--) {
            result = (result * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (rounded.mant[i]);
        }
        if ((rounded.sign) == (-1)) {
            result = -result;
        }
        return result;
    }

    public int log10K() {
        return (exp) - 1;
    }

    public org.apache.commons.math3.dfp.Dfp power10K(final int e) {
        org.apache.commons.math3.dfp.Dfp d = newInstance(getOne());
        d.exp = e + 1;
        return d;
    }

    public int log10() {
        if ((mant[((mant.length) - 1)]) > 1000) {
            return ((exp) * 4) - 1;
        }
        if ((mant[((mant.length) - 1)]) > 100) {
            return ((exp) * 4) - 2;
        }
        if ((mant[((mant.length) - 1)]) > 10) {
            return ((exp) * 4) - 3;
        }
        return ((exp) * 4) - 4;
    }

    public org.apache.commons.math3.dfp.Dfp power10(final int e) {
        org.apache.commons.math3.dfp.Dfp d = newInstance(getOne());
        if (e >= 0) {
            d.exp = (e / 4) + 1;
        }else {
            d.exp = (e + 1) / 4;
        }
        switch (((e % 4) + 4) % 4) {
            case 0 :
                break;
            case 1 :
                d = d.multiply(10);
                break;
            case 2 :
                d = d.multiply(100);
                break;
            default :
                d = d.multiply(1000);
        }
        return d;
    }

    protected int complement(int extra) {
        extra = (org.apache.commons.math3.dfp.Dfp.RADIX) - extra;
        for (int i = 0; i < (mant.length); i++) {
            mant[i] = ((org.apache.commons.math3.dfp.Dfp.RADIX) - (mant[i])) - 1;
        }
        int rh = extra / (org.apache.commons.math3.dfp.Dfp.RADIX);
        extra = extra - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        for (int i = 0; i < (mant.length); i++) {
            final int r = (mant[i]) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        return extra;
    }

    public org.apache.commons.math3.dfp.Dfp add(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
        }
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((x.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (x.isNaN()) {
                return x;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                return this;
            }
            if (((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                return x;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) && ((sign) == (x.sign))) {
                return x;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) && ((sign) != (x.sign))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
                return result;
            }
        }
        org.apache.commons.math3.dfp.Dfp a = newInstance(this);
        org.apache.commons.math3.dfp.Dfp b = newInstance(x);
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        final byte asign = a.sign;
        final byte bsign = b.sign;
        a.sign = 1;
        b.sign = 1;
        byte rsign = bsign;
        if ((org.apache.commons.math3.dfp.Dfp.compare(a, b)) > 0) {
            rsign = asign;
        }
        if ((b.mant[((mant.length) - 1)]) == 0) {
            b.exp = a.exp;
        }
        if ((a.mant[((mant.length) - 1)]) == 0) {
            a.exp = b.exp;
        }
        int aextradigit = 0;
        int bextradigit = 0;
        if ((a.exp) < (b.exp)) {
            aextradigit = a.align(b.exp);
        }else {
            bextradigit = b.align(a.exp);
        }
        if (asign != bsign) {
            if (asign == rsign) {
                bextradigit = b.complement(bextradigit);
            }else {
                aextradigit = a.complement(aextradigit);
            }
        }
        int rh = 0;
        for (int i = 0; i < (mant.length); i++) {
            final int r = ((a.mant[i]) + (b.mant[i])) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            result.mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        result.exp = a.exp;
        result.sign = rsign;
        if ((rh != 0) && (asign == bsign)) {
            final int lostdigit = result.mant[0];
            result.shiftRight();
            result.mant[((mant.length) - 1)] = rh;
            final int excp = result.round(lostdigit);
            if (excp != 0) {
                result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            if ((result.mant[((mant.length) - 1)]) != 0) {
                break;
            }
            result.shiftLeft();
            if (i == 0) {
                result.mant[0] = aextradigit + bextradigit;
                aextradigit = 0;
                bextradigit = 0;
            }
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
            if (asign != bsign) {
                result.sign = 1;
            }
        }
        final int excp = result.round((aextradigit + bextradigit));
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp negate() {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        result.sign = ((byte) (-(result.sign)));
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp subtract(final org.apache.commons.math3.dfp.Dfp x) {
        return add(x.negate());
    }

    protected int round(int n) {
        boolean inc = false;
        switch (field.getRoundingMode()) {
            case ROUND_DOWN :
                inc = false;
                break;
            case ROUND_UP :
                inc = n != 0;
                break;
            case ROUND_HALF_UP :
                inc = n >= 5000;
                break;
            case ROUND_HALF_DOWN :
                inc = n > 5000;
                break;
            case ROUND_HALF_EVEN :
                inc = (n > 5000) || ((n == 5000) && (((mant[0]) & 1) == 1));
                break;
            case ROUND_HALF_ODD :
                inc = (n > 5000) || ((n == 5000) && (((mant[0]) & 1) == 0));
                break;
            case ROUND_CEIL :
                inc = ((sign) == 1) && (n != 0);
                break;
            case ROUND_FLOOR :
            default :
                inc = ((sign) == (-1)) && (n != 0);
                break;
        }
        if (inc) {
            int rh = 1;
            for (int i = 0; i < (mant.length); i++) {
                final int r = (mant[i]) + rh;
                rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
            }
            if (rh != 0) {
                shiftRight();
                mant[((mant.length) - 1)] = rh;
            }
        }
        if ((exp) < (org.apache.commons.math3.dfp.Dfp.MIN_EXP)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW);
            return org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW;
        }
        if ((exp) > (org.apache.commons.math3.dfp.Dfp.MAX_EXP)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW);
            return org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW;
        }
        if (n != 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            return org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT;
        }
        return 0;
    }

    public org.apache.commons.math3.dfp.Dfp multiply(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((x.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (x.isNaN()) {
                return x;
            }
            if ((((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((x.mant[((mant.length) - 1)]) != 0)) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((mant[((mant.length) - 1)]) != 0)) {
                result = newInstance(x);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if (((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if (((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((mant[((mant.length) - 1)]) == 0)) || ((((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((x.mant[((mant.length) - 1)]) == 0))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
                return result;
            }
        }
        int[] product = new int[(mant.length) * 2];
        for (int i = 0; i < (mant.length); i++) {
            int rh = 0;
            for (int j = 0; j < (mant.length); j++) {
                int r = (mant[i]) * (x.mant[j]);
                r = (r + (product[(i + j)])) + rh;
                rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                product[(i + j)] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
            }
            product[(i + (mant.length))] = rh;
        }
        int md = ((mant.length) * 2) - 1;
        for (int i = ((mant.length) * 2) - 1; i >= 0; i--) {
            if ((product[i]) != 0) {
                md = i;
                break;
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            result.mant[(((mant.length) - i) - 1)] = product[(md - i)];
        }
        result.exp = ((((exp) + (x.exp)) + md) - (2 * (mant.length))) + 1;
        result.sign = ((byte) (((sign) == (x.sign)) ? 1 : -1));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        final int excp;
        if (md > ((mant.length) - 1)) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(168).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.QNAN",org.apache.commons.math3.dfp.Dfp.QNAN);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.SNAN",org.apache.commons.math3.dfp.Dfp.SNAN);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("result",result);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x.mant",x.mant);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.this.field",org.apache.commons.math3.dfp.Dfp.this.field);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x.exp",x.exp);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("md",md);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.this.sign",org.apache.commons.math3.dfp.Dfp.this.sign);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.this.nans",org.apache.commons.math3.dfp.Dfp.this.nans);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.NAN_STRING",org.apache.commons.math3.dfp.Dfp.NAN_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.INFINITE",org.apache.commons.math3.dfp.Dfp.INFINITE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.FINITE",org.apache.commons.math3.dfp.Dfp.FINITE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("product",product);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.MAX_EXP",org.apache.commons.math3.dfp.Dfp.MAX_EXP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.RADIX",org.apache.commons.math3.dfp.Dfp.RADIX);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x.nans",x.nans);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x.sign",x.sign);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.this.exp",org.apache.commons.math3.dfp.Dfp.this.exp);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.MIN_EXP",org.apache.commons.math3.dfp.Dfp.MIN_EXP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.SQRT_TRAP",org.apache.commons.math3.dfp.Dfp.SQRT_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x",x);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("x.field",x.field);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.ERR_SCALE",org.apache.commons.math3.dfp.Dfp.ERR_SCALE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.ADD_TRAP",org.apache.commons.math3.dfp.Dfp.ADD_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.this.mant",org.apache.commons.math3.dfp.Dfp.this.mant);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectInput("org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(168).collectionEnds();
            }
            if (runtimeAngelicValue)
                excp = result.round(product[(md - (mant.length))]);

        }else {
            excp = result.round(0);
        }
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp multiply(final int x) {
        return multiplyFast(x);
    }

    private org.apache.commons.math3.dfp.Dfp multiplyFast(final int x) {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (isNaN()) {
                return this;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && (x != 0)) {
                result = newInstance(this);
                return result;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && (x == 0)) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, newInstance(getZero()), result);
                return result;
            }
        }
        if ((x < 0) || (x >= (org.apache.commons.math3.dfp.Dfp.RADIX))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, result, result);
            return result;
        }
        int rh = 0;
        for (int i = 0; i < (mant.length); i++) {
            final int r = ((mant[i]) * x) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            result.mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        int lostdigit = 0;
        if (rh != 0) {
            lostdigit = result.mant[0];
            result.shiftRight();
            result.mant[((mant.length) - 1)] = rh;
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        final int excp = result.round(lostdigit);
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, result, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp divisor) {
        int[] dividend;
        int[] quotient;
        int[] remainder;
        int qd;
        int nsqd;
        int trial = 0;
        int minadj;
        boolean trialgood;
        int md = 0;
        int excp;
        if ((field.getRadixDigits()) != (divisor.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((divisor.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (divisor.isNaN()) {
                return divisor;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (divisor.sign)));
                return result;
            }
            if (((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                result = newInstance(getZero());
                result.sign = ((byte) ((sign) * (divisor.sign)));
                return result;
            }
            if (((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
                return result;
            }
        }
        if ((divisor.mant[((mant.length) - 1)]) == 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO);
            result = newInstance(getZero());
            result.sign = ((byte) ((sign) * (divisor.sign)));
            result.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
            return result;
        }
        dividend = new int[(mant.length) + 1];
        quotient = new int[(mant.length) + 2];
        remainder = new int[(mant.length) + 1];
        dividend[mant.length] = 0;
        quotient[mant.length] = 0;
        quotient[((mant.length) + 1)] = 0;
        remainder[mant.length] = 0;
        for (int i = 0; i < (mant.length); i++) {
            dividend[i] = mant[i];
            quotient[i] = 0;
            remainder[i] = 0;
        }
        nsqd = 0;
        for (qd = (mant.length) + 1; qd >= 0; qd--) {
            final int divMsb = ((dividend[mant.length]) * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (dividend[((mant.length) - 1)]);
            int min = divMsb / ((divisor.mant[((mant.length) - 1)]) + 1);
            int max = (divMsb + 1) / (divisor.mant[((mant.length) - 1)]);
            trialgood = false;
            while (!trialgood) {
                trial = (min + max) / 2;
                int rh = 0;
                for (int i = 0; i < ((mant.length) + 1); i++) {
                    int dm = (i < (mant.length)) ? divisor.mant[i] : 0;
                    final int r = (dm * trial) + rh;
                    rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                    remainder[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
                }
                rh = 1;
                for (int i = 0; i < ((mant.length) + 1); i++) {
                    final int r = ((((org.apache.commons.math3.dfp.Dfp.RADIX) - 1) - (remainder[i])) + (dividend[i])) + rh;
                    rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                    remainder[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
                }
                if (rh == 0) {
                    max = trial - 1;
                    continue;
                }
                minadj = ((remainder[mant.length]) * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (remainder[((mant.length) - 1)]);
                minadj = minadj / ((divisor.mant[((mant.length) - 1)]) + 1);
                if (minadj >= 2) {
                    min = trial + minadj;
                    continue;
                }
                trialgood = false;
                for (int i = (mant.length) - 1; i >= 0; i--) {
                    if ((divisor.mant[i]) > (remainder[i])) {
                        trialgood = true;
                    }
                    if ((divisor.mant[i]) < (remainder[i])) {
                        break;
                    }
                }
                if ((remainder[mant.length]) != 0) {
                    trialgood = false;
                }
                if (trialgood == false) {
                    min = trial + 1;
                }
            } 
            quotient[qd] = trial;
            if ((trial != 0) || (nsqd != 0)) {
                nsqd++;
            }
            if (((field.getRoundingMode()) == (org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_DOWN)) && (nsqd == (mant.length))) {
                break;
            }
            if (nsqd > (mant.length)) {
                break;
            }
            dividend[0] = 0;
            for (int i = 0; i < (mant.length); i++) {
                dividend[(i + 1)] = remainder[i];
            }
        }
        md = mant.length;
        for (int i = (mant.length) + 1; i >= 0; i--) {
            if ((quotient[i]) != 0) {
                md = i;
                break;
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            result.mant[(((mant.length) - i) - 1)] = quotient[(md - i)];
        }
        result.exp = (((exp) - (divisor.exp)) + md) - (mant.length);
        result.sign = ((byte) (((sign) == (divisor.sign)) ? 1 : -1));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        if (md > ((mant.length) - 1)) {
            excp = result.round(quotient[(md - (mant.length))]);
        }else {
            excp = result.round(0);
        }
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp divide(int divisor) {
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (isNaN()) {
                return this;
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
                return newInstance(this);
            }
        }
        if (divisor == 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.sign = sign;
            result.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, getZero(), result);
            return result;
        }
        if ((divisor < 0) || (divisor >= (org.apache.commons.math3.dfp.Dfp.RADIX))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, result, result);
            return result;
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        int rl = 0;
        for (int i = (mant.length) - 1; i >= 0; i--) {
            final int r = (rl * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (result.mant[i]);
            final int rh = r / divisor;
            rl = r - (rh * divisor);
            result.mant[i] = rh;
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.shiftLeft();
            final int r = rl * (org.apache.commons.math3.dfp.Dfp.RADIX);
            final int rh = r / divisor;
            rl = r - (rh * divisor);
            result.mant[0] = rh;
        }
        final int excp = result.round(((rl * (org.apache.commons.math3.dfp.Dfp.RADIX)) / divisor));
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, result, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp reciprocal() {
        return field.getOne().divide(this);
    }

    public org.apache.commons.math3.dfp.Dfp sqrt() {
        if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
            return newInstance(this);
        }
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
                return newInstance(this);
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN)) {
                return newInstance(this);
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN)) {
                org.apache.commons.math3.dfp.Dfp result;
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(this);
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.SQRT_TRAP, null, result);
                return result;
            }
        }
        if ((sign) == (-1)) {
            org.apache.commons.math3.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        }
        org.apache.commons.math3.dfp.Dfp x = newInstance(this);
        if (((x.exp) < (-1)) || ((x.exp) > 1)) {
            x.exp = (this.exp) / 2;
        }
        switch ((x.mant[((mant.length) - 1)]) / 2000) {
            case 0 :
                x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
                break;
            case 2 :
                x.mant[((mant.length) - 1)] = 1500;
                break;
            case 3 :
                x.mant[((mant.length) - 1)] = 2200;
                break;
            default :
                x.mant[((mant.length) - 1)] = 3000;
        }
        org.apache.commons.math3.dfp.Dfp dx = newInstance(x);
        org.apache.commons.math3.dfp.Dfp px = getZero();
        org.apache.commons.math3.dfp.Dfp ppx = getZero();
        while (x.unequal(px)) {
            dx = newInstance(x);
            dx.sign = -1;
            dx = dx.add(this.divide(x));
            dx = dx.divide(2);
            ppx = px;
            px = x;
            x = x.add(dx);
            if (x.equals(ppx)) {
                break;
            }
            if ((dx.mant[((mant.length) - 1)]) == 0) {
                break;
            }
        } 
        return x;
    }

    @java.lang.Override
    public java.lang.String toString() {
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
                return (sign) < 0 ? org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING : org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING;
            }else {
                return org.apache.commons.math3.dfp.Dfp.NAN_STRING;
            }
        }
        if (((exp) > (mant.length)) || ((exp) < (-1))) {
            return dfp2sci();
        }
        return dfp2string();
    }

    protected java.lang.String dfp2sci() {
        char[] rawdigits = new char[(mant.length) * 4];
        char[] outputbuffer = new char[((mant.length) * 4) + 20];
        int p;
        int q;
        int e;
        int ae;
        int shf;
        p = 0;
        for (int i = (mant.length) - 1; i >= 0; i--) {
            rawdigits[(p++)] = ((char) (((mant[i]) / 1000) + '0'));
            rawdigits[(p++)] = ((char) ((((mant[i]) / 100) % 10) + '0'));
            rawdigits[(p++)] = ((char) ((((mant[i]) / 10) % 10) + '0'));
            rawdigits[(p++)] = ((char) (((mant[i]) % 10) + '0'));
        }
        for (p = 0; p < (rawdigits.length); p++) {
            if ((rawdigits[p]) != '0') {
                break;
            }
        }
        shf = p;
        q = 0;
        if ((sign) == (-1)) {
            outputbuffer[(q++)] = '-';
        }
        if (p != (rawdigits.length)) {
            outputbuffer[(q++)] = rawdigits[(p++)];
            outputbuffer[(q++)] = '.';
            while (p < (rawdigits.length)) {
                outputbuffer[(q++)] = rawdigits[(p++)];
            } 
        }else {
            outputbuffer[(q++)] = '0';
            outputbuffer[(q++)] = '.';
            outputbuffer[(q++)] = '0';
            outputbuffer[(q++)] = 'e';
            outputbuffer[(q++)] = '0';
            return new java.lang.String(outputbuffer, 0, 5);
        }
        outputbuffer[(q++)] = 'e';
        e = (((exp) * 4) - shf) - 1;
        ae = e;
        if (e < 0) {
            ae = -e;
        }
        for (p = 1000000000; p > ae; p /= 10) {
        }
        if (e < 0) {
            outputbuffer[(q++)] = '-';
        }
        while (p > 0) {
            outputbuffer[(q++)] = ((char) ((ae / p) + '0'));
            ae = ae % p;
            p = p / 10;
        } 
        return new java.lang.String(outputbuffer, 0, q);
    }

    protected java.lang.String dfp2string() {
        char[] buffer = new char[((mant.length) * 4) + 20];
        int p = 1;
        int q;
        int e = exp;
        boolean pointInserted = false;
        buffer[0] = ' ';
        if (e <= 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '.';
            pointInserted = true;
        }
        while (e < 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            e++;
        } 
        for (int i = (mant.length) - 1; i >= 0; i--) {
            buffer[(p++)] = ((char) (((mant[i]) / 1000) + '0'));
            buffer[(p++)] = ((char) ((((mant[i]) / 100) % 10) + '0'));
            buffer[(p++)] = ((char) ((((mant[i]) / 10) % 10) + '0'));
            buffer[(p++)] = ((char) (((mant[i]) % 10) + '0'));
            if ((--e) == 0) {
                buffer[(p++)] = '.';
                pointInserted = true;
            }
        }
        while (e > 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            e--;
        } 
        if (!pointInserted) {
            buffer[(p++)] = '.';
        }
        q = 1;
        while ((buffer[q]) == '0') {
            q++;
        } 
        if ((buffer[q]) == '.') {
            q--;
        }
        while ((buffer[(p - 1)]) == '0') {
            p--;
        } 
        if ((sign) < 0) {
            buffer[(--q)] = '-';
        }
        return new java.lang.String(buffer, q, (p - q));
    }

    public org.apache.commons.math3.dfp.Dfp dotrap(int type, java.lang.String what, org.apache.commons.math3.dfp.Dfp oper, org.apache.commons.math3.dfp.Dfp result) {
        org.apache.commons.math3.dfp.Dfp def = result;
        switch (type) {
            case org.apache.commons.math3.dfp.DfpField.FLAG_INVALID :
                def = newInstance(getZero());
                def.sign = result.sign;
                def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO :
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) != 0)) {
                    def = newInstance(getZero());
                    def.sign = ((byte) ((sign) * (oper.sign)));
                    def.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN))) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN))) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW :
                if (((result.exp) + (mant.length)) < (org.apache.commons.math3.dfp.Dfp.MIN_EXP)) {
                    def = newInstance(getZero());
                    def.sign = result.sign;
                }else {
                    def = newInstance(result);
                }
                result.exp = (result.exp) + (org.apache.commons.math3.dfp.Dfp.ERR_SCALE);
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW :
                result.exp = (result.exp) - (org.apache.commons.math3.dfp.Dfp.ERR_SCALE);
                def = newInstance(getZero());
                def.sign = result.sign;
                def.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                break;
            default :
                def = result;
                break;
        }
        return trap(type, what, oper, def, result);
    }

    protected org.apache.commons.math3.dfp.Dfp trap(int type, java.lang.String what, org.apache.commons.math3.dfp.Dfp oper, org.apache.commons.math3.dfp.Dfp def, org.apache.commons.math3.dfp.Dfp result) {
        return def;
    }

    public int classify() {
        return nans;
    }

    public static org.apache.commons.math3.dfp.Dfp copysign(final org.apache.commons.math3.dfp.Dfp x, final org.apache.commons.math3.dfp.Dfp y) {
        org.apache.commons.math3.dfp.Dfp result = x.newInstance(x);
        result.sign = y.sign;
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp nextAfter(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        boolean up = false;
        if (this.lessThan(x)) {
            up = true;
        }
        if ((org.apache.commons.math3.dfp.Dfp.compare(this, x)) == 0) {
            return newInstance(x);
        }
        if (lessThan(getZero())) {
            up = !up;
        }
        final org.apache.commons.math3.dfp.Dfp inc;
        org.apache.commons.math3.dfp.Dfp result;
        if (up) {
            inc = newInstance(getOne());
            inc.exp = ((this.exp) - (mant.length)) + 1;
            inc.sign = this.sign;
            if (this.equals(getZero())) {
                inc.exp = (org.apache.commons.math3.dfp.Dfp.MIN_EXP) - (mant.length);
            }
            result = add(inc);
        }else {
            inc = newInstance(getOne());
            inc.exp = this.exp;
            inc.sign = this.sign;
            if (this.equals(inc)) {
                inc.exp = (this.exp) - (mant.length);
            }else {
                inc.exp = ((this.exp) - (mant.length)) + 1;
            }
            if (this.equals(getZero())) {
                inc.exp = (org.apache.commons.math3.dfp.Dfp.MIN_EXP) - (mant.length);
            }
            result = this.subtract(inc);
        }
        if (((result.classify()) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((this.classify()) != (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        if ((result.equals(getZero())) && ((this.equals(getZero())) == false)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        return result;
    }

    public double toDouble() {
        if (isInfinite()) {
            if (lessThan(getZero())) {
                return java.lang.Double.NEGATIVE_INFINITY;
            }else {
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        org.apache.commons.math3.dfp.Dfp y = this;
        boolean negate = false;
        int cmp0 = org.apache.commons.math3.dfp.Dfp.compare(this, getZero());
        if (cmp0 == 0) {
            return (sign) < 0 ? -0.0 : +0.0;
        }else
            if (cmp0 < 0) {
                y = negate();
                negate = true;
            }

        int exponent = ((int) ((y.log10()) * 3.32));
        if (exponent < 0) {
            exponent--;
        }
        org.apache.commons.math3.dfp.Dfp tempDfp = org.apache.commons.math3.dfp.DfpMath.pow(getTwo(), exponent);
        while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
            tempDfp = tempDfp.multiply(2);
            exponent++;
        } 
        exponent--;
        y = y.divide(org.apache.commons.math3.dfp.DfpMath.pow(getTwo(), exponent));
        if (exponent > (-1023)) {
            y = y.subtract(getOne());
        }
        if (exponent < (-1074)) {
            return 0;
        }
        if (exponent > 1023) {
            return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
        }
        y = y.multiply(newInstance(4503599627370496L)).rint();
        java.lang.String str = y.toString();
        str = str.substring(0, ((str.length()) - 1));
        long mantissa = java.lang.Long.parseLong(str);
        if (mantissa == 4503599627370496L) {
            mantissa = 0;
            exponent++;
        }
        if (exponent <= (-1023)) {
            exponent--;
        }
        while (exponent < (-1023)) {
            exponent++;
            mantissa >>>= 1;
        } 
        long bits = mantissa | ((exponent + 1023L) << 52);
        double x = java.lang.Double.longBitsToDouble(bits);
        if (negate) {
            x = -x;
        }
        return x;
    }

    public double[] toSplitDouble() {
        double[] split = new double[2];
        long mask = -1073741824L;
        split[0] = java.lang.Double.longBitsToDouble(((java.lang.Double.doubleToLongBits(toDouble())) & mask));
        split[1] = subtract(newInstance(split[0])).toDouble();
        return split;
    }
}
00:28:35.844 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:28:35.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
00:28:35.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1584 which is executed by 33 tests
68623
00:28:36.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:36.496 [pool-763-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (454 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:36.778 [pool-762-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:1024: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
00:28:36.816 [pool-762-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Dfp implements org.apache.commons.math3.FieldElement<org.apache.commons.math3.dfp.Dfp> {
    public static final int RADIX = 10000;

    public static final int MIN_EXP = -32767;

    public static final int MAX_EXP = 32768;

    public static final int ERR_SCALE = 32760;

    public static final byte FINITE = 0;

    public static final byte INFINITE = 1;

    public static final byte SNAN = 2;

    public static final byte QNAN = 3;

    private static final java.lang.String NAN_STRING = "NaN";

    private static final java.lang.String POS_INFINITY_STRING = "Infinity";

    private static final java.lang.String NEG_INFINITY_STRING = "-Infinity";

    private static final java.lang.String ADD_TRAP = "add";

    private static final java.lang.String MULTIPLY_TRAP = "multiply";

    private static final java.lang.String DIVIDE_TRAP = "divide";

    private static final java.lang.String SQRT_TRAP = "sqrt";

    private static final java.lang.String ALIGN_TRAP = "align";

    private static final java.lang.String TRUNC_TRAP = "trunc";

    private static final java.lang.String NEXT_AFTER_TRAP = "nextAfter";

    private static final java.lang.String LESS_THAN_TRAP = "lessThan";

    private static final java.lang.String GREATER_THAN_TRAP = "greaterThan";

    private static final java.lang.String NEW_INSTANCE_TRAP = "newInstance";

    protected int[] mant;

    protected byte sign;

    protected int exp;

    protected byte nans;

    private final org.apache.commons.math3.dfp.DfpField field;

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, byte x) {
        this(field, ((long) (x)));
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, int x) {
        this(field, ((long) (x)));
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, long x) {
        mant = new int[field.getRadixDigits()];
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        boolean isLongMin = false;
        if (x == (java.lang.Long.MIN_VALUE)) {
            isLongMin = true;
            ++x;
        }
        if (x < 0) {
            sign = -1;
            x = -x;
        }else {
            sign = 1;
        }
        exp = 0;
        while (x != 0) {
            java.lang.System.arraycopy(mant, ((mant.length) - (exp)), mant, (((mant.length) - 1) - (exp)), exp);
            mant[((mant.length) - 1)] = ((int) (x % (org.apache.commons.math3.dfp.Dfp.RADIX)));
            x /= org.apache.commons.math3.dfp.Dfp.RADIX;
            (exp)++;
        } 
        if (isLongMin) {
            for (int i = 0; i < ((mant.length) - 1); i++) {
                if ((mant[i]) != 0) {
                    (mant[i])++;
                    break;
                }
            }
        }
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, double x) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        long bits = java.lang.Double.doubleToLongBits(x);
        long mantissa = bits & 4503599627370495L;
        int exponent = ((int) ((bits & 9218868437227405312L) >> 52)) - 1023;
        if (exponent == (-1023)) {
            if (x == 0) {
                if ((bits & -9223372036854775808L) != 0) {
                    sign = -1;
                }
                return;
            }
            exponent++;
            while ((mantissa & 4503599627370496L) == 0) {
                exponent--;
                mantissa <<= 1;
            } 
            mantissa &= 4503599627370495L;
        }
        if (exponent == 1024) {
            if (x != x) {
                sign = ((byte) (1));
                nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            }else
                if (x < 0) {
                    sign = ((byte) (-1));
                    nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }else {
                    sign = ((byte) (1));
                    nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }

            return;
        }
        org.apache.commons.math3.dfp.Dfp xdfp = new org.apache.commons.math3.dfp.Dfp(field, mantissa);
        xdfp = xdfp.divide(new org.apache.commons.math3.dfp.Dfp(field, 4503599627370496L)).add(field.getOne());
        xdfp = xdfp.multiply(org.apache.commons.math3.dfp.DfpMath.pow(field.getTwo(), exponent));
        if ((bits & -9223372036854775808L) != 0) {
            xdfp = xdfp.negate();
        }
        java.lang.System.arraycopy(xdfp.mant, 0, mant, 0, mant.length);
        sign = xdfp.sign;
        exp = xdfp.exp;
        nans = xdfp.nans;
    }

    public Dfp(final org.apache.commons.math3.dfp.Dfp d) {
        mant = d.mant.clone();
        sign = d.sign;
        exp = d.exp;
        nans = d.nans;
        field = d.field;
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, final java.lang.String s) {
        mant = new int[field.getRadixDigits()];
        sign = 1;
        exp = 0;
        nans = org.apache.commons.math3.dfp.Dfp.FINITE;
        this.field = field;
        boolean decimalFound = false;
        final int rsize = 4;
        final int offset = 4;
        final char[] striped = new char[((getRadixDigits()) * rsize) + (offset * 2)];
        if (s.equals(org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING)) {
            sign = ((byte) (1));
            nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            return;
        }
        if (s.equals(org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING)) {
            sign = ((byte) (-1));
            nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            return;
        }
        if (s.equals(org.apache.commons.math3.dfp.Dfp.NAN_STRING)) {
            sign = ((byte) (1));
            nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return;
        }
        int p = s.indexOf("e");
        if (p == (-1)) {
            p = s.indexOf("E");
        }
        final java.lang.String fpdecimal;
        int sciexp = 0;
        if (p != (-1)) {
            fpdecimal = s.substring(0, p);
            java.lang.String fpexp = s.substring((p + 1));
            boolean negative = false;
            for (int i = 0; i < (fpexp.length()); i++) {
                if ((fpexp.charAt(i)) == '-') {
                    negative = true;
                    continue;
                }
                if (((fpexp.charAt(i)) >= '0') && ((fpexp.charAt(i)) <= '9')) {
                    sciexp = ((sciexp * 10) + (fpexp.charAt(i))) - '0';
                }
            }
            if (negative) {
                sciexp = -sciexp;
            }
        }else {
            fpdecimal = s;
        }
        if ((fpdecimal.indexOf("-")) != (-1)) {
            sign = -1;
        }
        p = 0;
        int decimalPos = 0;
        for (; ;) {
            if (((fpdecimal.charAt(p)) >= '1') && ((fpdecimal.charAt(p)) <= '9')) {
                break;
            }
            if (decimalFound && ((fpdecimal.charAt(p)) == '0')) {
                decimalPos--;
            }
            if ((fpdecimal.charAt(p)) == '.') {
                decimalFound = true;
            }
            p++;
            if (p == (fpdecimal.length())) {
                break;
            }
        }
        int q = offset;
        striped[0] = '0';
        striped[1] = '0';
        striped[2] = '0';
        striped[3] = '0';
        int significantDigits = 0;
        for (; ;) {
            if (p == (fpdecimal.length())) {
                break;
            }
            if (q == ((((mant.length) * rsize) + offset) + 1)) {
                break;
            }
            if ((fpdecimal.charAt(p)) == '.') {
                decimalFound = true;
                decimalPos = significantDigits;
                p++;
                continue;
            }
            if (((fpdecimal.charAt(p)) < '0') || ((fpdecimal.charAt(p)) > '9')) {
                p++;
                continue;
            }
            striped[q] = fpdecimal.charAt(p);
            q++;
            p++;
            significantDigits++;
        }
        if (decimalFound && (q != offset)) {
            for (; ;) {
                q--;
                if (q == offset) {
                    break;
                }
                if ((striped[q]) == '0') {
                    significantDigits--;
                }else {
                    break;
                }
            }
        }
        if (decimalFound && (significantDigits == 0)) {
            decimalPos = 0;
        }
        if (!decimalFound) {
            decimalPos = q - offset;
        }
        q = offset;
        p = (significantDigits - 1) + offset;
        while (p > q) {
            if ((striped[p]) != '0') {
                break;
            }
            p--;
        } 
        int i = (((rsize * 100) - decimalPos) - (sciexp % rsize)) % rsize;
        q -= i;
        decimalPos += i;
        while ((p - q) < ((mant.length) * rsize)) {
            for (i = 0; i < rsize; i++) {
                striped[(++p)] = '0';
            }
        } 
        for (i = (mant.length) - 1; i >= 0; i--) {
            mant[i] = (((((striped[q]) - '0') * 1000) + (((striped[(q + 1)]) - '0') * 100)) + (((striped[(q + 2)]) - '0') * 10)) + ((striped[(q + 3)]) - '0');
            q += 4;
        }
        exp = (decimalPos + sciexp) / rsize;
        if (q < (striped.length)) {
            round((((striped[q]) - '0') * 1000));
        }
    }

    protected Dfp(final org.apache.commons.math3.dfp.DfpField field, final byte sign, final byte nans) {
        this.field = field;
        this.mant = new int[field.getRadixDigits()];
        this.sign = sign;
        this.exp = 0;
        this.nans = nans;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance() {
        return new org.apache.commons.math3.dfp.Dfp(getField());
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final byte x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final int x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final long x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final double x) {
        return new org.apache.commons.math3.dfp.Dfp(getField(), x);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final org.apache.commons.math3.dfp.Dfp d) {
        if ((field.getRadixDigits()) != (d.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP, d, result);
        }
        return new org.apache.commons.math3.dfp.Dfp(d);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final java.lang.String s) {
        return new org.apache.commons.math3.dfp.Dfp(field, s);
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(final byte sig, final byte code) {
        return field.newDfp(sig, code);
    }

    public org.apache.commons.math3.dfp.DfpField getField() {
        return field;
    }

    public int getRadixDigits() {
        return field.getRadixDigits();
    }

    public org.apache.commons.math3.dfp.Dfp getZero() {
        return field.getZero();
    }

    public org.apache.commons.math3.dfp.Dfp getOne() {
        return field.getOne();
    }

    public org.apache.commons.math3.dfp.Dfp getTwo() {
        return field.getTwo();
    }

    protected void shiftLeft() {
        for (int i = (mant.length) - 1; i > 0; i--) {
            mant[i] = mant[(i - 1)];
        }
        mant[0] = 0;
        (exp)--;
    }

    protected void shiftRight() {
        for (int i = 0; i < ((mant.length) - 1); i++) {
            mant[i] = mant[(i + 1)];
        }
        mant[((mant.length) - 1)] = 0;
        (exp)++;
    }

    protected int align(int e) {
        int lostdigit = 0;
        boolean inexact = false;
        int diff = (exp) - e;
        int adiff = diff;
        if (adiff < 0) {
            adiff = -adiff;
        }
        if (diff == 0) {
            return 0;
        }
        if (adiff > ((mant.length) + 1)) {
            java.util.Arrays.fill(mant, 0);
            exp = e;
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP, this, this);
            return 0;
        }
        for (int i = 0; i < adiff; i++) {
            if (diff < 0) {
                if (lostdigit != 0) {
                    inexact = true;
                }
                lostdigit = mant[0];
                shiftRight();
            }else {
                shiftLeft();
            }
        }
        if (inexact) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP, this, this);
        }
        return lostdigit;
    }

    public boolean lessThan(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, x, result);
            return false;
        }
        if ((isNaN()) || (x.isNaN())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, x, newInstance(getZero()));
            return false;
        }
        return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) < 0;
    }

    public boolean greaterThan(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP, x, result);
            return false;
        }
        if ((isNaN()) || (x.isNaN())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP, x, newInstance(getZero()));
            return false;
        }
        return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) > 0;
    }

    public boolean negativeOrNull() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) < 0) || (((mant[((mant.length) - 1)]) == 0) && (!(isInfinite())));
    }

    public boolean strictlyNegative() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) < 0) && (((mant[((mant.length) - 1)]) != 0) || (isInfinite()));
    }

    public boolean positiveOrNull() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) > 0) || (((mant[((mant.length) - 1)]) == 0) && (!(isInfinite())));
    }

    public boolean strictlyPositive() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((sign) > 0) && (((mant[((mant.length) - 1)]) != 0) || (isInfinite()));
    }

    public org.apache.commons.math3.dfp.Dfp abs() {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        result.sign = 1;
        return result;
    }

    public boolean isInfinite() {
        return (nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE);
    }

    public boolean isNaN() {
        return ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN));
    }

    public boolean isZero() {
        if (isNaN()) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP, this, newInstance(getZero()));
            return false;
        }
        return ((mant[((mant.length) - 1)]) == 0) && (!(isInfinite()));
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object other) {
        if (other instanceof org.apache.commons.math3.dfp.Dfp) {
            final org.apache.commons.math3.dfp.Dfp x = ((org.apache.commons.math3.dfp.Dfp) (other));
            if (((isNaN()) || (x.isNaN())) || ((field.getRadixDigits()) != (x.field.getRadixDigits()))) {
                return false;
            }
            return (org.apache.commons.math3.dfp.Dfp.compare(this, x)) == 0;
        }
        return false;
    }

    @java.lang.Override
    public int hashCode() {
        return (((17 + ((sign) << 8)) + ((nans) << 16)) + (exp)) + (java.util.Arrays.hashCode(mant));
    }

    public boolean unequal(final org.apache.commons.math3.dfp.Dfp x) {
        if (((isNaN()) || (x.isNaN())) || ((field.getRadixDigits()) != (x.field.getRadixDigits()))) {
            return false;
        }
        return (greaterThan(x)) || (lessThan(x));
    }

    private static int compare(final org.apache.commons.math3.dfp.Dfp a, final org.apache.commons.math3.dfp.Dfp b) {
        if (((((a.mant[((a.mant.length) - 1)]) == 0) && ((b.mant[((b.mant.length) - 1)]) == 0)) && ((a.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            return 0;
        }
        if ((a.sign) != (b.sign)) {
            if ((a.sign) == (-1)) {
                return -1;
            }else {
                return 1;
            }
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            return a.sign;
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            return -(b.sign);
        }
        if (((a.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((b.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            return 0;
        }
        if (((b.mant[((b.mant.length) - 1)]) != 0) && ((a.mant[((b.mant.length) - 1)]) != 0)) {
            if ((a.exp) < (b.exp)) {
                return -(a.sign);
            }
            if ((a.exp) > (b.exp)) {
                return a.sign;
            }
        }
        for (int i = (a.mant.length) - 1; i >= 0; i--) {
            if ((a.mant[i]) > (b.mant[i])) {
                return a.sign;
            }
            if ((a.mant[i]) < (b.mant[i])) {
                return -(a.sign);
            }
        }
        return 0;
    }

    public org.apache.commons.math3.dfp.Dfp rint() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN);
    }

    public org.apache.commons.math3.dfp.Dfp floor() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_FLOOR);
    }

    public org.apache.commons.math3.dfp.Dfp ceil() {
        return trunc(org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_CEIL);
    }

    public org.apache.commons.math3.dfp.Dfp remainder(final org.apache.commons.math3.dfp.Dfp d) {
        final org.apache.commons.math3.dfp.Dfp result = this.subtract(this.divide(d).rint().multiply(d));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.sign = sign;
        }
        return result;
    }

    protected org.apache.commons.math3.dfp.Dfp trunc(final org.apache.commons.math3.dfp.DfpField.RoundingMode rmode) {
        boolean changed = false;
        if (isNaN()) {
            return newInstance(this);
        }
        if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
            return newInstance(this);
        }
        if ((mant[((mant.length) - 1)]) == 0) {
            return newInstance(this);
        }
        if ((exp) < 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP, this, result);
            return result;
        }
        if ((exp) >= (mant.length)) {
            return newInstance(this);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        for (int i = 0; i < ((mant.length) - (result.exp)); i++) {
            changed |= (result.mant[i]) != 0;
            result.mant[i] = 0;
        }
        if (changed) {
            switch (rmode) {
                case ROUND_FLOOR :
                    if ((result.sign) == (-1)) {
                        result = result.add(newInstance((-1)));
                    }
                    break;
                case ROUND_CEIL :
                    if ((result.sign) == 1) {
                        result = result.add(getOne());
                    }
                    break;
                case ROUND_HALF_EVEN :
                default :
                    final org.apache.commons.math3.dfp.Dfp half = newInstance("0.5");
                    org.apache.commons.math3.dfp.Dfp a = subtract(result);
                    a.sign = 1;
                    if (a.greaterThan(half)) {
                        a = newInstance(getOne());
                        a.sign = sign;
                        result = result.add(a);
                    }
                    if (((a.equals(half)) && ((result.exp) > 0)) && (((result.mant[((mant.length) - (result.exp))]) & 1) != 0)) {
                        a = newInstance(getOne());
                        a.sign = sign;
                        result = result.add(a);
                    }
                    break;
            }
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP, this, result);
            return result;
        }
        return result;
    }

    public int intValue() {
        org.apache.commons.math3.dfp.Dfp rounded;
        int result = 0;
        rounded = rint();
        if (rounded.greaterThan(newInstance(2147483647))) {
            return 2147483647;
        }
        if (rounded.lessThan(newInstance(-2147483648))) {
            return -2147483648;
        }
        for (int i = (mant.length) - 1; i >= ((mant.length) - (rounded.exp)); i--) {
            result = (result * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (rounded.mant[i]);
        }
        if ((rounded.sign) == (-1)) {
            result = -result;
        }
        return result;
    }

    public int log10K() {
        return (exp) - 1;
    }

    public org.apache.commons.math3.dfp.Dfp power10K(final int e) {
        org.apache.commons.math3.dfp.Dfp d = newInstance(getOne());
        d.exp = e + 1;
        return d;
    }

    public int log10() {
        if ((mant[((mant.length) - 1)]) > 1000) {
            return ((exp) * 4) - 1;
        }
        if ((mant[((mant.length) - 1)]) > 100) {
            return ((exp) * 4) - 2;
        }
        if ((mant[((mant.length) - 1)]) > 10) {
            return ((exp) * 4) - 3;
        }
        return ((exp) * 4) - 4;
    }

    public org.apache.commons.math3.dfp.Dfp power10(final int e) {
        org.apache.commons.math3.dfp.Dfp d = newInstance(getOne());
        if (e >= 0) {
            d.exp = (e / 4) + 1;
        }else {
            d.exp = (e + 1) / 4;
        }
        switch (((e % 4) + 4) % 4) {
            case 0 :
                break;
            case 1 :
                d = d.multiply(10);
                break;
            case 2 :
                d = d.multiply(100);
                break;
            default :
                d = d.multiply(1000);
        }
        return d;
    }

    protected int complement(int extra) {
        extra = (org.apache.commons.math3.dfp.Dfp.RADIX) - extra;
        for (int i = 0; i < (mant.length); i++) {
            mant[i] = ((org.apache.commons.math3.dfp.Dfp.RADIX) - (mant[i])) - 1;
        }
        int rh = extra / (org.apache.commons.math3.dfp.Dfp.RADIX);
        extra = extra - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        for (int i = 0; i < (mant.length); i++) {
            final int r = (mant[i]) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        return extra;
    }

    public org.apache.commons.math3.dfp.Dfp add(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
        }
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((x.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (x.isNaN()) {
                return x;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                return this;
            }
            if (((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                return x;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) && ((sign) == (x.sign))) {
                return x;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) && ((sign) != (x.sign))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
                return result;
            }
        }
        org.apache.commons.math3.dfp.Dfp a = newInstance(this);
        org.apache.commons.math3.dfp.Dfp b = newInstance(x);
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        final byte asign = a.sign;
        final byte bsign = b.sign;
        a.sign = 1;
        b.sign = 1;
        byte rsign = bsign;
        if ((org.apache.commons.math3.dfp.Dfp.compare(a, b)) > 0) {
            rsign = asign;
        }
        if ((b.mant[((mant.length) - 1)]) == 0) {
            b.exp = a.exp;
        }
        if ((a.mant[((mant.length) - 1)]) == 0) {
            a.exp = b.exp;
        }
        int aextradigit = 0;
        int bextradigit = 0;
        if ((a.exp) < (b.exp)) {
            aextradigit = a.align(b.exp);
        }else {
            bextradigit = b.align(a.exp);
        }
        if (asign != bsign) {
            if (asign == rsign) {
                bextradigit = b.complement(bextradigit);
            }else {
                aextradigit = a.complement(aextradigit);
            }
        }
        int rh = 0;
        for (int i = 0; i < (mant.length); i++) {
            final int r = ((a.mant[i]) + (b.mant[i])) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            result.mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        result.exp = a.exp;
        result.sign = rsign;
        if ((rh != 0) && (asign == bsign)) {
            final int lostdigit = result.mant[0];
            result.shiftRight();
            result.mant[((mant.length) - 1)] = rh;
            final int excp = result.round(lostdigit);
            if (excp != 0) {
                result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            if ((result.mant[((mant.length) - 1)]) != 0) {
                break;
            }
            result.shiftLeft();
            if (i == 0) {
                result.mant[0] = aextradigit + bextradigit;
                aextradigit = 0;
                bextradigit = 0;
            }
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
            if (asign != bsign) {
                result.sign = 1;
            }
        }
        final int excp = result.round((aextradigit + bextradigit));
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.ADD_TRAP, x, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp negate() {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        result.sign = ((byte) (-(result.sign)));
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp subtract(final org.apache.commons.math3.dfp.Dfp x) {
        return add(x.negate());
    }

    protected int round(int n) {
        boolean inc = false;
        switch (field.getRoundingMode()) {
            case ROUND_DOWN :
                inc = false;
                break;
            case ROUND_UP :
                inc = n != 0;
                break;
            case ROUND_HALF_UP :
                inc = n >= 5000;
                break;
            case ROUND_HALF_DOWN :
                inc = n > 5000;
                break;
            case ROUND_HALF_EVEN :
                inc = (n > 5000) || ((n == 5000) && (((mant[0]) & 1) == 1));
                break;
            case ROUND_HALF_ODD :
                inc = (n > 5000) || ((n == 5000) && (((mant[0]) & 1) == 0));
                break;
            case ROUND_CEIL :
                inc = ((sign) == 1) && (n != 0);
                break;
            case ROUND_FLOOR :
            default :
                inc = ((sign) == (-1)) && (n != 0);
                break;
        }
        if (inc) {
            int rh = 1;
            for (int i = 0; i < (mant.length); i++) {
                final int r = (mant[i]) + rh;
                rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
            }
            if (rh != 0) {
                shiftRight();
                mant[((mant.length) - 1)] = rh;
            }
        }
        if ((exp) < (org.apache.commons.math3.dfp.Dfp.MIN_EXP)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW);
            return org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW;
        }
        if ((exp) > (org.apache.commons.math3.dfp.Dfp.MAX_EXP)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW);
            return org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW;
        }
        if (n != 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            return org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT;
        }
        return 0;
    }

    public org.apache.commons.math3.dfp.Dfp multiply(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((x.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (x.isNaN()) {
                return x;
            }
            if ((((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((x.mant[((mant.length) - 1)]) != 0)) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if ((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((mant[((mant.length) - 1)]) != 0)) {
                result = newInstance(x);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if (((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (x.sign)));
                return result;
            }
            if (((((x.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((mant[((mant.length) - 1)]) == 0)) || ((((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((x.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) && ((x.mant[((mant.length) - 1)]) == 0))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
                return result;
            }
        }
        int[] product = new int[(mant.length) * 2];
        for (int i = 0; i < (mant.length); i++) {
            int rh = 0;
            for (int j = 0; j < (mant.length); j++) {
                int r = (mant[i]) * (x.mant[j]);
                r = (r + (product[(i + j)])) + rh;
                rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                product[(i + j)] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
            }
            product[(i + (mant.length))] = rh;
        }
        int md = ((mant.length) * 2) - 1;
        for (int i = ((mant.length) * 2) - 1; i >= 0; i--) {
            if ((product[i]) != 0) {
                md = i;
                break;
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            result.mant[(((mant.length) - i) - 1)] = product[(md - i)];
        }
        result.exp = ((((exp) + (x.exp)) + md) - (2 * (mant.length))) + 1;
        result.sign = ((byte) (((sign) == (x.sign)) ? 1 : -1));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        final int excp;
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(169).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.QNAN",org.apache.commons.math3.dfp.Dfp.QNAN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.SNAN",org.apache.commons.math3.dfp.Dfp.SNAN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("((mant.length) - 1)",((mant.length) - 1));} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("result",result);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x.mant",x.mant);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.this.field",org.apache.commons.math3.dfp.Dfp.this.field);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x.exp",x.exp);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("md",md);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.this.sign",org.apache.commons.math3.dfp.Dfp.this.sign);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.this.nans",org.apache.commons.math3.dfp.Dfp.this.nans);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.NAN_STRING",org.apache.commons.math3.dfp.Dfp.NAN_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.INFINITE",org.apache.commons.math3.dfp.Dfp.INFINITE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.FINITE",org.apache.commons.math3.dfp.Dfp.FINITE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("product",product);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.MAX_EXP",org.apache.commons.math3.dfp.Dfp.MAX_EXP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.RADIX",org.apache.commons.math3.dfp.Dfp.RADIX);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("md > ((mant.length) - 1)",md > ((mant.length) - 1));} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x.nans",x.nans);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x.sign",x.sign);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.this.exp",org.apache.commons.math3.dfp.Dfp.this.exp);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("1",1);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.MIN_EXP",org.apache.commons.math3.dfp.Dfp.MIN_EXP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.SQRT_TRAP",org.apache.commons.math3.dfp.Dfp.SQRT_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x",x);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("x.field",x.field);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.ERR_SCALE",org.apache.commons.math3.dfp.Dfp.ERR_SCALE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.ADD_TRAP",org.apache.commons.math3.dfp.Dfp.ADD_TRAP);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.this.mant",org.apache.commons.math3.dfp.Dfp.this.mant);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectInput("org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(169).collectionEnds();
        }
        if (runtimeAngelicValue) if (md > ((mant.length) - 1)) {
            excp = result.round(product[(md - (mant.length))]);
        }else {
            excp = result.round(0);
        }
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, x, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp multiply(final int x) {
        return multiplyFast(x);
    }

    private org.apache.commons.math3.dfp.Dfp multiplyFast(final int x) {
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (isNaN()) {
                return this;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && (x != 0)) {
                result = newInstance(this);
                return result;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && (x == 0)) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, newInstance(getZero()), result);
                return result;
            }
        }
        if ((x < 0) || (x >= (org.apache.commons.math3.dfp.Dfp.RADIX))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, result, result);
            return result;
        }
        int rh = 0;
        for (int i = 0; i < (mant.length); i++) {
            final int r = ((mant[i]) * x) + rh;
            rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
            result.mant[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
        }
        int lostdigit = 0;
        if (rh != 0) {
            lostdigit = result.mant[0];
            result.shiftRight();
            result.mant[((mant.length) - 1)] = rh;
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        final int excp = result.round(lostdigit);
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP, result, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp divisor) {
        int[] dividend;
        int[] quotient;
        int[] remainder;
        int qd;
        int nsqd;
        int trial = 0;
        int minadj;
        boolean trialgood;
        int md = 0;
        int excp;
        if ((field.getRadixDigits()) != (divisor.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
        if (((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) || ((divisor.nans) != (org.apache.commons.math3.dfp.Dfp.FINITE))) {
            if (isNaN()) {
                return this;
            }
            if (divisor.isNaN()) {
                return divisor;
            }
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                result = newInstance(this);
                result.sign = ((byte) ((sign) * (divisor.sign)));
                return result;
            }
            if (((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE))) {
                result = newInstance(getZero());
                result.sign = ((byte) ((sign) * (divisor.sign)));
                return result;
            }
            if (((divisor.nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(getZero());
                result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
                return result;
            }
        }
        if ((divisor.mant[((mant.length) - 1)]) == 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO);
            result = newInstance(getZero());
            result.sign = ((byte) ((sign) * (divisor.sign)));
            result.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
            return result;
        }
        dividend = new int[(mant.length) + 1];
        quotient = new int[(mant.length) + 2];
        remainder = new int[(mant.length) + 1];
        dividend[mant.length] = 0;
        quotient[mant.length] = 0;
        quotient[((mant.length) + 1)] = 0;
        remainder[mant.length] = 0;
        for (int i = 0; i < (mant.length); i++) {
            dividend[i] = mant[i];
            quotient[i] = 0;
            remainder[i] = 0;
        }
        nsqd = 0;
        for (qd = (mant.length) + 1; qd >= 0; qd--) {
            final int divMsb = ((dividend[mant.length]) * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (dividend[((mant.length) - 1)]);
            int min = divMsb / ((divisor.mant[((mant.length) - 1)]) + 1);
            int max = (divMsb + 1) / (divisor.mant[((mant.length) - 1)]);
            trialgood = false;
            while (!trialgood) {
                trial = (min + max) / 2;
                int rh = 0;
                for (int i = 0; i < ((mant.length) + 1); i++) {
                    int dm = (i < (mant.length)) ? divisor.mant[i] : 0;
                    final int r = (dm * trial) + rh;
                    rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                    remainder[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
                }
                rh = 1;
                for (int i = 0; i < ((mant.length) + 1); i++) {
                    final int r = ((((org.apache.commons.math3.dfp.Dfp.RADIX) - 1) - (remainder[i])) + (dividend[i])) + rh;
                    rh = r / (org.apache.commons.math3.dfp.Dfp.RADIX);
                    remainder[i] = r - (rh * (org.apache.commons.math3.dfp.Dfp.RADIX));
                }
                if (rh == 0) {
                    max = trial - 1;
                    continue;
                }
                minadj = ((remainder[mant.length]) * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (remainder[((mant.length) - 1)]);
                minadj = minadj / ((divisor.mant[((mant.length) - 1)]) + 1);
                if (minadj >= 2) {
                    min = trial + minadj;
                    continue;
                }
                trialgood = false;
                for (int i = (mant.length) - 1; i >= 0; i--) {
                    if ((divisor.mant[i]) > (remainder[i])) {
                        trialgood = true;
                    }
                    if ((divisor.mant[i]) < (remainder[i])) {
                        break;
                    }
                }
                if ((remainder[mant.length]) != 0) {
                    trialgood = false;
                }
                if (trialgood == false) {
                    min = trial + 1;
                }
            } 
            quotient[qd] = trial;
            if ((trial != 0) || (nsqd != 0)) {
                nsqd++;
            }
            if (((field.getRoundingMode()) == (org.apache.commons.math3.dfp.DfpField.RoundingMode.ROUND_DOWN)) && (nsqd == (mant.length))) {
                break;
            }
            if (nsqd > (mant.length)) {
                break;
            }
            dividend[0] = 0;
            for (int i = 0; i < (mant.length); i++) {
                dividend[(i + 1)] = remainder[i];
            }
        }
        md = mant.length;
        for (int i = (mant.length) + 1; i >= 0; i--) {
            if ((quotient[i]) != 0) {
                md = i;
                break;
            }
        }
        for (int i = 0; i < (mant.length); i++) {
            result.mant[(((mant.length) - i) - 1)] = quotient[(md - i)];
        }
        result.exp = (((exp) - (divisor.exp)) + md) - (mant.length);
        result.sign = ((byte) (((sign) == (divisor.sign)) ? 1 : -1));
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.exp = 0;
        }
        if (md > ((mant.length) - 1)) {
            excp = result.round(quotient[(md - (mant.length))]);
        }else {
            excp = result.round(0);
        }
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, divisor, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp divide(int divisor) {
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (isNaN()) {
                return this;
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
                return newInstance(this);
            }
        }
        if (divisor == 0) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.sign = sign;
            result.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, getZero(), result);
            return result;
        }
        if ((divisor < 0) || (divisor >= (org.apache.commons.math3.dfp.Dfp.RADIX))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, result, result);
            return result;
        }
        org.apache.commons.math3.dfp.Dfp result = newInstance(this);
        int rl = 0;
        for (int i = (mant.length) - 1; i >= 0; i--) {
            final int r = (rl * (org.apache.commons.math3.dfp.Dfp.RADIX)) + (result.mant[i]);
            final int rh = r / divisor;
            rl = r - (rh * divisor);
            result.mant[i] = rh;
        }
        if ((result.mant[((mant.length) - 1)]) == 0) {
            result.shiftLeft();
            final int r = rl * (org.apache.commons.math3.dfp.Dfp.RADIX);
            final int rh = r / divisor;
            rl = r - (rh * divisor);
            result.mant[0] = rh;
        }
        final int excp = result.round(((rl * (org.apache.commons.math3.dfp.Dfp.RADIX)) / divisor));
        if (excp != 0) {
            result = dotrap(excp, org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP, result, result);
        }
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp reciprocal() {
        return field.getOne().divide(this);
    }

    public org.apache.commons.math3.dfp.Dfp sqrt() {
        if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
            return newInstance(this);
        }
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
                return newInstance(this);
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN)) {
                return newInstance(this);
            }
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN)) {
                org.apache.commons.math3.dfp.Dfp result;
                field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
                result = newInstance(this);
                result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.SQRT_TRAP, null, result);
                return result;
            }
        }
        if ((sign) == (-1)) {
            org.apache.commons.math3.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        }
        org.apache.commons.math3.dfp.Dfp x = newInstance(this);
        if (((x.exp) < (-1)) || ((x.exp) > 1)) {
            x.exp = (this.exp) / 2;
        }
        switch ((x.mant[((mant.length) - 1)]) / 2000) {
            case 0 :
                x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
                break;
            case 2 :
                x.mant[((mant.length) - 1)] = 1500;
                break;
            case 3 :
                x.mant[((mant.length) - 1)] = 2200;
                break;
            default :
                x.mant[((mant.length) - 1)] = 3000;
        }
        org.apache.commons.math3.dfp.Dfp dx = newInstance(x);
        org.apache.commons.math3.dfp.Dfp px = getZero();
        org.apache.commons.math3.dfp.Dfp ppx = getZero();
        while (x.unequal(px)) {
            dx = newInstance(x);
            dx.sign = -1;
            dx = dx.add(this.divide(x));
            dx = dx.divide(2);
            ppx = px;
            px = x;
            x = x.add(dx);
            if (x.equals(ppx)) {
                break;
            }
            if ((dx.mant[((mant.length) - 1)]) == 0) {
                break;
            }
        } 
        return x;
    }

    @java.lang.Override
    public java.lang.String toString() {
        if ((nans) != (org.apache.commons.math3.dfp.Dfp.FINITE)) {
            if ((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) {
                return (sign) < 0 ? org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING : org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING;
            }else {
                return org.apache.commons.math3.dfp.Dfp.NAN_STRING;
            }
        }
        if (((exp) > (mant.length)) || ((exp) < (-1))) {
            return dfp2sci();
        }
        return dfp2string();
    }

    protected java.lang.String dfp2sci() {
        char[] rawdigits = new char[(mant.length) * 4];
        char[] outputbuffer = new char[((mant.length) * 4) + 20];
        int p;
        int q;
        int e;
        int ae;
        int shf;
        p = 0;
        for (int i = (mant.length) - 1; i >= 0; i--) {
            rawdigits[(p++)] = ((char) (((mant[i]) / 1000) + '0'));
            rawdigits[(p++)] = ((char) ((((mant[i]) / 100) % 10) + '0'));
            rawdigits[(p++)] = ((char) ((((mant[i]) / 10) % 10) + '0'));
            rawdigits[(p++)] = ((char) (((mant[i]) % 10) + '0'));
        }
        for (p = 0; p < (rawdigits.length); p++) {
            if ((rawdigits[p]) != '0') {
                break;
            }
        }
        shf = p;
        q = 0;
        if ((sign) == (-1)) {
            outputbuffer[(q++)] = '-';
        }
        if (p != (rawdigits.length)) {
            outputbuffer[(q++)] = rawdigits[(p++)];
            outputbuffer[(q++)] = '.';
            while (p < (rawdigits.length)) {
                outputbuffer[(q++)] = rawdigits[(p++)];
            } 
        }else {
            outputbuffer[(q++)] = '0';
            outputbuffer[(q++)] = '.';
            outputbuffer[(q++)] = '0';
            outputbuffer[(q++)] = 'e';
            outputbuffer[(q++)] = '0';
            return new java.lang.String(outputbuffer, 0, 5);
        }
        outputbuffer[(q++)] = 'e';
        e = (((exp) * 4) - shf) - 1;
        ae = e;
        if (e < 0) {
            ae = -e;
        }
        for (p = 1000000000; p > ae; p /= 10) {
        }
        if (e < 0) {
            outputbuffer[(q++)] = '-';
        }
        while (p > 0) {
            outputbuffer[(q++)] = ((char) ((ae / p) + '0'));
            ae = ae % p;
            p = p / 10;
        } 
        return new java.lang.String(outputbuffer, 0, q);
    }

    protected java.lang.String dfp2string() {
        char[] buffer = new char[((mant.length) * 4) + 20];
        int p = 1;
        int q;
        int e = exp;
        boolean pointInserted = false;
        buffer[0] = ' ';
        if (e <= 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '.';
            pointInserted = true;
        }
        while (e < 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            e++;
        } 
        for (int i = (mant.length) - 1; i >= 0; i--) {
            buffer[(p++)] = ((char) (((mant[i]) / 1000) + '0'));
            buffer[(p++)] = ((char) ((((mant[i]) / 100) % 10) + '0'));
            buffer[(p++)] = ((char) ((((mant[i]) / 10) % 10) + '0'));
            buffer[(p++)] = ((char) (((mant[i]) % 10) + '0'));
            if ((--e) == 0) {
                buffer[(p++)] = '.';
                pointInserted = true;
            }
        }
        while (e > 0) {
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            buffer[(p++)] = '0';
            e--;
        } 
        if (!pointInserted) {
            buffer[(p++)] = '.';
        }
        q = 1;
        while ((buffer[q]) == '0') {
            q++;
        } 
        if ((buffer[q]) == '.') {
            q--;
        }
        while ((buffer[(p - 1)]) == '0') {
            p--;
        } 
        if ((sign) < 0) {
            buffer[(--q)] = '-';
        }
        return new java.lang.String(buffer, q, (p - q));
    }

    public org.apache.commons.math3.dfp.Dfp dotrap(int type, java.lang.String what, org.apache.commons.math3.dfp.Dfp oper, org.apache.commons.math3.dfp.Dfp result) {
        org.apache.commons.math3.dfp.Dfp def = result;
        switch (type) {
            case org.apache.commons.math3.dfp.DfpField.FLAG_INVALID :
                def = newInstance(getZero());
                def.sign = result.sign;
                def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO :
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) != 0)) {
                    def = newInstance(getZero());
                    def.sign = ((byte) ((sign) * (oper.sign)));
                    def.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.QNAN))) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                if (((nans) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) || ((nans) == (org.apache.commons.math3.dfp.Dfp.SNAN))) {
                    def = newInstance(getZero());
                    def.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
                }
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW :
                if (((result.exp) + (mant.length)) < (org.apache.commons.math3.dfp.Dfp.MIN_EXP)) {
                    def = newInstance(getZero());
                    def.sign = result.sign;
                }else {
                    def = newInstance(result);
                }
                result.exp = (result.exp) + (org.apache.commons.math3.dfp.Dfp.ERR_SCALE);
                break;
            case org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW :
                result.exp = (result.exp) - (org.apache.commons.math3.dfp.Dfp.ERR_SCALE);
                def = newInstance(getZero());
                def.sign = result.sign;
                def.nans = org.apache.commons.math3.dfp.Dfp.INFINITE;
                break;
            default :
                def = result;
                break;
        }
        return trap(type, what, oper, def, result);
    }

    protected org.apache.commons.math3.dfp.Dfp trap(int type, java.lang.String what, org.apache.commons.math3.dfp.Dfp oper, org.apache.commons.math3.dfp.Dfp def, org.apache.commons.math3.dfp.Dfp result) {
        return def;
    }

    public int classify() {
        return nans;
    }

    public static org.apache.commons.math3.dfp.Dfp copysign(final org.apache.commons.math3.dfp.Dfp x, final org.apache.commons.math3.dfp.Dfp y) {
        org.apache.commons.math3.dfp.Dfp result = x.newInstance(x);
        result.sign = y.sign;
        return result;
    }

    public org.apache.commons.math3.dfp.Dfp nextAfter(final org.apache.commons.math3.dfp.Dfp x) {
        if ((field.getRadixDigits()) != (x.field.getRadixDigits())) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID);
            final org.apache.commons.math3.dfp.Dfp result = newInstance(getZero());
            result.nans = org.apache.commons.math3.dfp.Dfp.QNAN;
            return dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INVALID, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        boolean up = false;
        if (this.lessThan(x)) {
            up = true;
        }
        if ((org.apache.commons.math3.dfp.Dfp.compare(this, x)) == 0) {
            return newInstance(x);
        }
        if (lessThan(getZero())) {
            up = !up;
        }
        final org.apache.commons.math3.dfp.Dfp inc;
        org.apache.commons.math3.dfp.Dfp result;
        if (up) {
            inc = newInstance(getOne());
            inc.exp = ((this.exp) - (mant.length)) + 1;
            inc.sign = this.sign;
            if (this.equals(getZero())) {
                inc.exp = (org.apache.commons.math3.dfp.Dfp.MIN_EXP) - (mant.length);
            }
            result = add(inc);
        }else {
            inc = newInstance(getOne());
            inc.exp = this.exp;
            inc.sign = this.sign;
            if (this.equals(inc)) {
                inc.exp = (this.exp) - (mant.length);
            }else {
                inc.exp = ((this.exp) - (mant.length)) + 1;
            }
            if (this.equals(getZero())) {
                inc.exp = (org.apache.commons.math3.dfp.Dfp.MIN_EXP) - (mant.length);
            }
            result = this.subtract(inc);
        }
        if (((result.classify()) == (org.apache.commons.math3.dfp.Dfp.INFINITE)) && ((this.classify()) != (org.apache.commons.math3.dfp.Dfp.INFINITE))) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        if ((result.equals(getZero())) && ((this.equals(getZero())) == false)) {
            field.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT);
            result = dotrap(org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP, x, result);
        }
        return result;
    }

    public double toDouble() {
        if (isInfinite()) {
            if (lessThan(getZero())) {
                return java.lang.Double.NEGATIVE_INFINITY;
            }else {
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (isNaN()) {
            return java.lang.Double.NaN;
        }
        org.apache.commons.math3.dfp.Dfp y = this;
        boolean negate = false;
        int cmp0 = org.apache.commons.math3.dfp.Dfp.compare(this, getZero());
        if (cmp0 == 0) {
            return (sign) < 0 ? -0.0 : +0.0;
        }else
            if (cmp0 < 0) {
                y = negate();
                negate = true;
            }

        int exponent = ((int) ((y.log10()) * 3.32));
        if (exponent < 0) {
            exponent--;
        }
        org.apache.commons.math3.dfp.Dfp tempDfp = org.apache.commons.math3.dfp.DfpMath.pow(getTwo(), exponent);
        while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
            tempDfp = tempDfp.multiply(2);
            exponent++;
        } 
        exponent--;
        y = y.divide(org.apache.commons.math3.dfp.DfpMath.pow(getTwo(), exponent));
        if (exponent > (-1023)) {
            y = y.subtract(getOne());
        }
        if (exponent < (-1074)) {
            return 0;
        }
        if (exponent > 1023) {
            return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
        }
        y = y.multiply(newInstance(4503599627370496L)).rint();
        java.lang.String str = y.toString();
        str = str.substring(0, ((str.length()) - 1));
        long mantissa = java.lang.Long.parseLong(str);
        if (mantissa == 4503599627370496L) {
            mantissa = 0;
            exponent++;
        }
        if (exponent <= (-1023)) {
            exponent--;
        }
        while (exponent < (-1023)) {
            exponent++;
            mantissa >>>= 1;
        } 
        long bits = mantissa | ((exponent + 1023L) << 52);
        double x = java.lang.Double.longBitsToDouble(bits);
        if (negate) {
            x = -x;
        }
        return x;
    }

    public double[] toSplitDouble() {
        double[] split = new double[2];
        long mask = -1073741824L;
        split[0] = java.lang.Double.longBitsToDouble(((java.lang.Double.doubleToLongBits(toDouble())) & mask));
        split[1] = subtract(newInstance(split[0])).toDouble();
        return split;
    }
}
00:28:36.817 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:28:36.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:37.310 [pool-765-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (486 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:38.031 [pool-766-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (434 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:38.035 [pool-767-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:38.035 [pool-764-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:38.035 [pool-764-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:38.035 [pool-764-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1584.
00:28:38.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
00:28:38.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1578 which is executed by 33 tests
68623
00:28:38.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:38.654 [pool-769-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:39.346 [pool-770-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (406 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:39.349 [pool-771-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:39.349 [pool-768-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:39.349 [pool-768-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:39.349 [pool-768-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1578.
00:28:39.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:39.891 [pool-773-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (535 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:40.571 [pool-774-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (393 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #1 x = 0.0001 flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:40.572 [pool-775-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #1 x = 0.0001 flags = 0]
java.lang.AssertionError: assersion failed Multiply #1 x = 0.0001 flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:758)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:40.573 [pool-772-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:40.573 [pool-772-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #1 x = 0.0001 flags = 0]
00:28:40.573 [pool-772-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1578.
00:28:40.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
00:28:40.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1576 which is executed by 33 tests
68623
00:28:40.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:41.200 [pool-777-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (443 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #3 x = 1. flags = 0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:766)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:41.885 [pool-778-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (399 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #3 x = 1. flags = 0]
java.lang.AssertionError: assersion failed Multiply #3 x = 1. flags = 0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:766)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:41.888 [pool-779-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:41.888 [pool-776-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #3 x = 1. flags = 0]
00:28:41.888 [pool-776-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): assersion failed Multiply #37 x = NaN flags = 1]
00:28:41.888 [pool-776-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1576.
00:28:41.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
00:28:41.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1575 which is executed by 33 tests
68623
00:28:42.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:42.542 [pool-781-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (455 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:221)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:47.672 [pool-782-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4845 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:221)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:221)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:47.684 [pool-783-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:221)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

00:28:47.684 [pool-780-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:47.684 [pool-780-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:47.684 [pool-780-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1575.
00:28:47.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
00:28:47.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1571 which is executed by 33 tests
68623
00:28:47.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:48.314 [pool-785-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (447 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:48.696 [pool-786-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (94 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:48.698 [pool-787-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

00:28:48.698 [pool-784-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:48.698 [pool-784-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:48.698 [pool-784-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1571.
00:28:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
00:28:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1570 which is executed by 33 tests
68623
00:28:48.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:49.315 [pool-789-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (434 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:49.642 [pool-790-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:49.643 [pool-791-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:217)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

00:28:49.644 [pool-788-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:49.644 [pool-788-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:49.644 [pool-788-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1570.
00:28:49.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
00:28:49.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1565 which is executed by 33 tests
68623
00:28:49.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:50.294 [pool-793-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (465 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.dfp.Dfp.multiply(Dfp.java:1010)
    at org.apache.commons.math3.dfp.DfpField.computePi(DfpField.java:626)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:594)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:50.665 [pool-794-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.dfp.Dfp.multiply(Dfp.java:1010)
    at org.apache.commons.math3.dfp.DfpField.computePi(DfpField.java:626)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:594)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:171)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:216)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:50.667 [pool-795-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:171)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:216)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:28:50.667 [pool-792-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): -1]
00:28:50.667 [pool-792-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): null]
00:28:50.667 [pool-792-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1565.
00:28:50.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
00:28:50.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1564 which is executed by 33 tests
68623
00:28:50.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:51.303 [pool-797-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (453 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:219)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:54.168 [pool-798-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2578 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:219)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:219)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)
00:28:54.175 [pool-799-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:219)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.dfp.DfpTest.setUp(DfpTest.java:39)

00:28:54.175 [pool-796-thread-1] DEBUG tests.output - Failing tests with false: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:54.175 [pool-796-thread-1] DEBUG tests.output - Failing tests with true: 
[testMultiply(org.apache.commons.math3.dfp.DfpTest): String index out of range: 0]
00:28:54.175 [pool-796-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1564.
00:28:54.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
00:28:54.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1563 which is executed by 33 tests
68623
00:28:54.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:28:54.809 [pool-801-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (452 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:32:47.746 [pool-800-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:33:22.748 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:33:22.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.OutOfMemoryError: GC overhead limit exceeded
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:19)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.dfp.Dfp.multiply(Dfp.java:1001)
    at org.apache.commons.math3.dfp.DfpField.computeExp(DfpField.java:660)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:595)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)
00:33:59.285 [pool-802-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (304147 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[GC overhead limit exceeded]
java.lang.OutOfMemoryError: GC overhead limit exceeded    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:19)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.dfp.Dfp.multiply(Dfp.java:1001)
    at org.apache.commons.math3.dfp.DfpField.computeExp(DfpField.java:660)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:595)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)

java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.OutOfMemoryError: GC overhead limit exceeded
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:323)
    at org.apache.commons.math3.dfp.Dfp.newInstance(Dfp.java:604)
    at org.apache.commons.math3.dfp.Dfp.add(Dfp.java:1297)
    at org.apache.commons.math3.dfp.DfpField.computeLn(DfpField.java:747)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:596)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)
00:34:29.539 [pool-804-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (66783 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 2
~ testMultiply(org.apache.commons.math3.dfp.DfpTest)
[assersion failed Multiply #37 x = NaN flags = 1]
java.lang.AssertionError: assersion failed Multiply #37 x = NaN flags = 1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)
    at org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testIssue567(org.apache.commons.math3.dfp.DfpTest)
[GC overhead limit exceeded]
java.lang.OutOfMemoryError: GC overhead limit exceeded    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:323)
    at org.apache.commons.math3.dfp.Dfp.newInstance(Dfp.java:604)
    at org.apache.commons.math3.dfp.Dfp.add(Dfp.java:1297)
    at org.apache.commons.math3.dfp.DfpField.computeLn(DfpField.java:747)
    at org.apache.commons.math3.dfp.DfpField.computeStringConstants(DfpField.java:596)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:208)

00:34:56.411 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
00:34:56.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
00:34:56.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1562 which is executed by 33 tests
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at fr.inria.lille.repair.Main.main(Main.java:106)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.lang.StringCoding$StringEncoder.encode(StringCoding.java:300)
	at java.lang.StringCoding.encode(StringCoding.java:344)
	at java.lang.String.getBytes(String.java:918)
	at java.io.UnixFileSystem.getBooleanAttributes0(Native Method)
	at java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:242)
	at java.io.File.isFile(File.java:882)
	at spoon.support.compiler.FileSystemFolder.getSubFolders(FileSystemFolder.java:86)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:113)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.StandardEnvironment.verifySourceClasspath(StandardEnvironment.java:444)
	at spoon.support.StandardEnvironment.setSourceClasspath(StandardEnvironment.java:428)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.setSourceClasspath(JDTBasedSpoonCompiler.java:321)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:47)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:61)
	at fr.inria.lille.commons.spoon.SpoonedClass.<init>(SpoonedClass.java:14)
	at fr.inria.lille.commons.spoon.SpoonedProject.forked(SpoonedProject.java:47)
	at fr.inria.lille.repair.nopol.NoPol.runOnStatement(NoPol.java:222)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:213)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:154)
	at fr.inria.lille.repair.Main$1.call(Main.java:101)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic> [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < cocospoon|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

  [(-m|--mode) <repair|ranking>]
        Define the mode of execution. (default: repair)

  (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic>
        The repair type (example fixing only conditions, or adding
        precondition). REQUIRED OPTION (default: condition)

  [(-o|--oracle) <angelic|symbolic>]
        Define the oracle (only used with repair mode). (default: angelic)

  [(-y|--synthesis) <smt|dynamoth>]
        Define the patch synthesis. (default: smt)

  [(-l|--solver) <z3|cvc4>]
        Define the solver (only used with smt synthesis). (default: z3)

  [(-p|--solver-path) <solverPath>]
        Define the solver binary path (only used with smt synthesis).

  (-s|--source) source1:source2:...:sourceN 
        Define the path to the source code of the project.

  (-c|--classpath) <classpath>
        Define the classpath of the project.

  [(-t|--test) test1:test2:...:testN ]
        Define the tests of the project (both failing and passing),
        fully-qualified, separated with ':' (even if the classpath contains
        other tests, only those are considered.

  [--complianceLevel <complianceLevel>]
        The compliance level of the project. (default: 7)

  [--maxTime <maxTime>]
        The maximum time execution in minute for the whole execution of
        Nopol.(default: 10)

  [--maxTimeType <maxTimeType>]
        The maximum time execution in minute for one type of patch. (default: 5)

  [(-z|--flocal) < cocospoon|dumb|gzoltar>]
        Define the fault localizer to be used. (default: gzoltar)

  [--output <outputFolder>]
        Define the location where the patches will be saved. (default: .)

  [--json[:<outputJson>]]
        Output a json file in the current working directory.

Command exited with non-zero status 255
8921.54user 46.01system 30:27.47elapsed 490%CPU (0avgtext+0avgdata 4743968maxresident)k
50856inputs+20448outputs (4major+1776923minor)pagefaults 0swaps


Node: petitprince-16.luxembourg.grid5000.fr



Date: Thu Nov 29 00:35:24 EST 2018

