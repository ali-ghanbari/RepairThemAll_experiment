{
  "repair_end": "2018-12-02 17:01:32.844878", 
  "repair_begin": "2018-12-02 16:44:12.668911", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 109, 
          "faulty": "return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));", 
          "type": "InsertBefore", 
          "seed": "setMean(mean);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "return ((Double)getArguments()[0]).doubleValue();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 93, 
          "faulty": "if (sd <= 0.0) {\n  throw new IllegalArgumentException(\"Standard deviation must be positive.\");\n}", 
          "type": "InsertBefore", 
          "seed": "this.mean=mean;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1770/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:01:30.642940579 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 10:44:03.496521833 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1770/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:01:30.642940579 -0500\n@@ -90,7 +90,8 @@\n      * @throws IllegalArgumentException if <code>sd</code> is not positive.\n      */\n     public void setStandardDeviation(double sd) {\n-        if (sd <= 0.0) {\n+        this.mean = mean;\n+\t\tif (sd <= 0.0) {\n             throw new IllegalArgumentException(\n                 \"Standard deviation must be positive.\");\n         }       \n@@ -106,7 +107,8 @@\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n     public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n+            setMean(mean);\n+\t\t\treturn 0.5 * (1.0 + Erf.erf((x - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n     }\n     \n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:44:01.080521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1770/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 11:01:30.646940587 -0500\n@@ -264,10 +264,6 @@\n     public void printStackTrace(PrintWriter out) {\n         synchronized (out) {\n             super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n-                out.print(\"Caused by: \");\n-                rootCause.printStackTrace(out);\n-            }\n         }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "InsertBefore", 
          "seed": "boolean flag=false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1702/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:00:53.130863546 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:44:01.080521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1702/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 11:00:53.130863546 -0500\n@@ -264,7 +264,8 @@\n     public void printStackTrace(PrintWriter out) {\n         synchronized (out) {\n             super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n+            boolean flag = false;\n+\t\t\tif (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n                 out.print(\"Caused by: \");\n                 rootCause.printStackTrace(out);\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "return ((Double)getArguments()[0]).doubleValue();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 109, 
          "faulty": "return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));", 
          "type": "InsertBefore", 
          "seed": "setMean(mean);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "return ((Double)getArguments()[0]).doubleValue();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1581/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:59:50.894735668 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 10:44:03.496521833 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1581/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 10:59:50.910735701 -0500\n@@ -106,7 +106,8 @@\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n     public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n+            setMean(mean);\n+\t\t\treturn 0.5 * (1.0 + Erf.erf((x - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n     }\n     \n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:44:01.080521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1581/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:59:50.910735701 -0500\n@@ -264,10 +264,6 @@\n     public void printStackTrace(PrintWriter out) {\n         synchronized (out) {\n             super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n-                out.print(\"Caused by: \");\n-                rootCause.printStackTrace(out);\n-            }\n         }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "return ((Double)getArguments()[0]).doubleValue();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "this.pattern=pattern;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 266, 
          "faulty": "super.printStackTrace(out);", 
          "type": "Replace", 
          "seed": "synchronized (out) {\n  super.printStackTrace(out);\n  if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n    out.print(\"Caused by: \");\n    rootCause.printStackTrace(out);\n  }\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "double g=607.0 / 128.0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1755/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:01:18.310915257 -0500\n@@ -177,7 +177,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n+\t\t\t\tdouble g = 607.0 / 128.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:44:01.080521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1755/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 11:01:18.314915266 -0500\n@@ -263,11 +263,13 @@\n      */\n     public void printStackTrace(PrintWriter out) {\n         synchronized (out) {\n-            super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n-                out.print(\"Caused by: \");\n-                rootCause.printStackTrace(out);\n-            }\n+            synchronized (out) {\n+\t\t\t\tsuper.printStackTrace(out);\n+\t\t\t\tif (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n+\t\t\t\t\tout.print(\"Caused by: \");\n+\t\t\t\t\trootCause.printStackTrace(out);\n+\t\t\t\t}\n+\t\t\t}\n         }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 109, 
          "faulty": "return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));", 
          "type": "InsertBefore", 
          "seed": "setMean(mean);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1667/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:00:31.230818559 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 10:44:03.496521833 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1667/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:00:31.230818559 -0500\n@@ -106,7 +106,8 @@\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n     public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n+            setMean(mean);\n+\t\t\treturn 0.5 * (1.0 + Erf.erf((x - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n     }\n     \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1712/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:00:57.478872476 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 267, 
          "faulty": "if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n  out.print(\"Caused by: \");\n  rootCause.printStackTrace(out);\n}", 
          "type": "Delete", 
          "seed": "return ((Double)getArguments()[0]).doubleValue();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 180, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "ret=1.0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 10:44:01.108521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1609/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:00:03.834762265 -0500\n@@ -177,7 +177,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 1.0;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 10:44:01.080521889 -0500\n+++ /tmp/GenProg_Defects4J_Math_103/patches_zr8r/Patch_1609/patched/tmp/GenProg_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java\t2018-12-02 11:00:03.838762274 -0500\n@@ -264,10 +264,6 @@\n     public void printStackTrace(PrintWriter out) {\n         synchronized (out) {\n             super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n-                out.print(\"Caused by: \");\n-                rootCause.printStackTrace(out);\n-            }\n         }\n     }\n \n\n\n"
    }
  ]
}