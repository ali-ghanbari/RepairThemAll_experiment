{
  "repair_end": "2018-12-02 17:19:00.416652", 
  "repair_begin": "2018-12-02 17:08:50.217142", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_825/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:57.272557911 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_825/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:57.276557928 -0500\n@@ -86,21 +86,16 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_719/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:57.564330485 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_719/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:57.568330500 -0500\n@@ -86,21 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_711/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:53.124313612 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,14 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = Double.NEGATIVE_INFINITY;\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_711/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:53.124313612 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_711/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:53.128313627 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_711/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:53.128313627 -0500\n@@ -86,22 +86,63 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_484/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:33.475786517 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_484/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:33.479786532 -0500\n@@ -86,21 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "setProbabilityOfSuccess(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_732/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:03.764354057 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -221,7 +221,11 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = Double.NEGATIVE_INFINITY;\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_732/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:03.768354072 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_732/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:03.768354072 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_732/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:03.768354072 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,8 +102,15 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_374/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:20.111367024 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_374/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:20.111367024 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_374/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:20.111367024 -0500\n@@ -86,21 +86,29 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_303/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:32.690648667 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_303/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:32.690648667 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_303/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:32.690648667 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_303/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:32.694648724 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_585/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:16:42.264045194 -0500\n@@ -178,7 +178,7 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                return digamma(x + 1) - 1 / x;\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_585/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:42.264045194 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_585/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:42.264045194 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_585/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:42.268045209 -0500\n@@ -86,21 +86,33 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "return digamma(x + 1) - 1 / x;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_673/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:32.876236741 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_673/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:32.876236741 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_673/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:32.880236756 -0500\n@@ -86,22 +86,50 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_72/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:03.865546134 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_72/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:03.865546134 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_72/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:03.869546134 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_611/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:56.708099764 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,11 +222,19 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p > .5) {\n+\t\t\tret = getMean() + getStandardDeviation();\n+\t\t} else {\n+\t\t\tret = getMean();\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_611/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:56.712099779 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_611/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:56.712099779 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_611/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:56.712099779 -0500\n@@ -86,22 +86,38 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_294/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:28.270586526 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_294/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:28.274586587 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_294/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:28.274586587 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_294/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:28.274586587 -0500\n@@ -100,7 +100,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_437/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:02.583671104 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_437/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:02.587671120 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double inv = 1 / (x * x);\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_437/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:02.587671120 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_437/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:02.587671120 -0500\n@@ -86,17 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double inv=1 / (x * x);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_641/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:12.996161394 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_641/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:12.996161394 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_641/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:12.996161394 -0500\n@@ -86,21 +86,28 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "double n=getNumeratorDegreesOfFreedom();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_203/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:35.949544001 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_203/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:35.949544001 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_203/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:35.949544001 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_629/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:06.808137969 -0500\n@@ -226,6 +226,11 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p > .5) {\n+\t\t\tret = getMean() + getStandardDeviation();\n+\t\t} else {\n+\t\t\tret = getMean();\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_629/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:06.808137969 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_629/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:06.808137969 -0500\n@@ -86,21 +86,24 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return getGamma().getAlpha() * 2.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_459/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:13.999713693 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_459/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:14.003713708 -0500\n@@ -86,21 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_550/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:23.883975871 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_550/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:23.883975871 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_550/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:23.887975887 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_550/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:23.887975887 -0500\n@@ -86,21 +86,43 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_537/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:17.251950893 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_537/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:17.251950893 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_537/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:17.255950908 -0500\n@@ -186,7 +186,8 @@\n         int numIterations = 0 ;\n     \n         do {\n-            a = Math.max(a - 1.0, lowerBound);\n+            int i = 0;\n+\t\t\ta = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_537/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:17.255950908 -0500\n@@ -86,21 +86,39 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 189, 
          "faulty": "a=Math.max(a - 1.0,lowerBound);", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_142/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:52.649545004 -0500\n@@ -200,7 +200,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_142/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:52.649545004 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_142/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:52.653545004 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_142/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:52.653545004 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:51.189545038 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -220,11 +221,16 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p == 1) {\n+\t\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:51.189545038 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:51.189545038 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "UnivariateRealSolver solver=LazyHolder.FACTORY.newDefaultSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_767/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:20.896419245 -0500\n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,11 +223,24 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_767/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:20.900419260 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_767/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:20.900419260 -0500\n@@ -86,22 +86,68 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/MathException.java", 
          "line": 172, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return getUpperDomain(getSampleSize(),getNumberOfSuccesses());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_574/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:35.936021311 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_574/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:35.940021327 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_39/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:10:42.229546635 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_39/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:10:42.233546635 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_39/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:10:42.233546635 -0500\n@@ -86,22 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_557/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:28.179992062 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_557/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:28.179992062 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_557/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:28.179992062 -0500\n@@ -188,7 +188,8 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_557/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:28.183992077 -0500\n@@ -86,21 +86,31 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "UnivariateRealSolver solver=LazyHolder.FACTORY.newDefaultSolver();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_107/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:27.481545587 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_107/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:27.485545587 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_107/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:27.485545587 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_256/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:05.934147918 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_256/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:05.938148021 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_473/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:26.971762176 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_473/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:26.975762190 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_473/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:26.975762190 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_608/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:55.308094471 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,11 +222,19 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p > .5) {\n+\t\t\tret = getMean() + getStandardDeviation();\n+\t\t} else {\n+\t\t\tret = getMean();\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_608/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:55.308094471 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_608/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:55.312094486 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_608/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:55.312094486 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 132, 
          "faulty": "return 1.0d;", 
          "type": "Delete", 
          "seed": "int k=getSampleSize();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_660/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:24.188203796 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +201,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -221,7 +223,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_660/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:24.192203811 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_660/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:24.192203811 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_660/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:24.192203811 -0500\n@@ -86,22 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_638/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:11.488155684 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_638/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:11.492155699 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_638/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:11.492155699 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_638/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:11.492155699 -0500\n@@ -86,22 +86,35 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_309/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:35.550685856 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_309/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:35.550685856 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_309/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:35.554685907 -0500\n@@ -80,7 +80,10 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n@@ -100,7 +103,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_709/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:52.428310968 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -221,7 +221,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_709/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:52.432310983 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_709/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:52.432310983 -0500\n@@ -86,22 +86,33 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 132, 
          "faulty": "return 1.0d;", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_265/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:10.286254300 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_265/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:10.286254300 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_265/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:10.290254391 -0500\n@@ -97,9 +97,6 @@\n             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n                 return lowerBound;\n             }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "setMean(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_261/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:08.742217793 -0500\n@@ -226,6 +226,7 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = getMean();\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_261/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:08.746217889 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_261/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:08.750217984 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_261/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:08.750217984 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=getMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_285/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:22.210490687 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_285/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:22.214490754 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_285/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:22.214490754 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_693/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:43.592277408 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,11 +222,18 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_693/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:43.592277408 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_693/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:43.596277423 -0500\n@@ -86,22 +86,42 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_305/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:33.454658834 -0500\n@@ -200,7 +200,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_305/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:33.458658885 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_305/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:33.458658885 -0500\n@@ -196,12 +196,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_305/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:33.458658885 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_220/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:45.817543773 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_220/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:45.817543773 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_220/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:45.817543773 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_703/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:48.608296456 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -221,7 +221,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_703/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:48.612296471 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_703/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:48.612296471 -0500\n@@ -86,22 +86,33 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_476/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:28.379767442 -0500\n@@ -181,7 +181,8 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = Double.NEGATIVE_INFINITY;\n+\t\treturn ret;\n     }\n \n     /**\n@@ -200,7 +201,14 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            if (p < .5) {\n+\t\t\t\tret = getMean() - getStandardDeviation();\n+\t\t\t} else if (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_476/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:28.379767442 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_476/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:28.387767473 -0500\n@@ -188,7 +188,17 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tif (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +206,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_476/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:28.387767473 -0500\n@@ -86,22 +86,20 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=getMean() - getStandardDeviation();\n}\n else if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_750/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:12.992389159 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_750/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:12.996389174 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_750/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:12.996389174 -0500\n@@ -86,22 +86,26 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_316/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:38.666723367 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_316/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:38.666723367 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_316/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:38.670723414 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_316/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:38.670723414 -0500\n@@ -80,27 +80,26 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_454/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:11.055702703 -0500\n@@ -181,7 +181,8 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = Double.NEGATIVE_INFINITY;\n+\t\treturn ret;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_454/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:11.055702703 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_454/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:11.059702719 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double n = 0.0;\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_454/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:11.059702719 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            int iterationCount = 0;\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_454/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:11.059702719 -0500\n@@ -86,22 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double n=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_668/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:29.976225741 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,13 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_668/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:29.976225741 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_668/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:29.976225741 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_668/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:29.980225757 -0500\n@@ -86,22 +86,25 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_496/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:45.251830646 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_496/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:45.255830660 -0500\n@@ -86,21 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_802/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:43.708506167 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_802/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:43.708506167 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_802/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:43.712506183 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_802/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:43.712506183 -0500\n@@ -86,7 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,8 +108,26 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_325/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:44.710789540 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_325/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:44.714789584 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_325/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:44.714789584 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_440/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:03.979676309 -0500\n@@ -178,7 +178,9 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tsum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_440/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:03.983676322 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_440/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:03.983676322 -0500\n@@ -86,21 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_126/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:44.541545192 -0500\n@@ -128,11 +128,13 @@\n         } catch (MaxIterationsExceededException ex) {\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n-            } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+            } else if (x < (mean - 20 * standardDeviation)) {\n+\t\t\t\treturn 0.0d;\n+\t\t\t} else if (x > (mean + 20 * standardDeviation)) {\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_126/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:44.545545192 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_126/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:44.545545192 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_511/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:54.583865663 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_511/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:54.583865663 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_511/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:54.587865678 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_511/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:54.587865678 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,7 +102,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_353/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:07.351210175 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_353/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:07.351210175 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_353/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:07.351210175 -0500\n@@ -86,21 +86,17 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_571/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:34.548016075 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_571/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:34.548016075 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_571/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:34.548016075 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_571/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:34.552016091 -0500\n@@ -86,22 +86,38 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_272/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:14.642348755 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_272/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:14.642348755 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_272/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:14.642348755 -0500\n@@ -77,7 +77,10 @@\n             }\n         };\n               \n-        // Try to bracket root, test domain endoints if this fails     \n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\t// Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n         double[] bracket = null;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 81, 
          "faulty": "double lowerBound=getDomainLowerBound(p);", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_622/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:02.968123439 -0500\n@@ -226,6 +226,10 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_622/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:02.968123439 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_622/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:02.972123454 -0500\n@@ -100,7 +100,19 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_283/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:21.466478119 -0500\n@@ -200,7 +200,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_283/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:21.470478187 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_283/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:21.470478187 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_283/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:21.470478187 -0500\n@@ -80,28 +80,19 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_569/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:33.780013178 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_569/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:33.780013178 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_569/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:33.780013178 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,7 +102,19 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_169/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:09.117544623 -0500\n@@ -200,7 +200,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_169/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:09.117544623 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_169/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:09.121544623 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            double ret = Double.NaN;\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_169/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:09.121544623 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "double ret=Double.NaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_314/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:37.918714472 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_314/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:37.922714520 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_314/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:37.922714520 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_314/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:37.922714520 -0500\n@@ -80,7 +80,10 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_123/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:43.101545225 -0500\n@@ -48,10 +48,11 @@\n      * @throws MathException if the algorithm fails to converge.\n      */\n     public static double erf(double x) throws MathException {\n-        double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n+        double sum = 0.0;\n+\t\tdouble ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_123/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:43.101545225 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_123/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:43.101545225 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 51, 
          "faulty": "double ret=Gamma.regularizedGammaP(0.5,x * x,1.0e-15,10000);", 
          "type": "InsertBefore", 
          "seed": "double sum=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_349/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:05.091177862 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_349/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:05.091177862 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_349/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:05.095177921 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,7 +102,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_400/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:14:34.807503803 -0500\n@@ -181,7 +181,8 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = Double.NEGATIVE_INFINITY;\n+\t\treturn ret;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_400/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:34.807503803 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_400/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:34.811503833 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_400/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:34.811503833 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_400/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:34.811503833 -0500\n@@ -86,21 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_685/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:39.564262117 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_685/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:39.564262117 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_685/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:39.564262117 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -97,11 +99,14 @@\n             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n                 return lowerBound;\n             }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new BisectionSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "setResult(initial,0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_500/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:47.443838867 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_500/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:47.443838867 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_500/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:47.447838883 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_398/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:34.107498278 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_398/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:34.107498278 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_398/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:34.115498342 -0500\n@@ -86,21 +86,24 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            double value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){\n  public double value(  double x) throws FunctionEvaluationException {\n    try {\n      return cumulativeProbability(x) - p;\n    }\n catch (    MathException ex) {\n      throw new FunctionEvaluationException(ex,x,ex.getPattern(),ex.getArguments());\n    }\n  }\n}\n;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_330/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:47.046841466 -0500\n@@ -123,7 +123,8 @@\n      */\n     public double cumulativeProbability(double x) throws MathException {\n         try {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n+            double value = 0;\n+\t\t\treturn 0.5 * (1.0 + Erf.erf((x - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n         } catch (MaxIterationsExceededException ex) {\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_330/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:13:47.050841557 -0500\n@@ -178,7 +178,12 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                if (x >= C_LIMIT) {\n+\t\t\t\t\tdouble inv = 1 / (x * x);\n+\t\t\t\t\treturn Math.log(x) - 0.5 / x - inv\n+\t\t\t\t\t\t\t* ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));\n+\t\t\t\t}\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_330/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:47.050841557 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_330/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:47.050841557 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_330/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:47.054841649 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 126, 
          "faulty": "return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "if (x >= C_LIMIT) {\n  double inv=1 / (x * x);\n  return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_174/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:12.017544555 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_174/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:12.017544555 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_174/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:12.017544555 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_174/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:12.021544555 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_730/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:02.832350512 -0500\n@@ -226,6 +226,10 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_730/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:02.836350528 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_730/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:02.836350528 -0500\n@@ -86,22 +86,26 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_539/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:17.931953453 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_539/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:17.935953468 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_539/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:17.935953468 -0500\n@@ -86,21 +86,29 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_365/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:15.183311627 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_365/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:15.183311627 -0500\n@@ -86,21 +86,17 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_339/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:53.790985498 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_339/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:53.790985498 -0500\n@@ -86,21 +86,21 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_416/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:14:44.531577023 -0500\n@@ -181,7 +181,8 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = Double.NEGATIVE_INFINITY;\n+\t\treturn ret;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_416/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:44.535577051 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_416/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:44.535577051 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_416/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:44.535577051 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            int iterationCount = 0;\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_416/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:44.539577078 -0500\n@@ -86,21 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_701/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:47.904293783 -0500\n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +223,16 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_701/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:47.908293798 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_701/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:47.908293798 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_701/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:47.908293798 -0500\n@@ -86,22 +86,56 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_234/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:53.693773141 -0500\n@@ -178,7 +178,8 @@\n         if (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n-            ret = getMean();\n+            ret = -getMean() * Math.log(1.0 - p);\n+\t\t\tret = getMean();\n         }\n         \n         return ret;\n@@ -200,7 +201,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_234/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:53.697773288 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_234/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:53.697773288 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_234/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:53.701773435 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 181, 
          "faulty": "ret=getMean();", 
          "type": "InsertBefore", 
          "seed": "ret=-getMean() * Math.log(1.0 - p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_624/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:03.704126224 -0500\n@@ -226,6 +226,9 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_624/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:03.708126239 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_624/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:03.708126239 -0500\n@@ -86,21 +86,25 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            if (p == 0) {\n+\t\t\t\treturn 0d;\n+\t\t\t}\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "if (p == 0) {\n  return 0d;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_541/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:18.647956149 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_541/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:18.651956164 -0500\n@@ -64,7 +64,10 @@\n                   \"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n         }\n \n-        // by default, do simple root finding using bracketing and default solver.\n+        if (p == 1) {\n+\t\t\treturn Integer.MAX_VALUE;\n+\t\t}\n+\t\t// by default, do simple root finding using bracketing and default solver.\n         // subclasses can override if there is a better method.\n         UnivariateRealFunction rootFindingFunction =\n             new UnivariateRealFunction() {\n@@ -86,21 +89,23 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 69, 
          "faulty": "UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){\n  public double value(  double x) throws FunctionEvaluationException {\n    try {\n      return cumulativeProbability(x) - p;\n    }\n catch (    MathException ex) {\n      throw new FunctionEvaluationException(ex,x,ex.getPattern(),ex.getArguments());\n    }\n  }\n}\n;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Integer.MAX_VALUE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_132/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:47.425545125 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_132/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:47.425545125 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_132/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:47.425545125 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "UnivariateRealSolver solver=LazyHolder.FACTORY.newDefaultSolver();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_757/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:16.544402677 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,11 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +204,7 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            return Integer.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -220,11 +224,18 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p < .5) {\n+\t\t\t\tret = -Double.MAX_VALUE;\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_757/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:16.544402677 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_757/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:16.544402677 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_757/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:16.548402693 -0500\n@@ -86,22 +86,109 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "Replace", 
          "seed": "return Integer.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_562/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:30.267999934 -0500\n@@ -221,7 +221,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_562/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:30.271999949 -0500\n@@ -188,7 +188,8 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_562/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:30.271999949 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "UnivariateRealSolver solver=LazyHolder.FACTORY.newDefaultSolver();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_248/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:01.726033296 -0500\n@@ -159,7 +159,13 @@\n         if (p == 1) {\n             return Double.POSITIVE_INFINITY;\n         }\n-        return super.inverseCumulativeProbability(p);\n+        if (p == 0) {\n+\t\t\treturn 0;\n+\t\t} else if (p == 1) {\n+\t\t\treturn 1;\n+\t\t} else {\n+\t\t\treturn super.inverseCumulativeProbability(p);\n+\t\t}\n     }\n     \n     /**\n@@ -178,7 +184,8 @@\n         if (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n-            ret = getMean();\n+            ret = -getMean() * Math.log(1.0 - p);\n+\t\t\tret = getMean();\n         }\n         \n         return ret;\n@@ -200,7 +207,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_248/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:01.730033415 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 181, 
          "faulty": "ret=getMean();", 
          "type": "InsertBefore", 
          "seed": "ret=-getMean() * Math.log(1.0 - p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 162, 
          "faulty": "return super.inverseCumulativeProbability(p);", 
          "type": "Replace", 
          "seed": "if (p == 0) {\n  return 0;\n}\n else if (p == 1) {\n  return 1;\n}\n else {\n  return super.inverseCumulativeProbability(p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_368/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:16.603327918 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_368/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:16.607327962 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_368/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:16.607327962 -0500\n@@ -86,21 +86,14 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){\n  public double value(  double x) throws FunctionEvaluationException {\n    try {\n      return cumulativeProbability(x) - p;\n    }\n catch (    MathException ex) {\n      throw new FunctionEvaluationException(ex,x,ex.getPattern(),ex.getArguments());\n    }\n  }\n}\n;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_237/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:55.157824658 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_237/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:55.157824658 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_237/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:55.161824797 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_237/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:55.161824797 -0500\n@@ -80,7 +80,10 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_343/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:56.231031589 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_343/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:56.231031589 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_343/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:56.235031660 -0500\n@@ -86,21 +86,17 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_620/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:02.280120836 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +202,7 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = Double.POSITIVE_INFINITY;\n         }\n         \n         return ret;\n@@ -221,7 +223,13 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_620/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:02.280120836 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_620/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:02.284120851 -0500\n@@ -86,21 +86,43 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "Replace", 
          "seed": "ret=Double.POSITIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_566/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:32.368007853 -0500\n@@ -126,13 +126,13 @@\n             return 0.5 * (1.0 + Erf.erf((x - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n         } catch (MaxIterationsExceededException ex) {\n-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n-                return 0.0d;\n-            } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+            if (x < (mean - 20 * standardDeviation)) {\n+\t\t\t\treturn 0.0d;\n+\t\t\t} else if (x > (mean + 20 * standardDeviation)) {\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +223,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_566/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:32.368007853 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_566/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:32.372007868 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_566/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:32.372007868 -0500\n@@ -86,21 +86,68 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (p == 1) {\n+\t\t\t\treturn Integer.MAX_VALUE;\n+\t\t\t}\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Integer.MAX_VALUE;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 129, 
          "faulty": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_299/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:31.242629315 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_299/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:31.246629366 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_299/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:31.246629366 -0500\n@@ -86,20 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n+            double value = 0;\n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "double value=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_755/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:15.788399801 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_755/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:15.788399801 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_755/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:15.792399816 -0500\n@@ -86,22 +86,27 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_809/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:47.328519973 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_809/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:47.328519973 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_809/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:47.332519988 -0500\n@@ -86,22 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "Replace", 
          "seed": "ret=Double.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_805/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:45.116511536 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_805/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:45.120511552 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_805/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:45.120511552 -0500\n@@ -86,21 +86,26 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_229/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:50.885666406 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        double value = 0;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +201,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -218,7 +220,10 @@\n     protected double getInitialDomain(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tif (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n             ret = getMean() + getStandardDeviation();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_229/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:50.885666406 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_229/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:50.889666565 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_229/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:50.889666565 -0500\n@@ -86,22 +86,10 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 221, 
          "faulty": "if (p < .5) {\n  ret=getMean() - getStandardDeviation();\n}\n else if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_91/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:16.545545840 -0500\n@@ -181,7 +181,7 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        return Double.NEGATIVE_INFINITY;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_91/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:16.549545840 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "Replace", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_446/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:06.091684184 -0500\n@@ -181,7 +181,8 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = Double.NEGATIVE_INFINITY;\n+\t\treturn ret;\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_446/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:06.091684184 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_446/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:06.095684197 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            int iterationCount = 0;\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_446/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:06.095684197 -0500\n@@ -86,22 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 184, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_726/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:01.144344094 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_726/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:01.144344094 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_726/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:01.144344094 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_726/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:01.148344109 -0500\n@@ -86,22 +86,52 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_110/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:34.277545430 -0500\n@@ -128,11 +128,13 @@\n         } catch (MaxIterationsExceededException ex) {\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n-            } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+            } else if (x < (mean - 20 * standardDeviation)) {\n+\t\t\t\treturn 0.0d;\n+\t\t\t} else if (x > (mean + 20 * standardDeviation)) {\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_110/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:34.277545430 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_110/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:34.277545430 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_110/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:34.281545430 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_814/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:50.112530592 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_814/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:50.116530608 -0500\n@@ -86,20 +86,6 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_327/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:45.442803197 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_327/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:45.442803197 -0500\n@@ -86,21 +86,17 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_791/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:37.184481295 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_791/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:37.188481310 -0500\n@@ -86,22 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn -1;\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "if (p == 0) {\n  return -1;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_205/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:36.717543983 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_205/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:36.717543983 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_205/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:36.717543983 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_205/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:36.721543983 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_748/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:12.256386359 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_748/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:12.256386359 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_748/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:12.256386359 -0500\n@@ -86,22 +86,44 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_689/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:42.036271501 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_689/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:42.040271516 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_689/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:42.040271516 -0500\n@@ -86,22 +86,22 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_635/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:17:09.980149975 -0500\n@@ -159,7 +159,20 @@\n         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {\n             ret = Double.NaN;\n         } else if (x == 0.0) {\n-            ret = 0.0;\n+            if (Double.isNaN(x) || (x <= 0.0)) {\n+\t\t\t\tret = Double.NaN;\n+\t\t\t} else {\n+\t\t\t\tdouble g = 607.0 / 128.0;\n+\t\t\t\tdouble sum = 0.0;\n+\t\t\t\tfor (int i = lanczos.length - 1; i > 0; --i) {\n+\t\t\t\t\tsum = sum + (lanczos[i] / (x + i));\n+\t\t\t\t}\n+\t\t\t\tsum = sum + lanczos[0];\n+\t\t\t\tdouble tmp = x + g + .5;\n+\t\t\t\tret = ((x + .5) * Math.log(tmp)) - tmp + HALF_LOG_2_PI\n+\t\t\t\t\t\t+ Math.log(sum / x);\n+\t\t\t}\n+\t\t\tret = 0.0;\n         } else if (a >= 1.0 && x > a) {\n             // use regularizedGammaQ because it should converge faster in this\n             // case.\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_635/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:09.984149990 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_635/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:09.984149990 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_635/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:09.984149990 -0500\n@@ -86,21 +86,20 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            double value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 162, 
          "faulty": "ret=0.0;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(x) || (x <= 0.0)) {\n  ret=Double.NaN;\n}\n else {\n  double g=607.0 / 128.0;\n  double sum=0.0;\n  for (int i=lanczos.length - 1; i > 0; --i) {\n    sum=sum + (lanczos[i] / (x + i));\n  }\n  sum=sum + lanczos[0];\n  double tmp=x + g + .5;\n  ret=((x + .5) * Math.log(tmp)) - tmp + HALF_LOG_2_PI + Math.log(sum / x);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_444/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:05.379681527 -0500\n@@ -221,7 +221,11 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_444/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:05.379681527 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_444/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:05.379681527 -0500\n@@ -86,22 +86,16 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "recomputeZ();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_4/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:10:16.137547240 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return (a + b) * .5;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_153/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:59.317544850 -0500\n@@ -128,11 +128,13 @@\n         } catch (MaxIterationsExceededException ex) {\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n-            } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+            } else if (x < (mean - 20 * standardDeviation)) {\n+\t\t\t\treturn 0.0d;\n+\t\t\t} else if (x > (mean + 20 * standardDeviation)) {\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -200,7 +202,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_153/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:59.317544850 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_153/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:59.317544850 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_153/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:59.321544850 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_633/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:09.232147143 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -226,6 +227,9 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_633/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:09.236147158 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_633/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:09.236147158 -0500\n@@ -86,21 +86,41 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_70/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:03.173546150 -0500\n@@ -128,11 +128,13 @@\n         } catch (MaxIterationsExceededException ex) {\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n-            } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+            } else if (x < (mean - 20 * standardDeviation)) {\n+\t\t\t\treturn 0.0d;\n+\t\t\t} else if (x > (mean + 20 * standardDeviation)) {\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_70/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:03.173546150 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_70/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:03.173546150 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_70/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:03.177546150 -0500\n@@ -86,22 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x < (mean - 20 * standardDeviation)) {\n  return 0.0d;\n}\n else if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_715/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:55.352322078 -0500\n@@ -129,7 +129,7 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n+                return 1.0;\n             } else {\n                 throw ex;\n             }\n@@ -175,7 +175,10 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +203,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -221,7 +225,19 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_715/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:17:55.356322093 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 0.0;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_715/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:55.356322093 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_715/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:55.356322093 -0500\n@@ -86,22 +86,78 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+\t\t\t\treturn lowerBound;\n+\t\t\t}     \n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "return getGamma().getAlpha() * 2.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 132, 
          "faulty": "return 1.0d;", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Replace", 
          "seed": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_212/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:40.925543886 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -226,6 +227,7 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        ret = getMean();\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_212/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:40.929543886 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_212/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:40.929543886 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "ret=getMean();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_604/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:53.056085959 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +201,7 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = Double.POSITIVE_INFINITY;\n         }\n         \n         return ret;\n@@ -221,11 +222,18 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_604/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:53.056085959 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_604/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:53.060085974 -0500\n@@ -86,21 +86,41 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "Replace", 
          "seed": "ret=Double.POSITIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_591/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:45.032055645 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,11 +222,19 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p > .5) {\n+\t\t\tret = getMean() + getStandardDeviation();\n+\t\t} else {\n+\t\t\tret = getMean();\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_591/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:45.036055660 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_591/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:45.036055660 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_591/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:45.036055660 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_764/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:19.408413580 -0500\n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +223,13 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_764/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:19.412413595 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_764/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:19.412413595 -0500\n@@ -86,21 +86,69 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_734/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:04.564357098 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,10 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -220,11 +223,18 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p < .5) {\n+\t\t\t\tret = -Double.MAX_VALUE;\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_734/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:04.564357098 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_734/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:04.568357114 -0500\n@@ -86,22 +86,101 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_263/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:09.550237039 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_263/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:09.550237039 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_263/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:09.554237134 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:29.583459150 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:29.587459185 -0500\n@@ -196,12 +196,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:29.587459185 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_151/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:58.541544868 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_151/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:58.541544868 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_151/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:58.545544868 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_151/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:58.545544868 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_745/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:10.384379237 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -197,7 +197,8 @@\n     protected double getDomainUpperBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        setMean(mean);\n+\t\tif (p < .5) {\n             ret = getMean();\n         } else {\n             ret = Double.MAX_VALUE;\n@@ -221,7 +222,11 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = Double.NEGATIVE_INFINITY;\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_745/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:10.388379252 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_745/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:10.388379252 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_745/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:10.388379252 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,8 +102,15 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 132, 
          "faulty": "return 1.0d;", 
          "type": "Delete", 
          "seed": "return 1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 200, 
          "faulty": "if (p < .5) {\n  ret=getMean();\n}\n else {\n  ret=Double.MAX_VALUE;\n}", 
          "type": "InsertBefore", 
          "seed": "setMean(mean);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 162, 
          "faulty": "return super.inverseCumulativeProbability(p);", 
          "type": "Replace", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_418/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:45.255582013 -0500\n@@ -178,7 +178,9 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tsum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_418/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:45.259582041 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_418/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:45.259582041 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_418/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:45.259582041 -0500\n@@ -86,21 +86,23 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_222/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:46.493543757 -0500\n@@ -178,7 +178,8 @@\n         if (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n-            ret = getMean();\n+            ret = -getMean() * Math.log(1.0 - p);\n+\t\t\tret = getMean();\n         }\n         \n         return ret;\n@@ -200,7 +201,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_222/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:46.497543757 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_222/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:46.497543757 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_222/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:46.497543757 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 181, 
          "faulty": "ret=getMean();", 
          "type": "InsertBefore", 
          "seed": "ret=-getMean() * Math.log(1.0 - p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_490/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:36.427797572 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_490/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:36.431797587 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_680/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:36.472250384 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +201,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -221,7 +223,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_680/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:17:36.472250384 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 0.0;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_680/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:36.476250399 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_680/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:36.476250399 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_680/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:36.476250399 -0500\n@@ -86,22 +86,32 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "return getGamma().getAlpha() * 2.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_774/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:25.296436000 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -220,11 +221,18 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p < .5) {\n+\t\t\t\tret = -Double.MAX_VALUE;\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_774/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:25.296436000 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_774/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:25.296436000 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_774/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:25.300436015 -0500\n@@ -86,7 +86,13 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,8 +106,14 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_529/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:06.851911760 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_529/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:06.855911776 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_529/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:06.855911776 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_529/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:06.855911776 -0500\n@@ -86,21 +86,39 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_162/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:05.133544715 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_162/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:05.137544715 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_162/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:05.137544715 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_162/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:05.137544715 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_631/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:07.540140739 -0500\n@@ -226,6 +226,9 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_631/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:07.540140739 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_631/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:07.540140739 -0500\n@@ -86,21 +86,22 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p == 0) {\n+\t\t\t\treturn 0d;\n+\t\t\t}\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "if (p == 0) {\n  return 0d;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 1) {\n  return Integer.MAX_VALUE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_177/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:13.429544523 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_177/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:13.433544523 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_177/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:13.433544523 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_177/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:13.433544523 -0500\n@@ -86,22 +86,10 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_587/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:42.956047806 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -226,6 +227,9 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_587/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:42.960047821 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_587/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:42.960047821 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_587/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:42.960047821 -0500\n@@ -86,21 +86,41 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn 0d;\n+\t\t\t}\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "if (p == 0) {\n  return 0d;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_251/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:03.214075298 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_251/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:03.218075409 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_251/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:03.218075409 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_251/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:03.218075409 -0500\n@@ -80,23 +80,16 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_461/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:14.687716262 -0500\n@@ -178,7 +178,9 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tsum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_461/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:14.691716277 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double n = 0.0;\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_461/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:14.691716277 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_461/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:14.695716293 -0500\n@@ -86,21 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double n=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_430/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:58.207654798 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_430/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:58.207654798 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_280/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:19.914450812 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_280/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:19.914450812 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_280/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:19.918450883 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_280/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:19.918450883 -0500\n@@ -80,26 +80,16 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n+            double value = 0;\n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_761/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:17.928407946 -0500\n@@ -175,7 +175,11 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +225,22 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_761/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:17.932407961 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_761/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:17.932407961 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_761/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:17.932407961 -0500\n@@ -86,22 +86,107 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_742/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:08.916373652 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_742/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:08.920373667 -0500\n@@ -86,21 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_425/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:55.319644043 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_425/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:55.319644043 -0500\n@@ -86,22 +86,16 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "recomputeZ();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_724/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:00.156340338 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_724/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:00.160340353 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_311/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:36.378696155 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_311/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:36.382696203 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_311/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:36.382696203 -0500\n@@ -86,20 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n+            double value = 0;\n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "double value=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_442/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:04.663678857 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_442/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:04.667678873 -0500\n@@ -50,8 +50,9 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n-        return ret;\n+\t\t\tret = -ret;\n+\t\t}\n+        double inv = 1 / (x * x);\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_442/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:04.667678873 -0500\n@@ -188,7 +188,17 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tif (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +206,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_442/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:04.667678873 -0500\n@@ -86,21 +86,21 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double inv=1 / (x * x);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_596/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:47.964066719 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_596/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:47.968066734 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_596/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:47.968066734 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_413/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:43.063566905 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_413/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:43.067566933 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double inv = 1 / (x * x);\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_413/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:43.067566933 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_413/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:43.067566933 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,7 +102,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double inv=1 / (x * x);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_649/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:17.612178877 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +201,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -226,6 +228,9 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p == 1) {\n+\t\t\treturn Double.POSITIVE_INFINITY;\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_649/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:17.612178877 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_649/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:17.616178892 -0500\n@@ -86,21 +86,25 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Double.POSITIVE_INFINITY;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_796/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:40.192492761 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_796/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:40.196492776 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_796/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:40.196492776 -0500\n@@ -86,22 +86,27 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Delete", 
          "seed": "return 0.0d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_759/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:17.220405251 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -220,11 +220,18 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p < .5) {\n+\t\t\t\tret = -Double.MAX_VALUE;\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_759/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:17.224405266 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_759/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:17.224405266 -0500\n@@ -86,22 +86,19 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_675/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:33.640239639 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_675/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:33.640239639 -0500\n@@ -86,21 +86,32 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n+            double value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_387/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:27.415439279 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_387/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:27.419439317 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_387/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:27.419439317 -0500\n@@ -86,22 +86,18 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "recomputeZ();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_471/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:26.055758748 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_471/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:26.059758763 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_471/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:26.059758763 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_471/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:26.059758763 -0500\n@@ -86,21 +86,17 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_137/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:50.377545057 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_137/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:50.381545057 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_301/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:31.998639062 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_301/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:32.002639113 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,13 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            if (initial < lowerBound || initial > upperBound\n+\t\t\t\t\t|| lowerBound >= upperBound) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+\t\t\t\t\t\t\t\tlowerBound, initial, upperBound);\n+\t\t\t}\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_301/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:32.002639113 -0500\n@@ -80,7 +80,10 @@\n         // Try to bracket root, test domain endoints if this fails     \n         double lowerBound = getDomainLowerBound(p);\n         double upperBound = getDomainUpperBound(p);\n-        double[] bracket = null;\n+        if (p == 0) {\n+\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t}\n+\t\tdouble[] bracket = null;\n         try {\n             bracket = UnivariateRealSolverUtils.bracket(\n                     rootFindingFunction, getInitialDomain(p),\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new SecantSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 83, 
          "faulty": "double[] bracket=null;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_739/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:07.476368174 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,11 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -220,11 +224,18 @@\n \n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n-        } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n         } else {\n-            ret = getMean();\n-        }\n+\t\t\tif (p < .5) {\n+\t\t\t\tret = -Double.MAX_VALUE;\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t\tif (p > .5) {\n+\t\t\t\tret = getMean() + getStandardDeviation();\n+\t\t\t} else {\n+\t\t\t\tret = getMean();\n+\t\t\t}\n+\t\t}\n         \n         return ret;\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_739/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:07.480368189 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_739/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:07.480368189 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_739/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:07.480368189 -0500\n@@ -86,22 +86,109 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "ret=Double.NEGATIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 223, 
          "faulty": "if (p > .5) {\n  ret=getMean() + getStandardDeviation();\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_722/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:59.424337556 -0500\n@@ -226,6 +226,10 @@\n             ret = getMean();\n         }\n         \n-        return ret;\n+        if (p <= 0) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"the Poisson mean must be positive ({0})\", p);\n+\t\t}\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_722/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:59.428337571 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_722/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:59.428337571 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_722/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:59.428337571 -0500\n@@ -86,22 +86,30 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 229, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "if (p <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"the Poisson mean must be positive ({0})\",p);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_583/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:41.524042401 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_583/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:41.524042401 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_583/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:41.524042401 -0500\n@@ -86,22 +86,23 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n+\t\t\t\treturn lowerBound;\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_190/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:27.333544201 -0500\n@@ -200,7 +200,9 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_190/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:12:27.333544201 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_190/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:27.337544201 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_190/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:27.337544201 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_645/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:15.304170134 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_645/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:15.308170149 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_645/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:15.308170149 -0500\n@@ -86,21 +86,15 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_51/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:10:50.085546453 -0500\n@@ -178,7 +178,11 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                if (n >= maxIterations) {\n+\t\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n+\t\t\t\t} else {\n+\t\t\t\t\tret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n+\t\t\t\t}\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_51/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:10:50.089546453 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "Replace", 
          "seed": "if (n >= maxIterations) {\n  throw new MaxIterationsExceededException(maxIterations);\n}\n else {\n  ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "if (fa * fb >= 0.0) {\n  throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_467/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:15:23.643749728 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_467/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:15:23.643749728 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double inv = 1 / (x * x);\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_467/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:23.647749743 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_467/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:23.647749743 -0500\n@@ -100,7 +100,11 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double inv=1 / (x * x);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_278/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:19.182437713 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_278/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:19.186437786 -0500\n@@ -97,9 +97,6 @@\n             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n                 return lowerBound;\n             }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "double value=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_559/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:28.887994731 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_559/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:28.887994731 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_559/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:28.891994746 -0500\n@@ -86,22 +86,22 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_697/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:45.712285457 -0500\n@@ -129,7 +129,7 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n+                return 1.0;\n             } else {\n                 throw ex;\n             }\n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +202,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double value = 0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n@@ -221,7 +224,16 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_697/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:17:45.712285457 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                ret = 0.0;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_697/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:45.716285473 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_697/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:45.716285473 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_697/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:45.716285473 -0500\n@@ -86,22 +86,46 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex G=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "return getGamma().getAlpha() * 2.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 132, 
          "faulty": "return 1.0d;", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_404/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java\t2018-12-02 11:14:37.123522081 -0500\n@@ -178,7 +178,8 @@\n                 sum = sum + an;\n             }\n             if (n >= maxIterations) {\n-                throw new MaxIterationsExceededException(maxIterations);\n+                sum = sum + an;\n+\t\t\t\tthrow new MaxIterationsExceededException(maxIterations);\n             } else {\n                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_404/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:37.127522113 -0500\n@@ -52,6 +52,7 @@\n         if (x < 0) {\n             ret = -ret;\n         }\n-        return ret;\n+        double inv = 1 / (x * x);\n+\t\treturn ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_404/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:37.127522113 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_404/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:37.127522113 -0500\n@@ -86,21 +86,21 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\t// Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Gamma.java", 
          "line": 181, 
          "faulty": "throw new MaxIterationsExceededException(maxIterations);", 
          "type": "InsertBefore", 
          "seed": "sum=sum + an;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 55, 
          "faulty": "return ret;", 
          "type": "InsertBefore", 
          "seed": "double inv=1 / (x * x);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_130/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:11:46.689545142 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_130/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:11:46.689545142 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_130/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:11:46.693545142 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_130/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:11:46.693545142 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_487/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:15:35.003792239 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_487/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:15:35.007792255 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_487/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:15:35.007792255 -0500\n@@ -86,17 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            double value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_728/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:18:01.828346695 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_728/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:18:01.828346695 -0500\n@@ -49,7 +49,8 @@\n      */\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n-        if (x < 0) {\n+        double g = 607.0 / 128.0;\n+\t\tif (x < 0) {\n             ret = -ret;\n         }\n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_728/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:18:01.832346710 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_728/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:18:01.832346710 -0500\n@@ -86,22 +86,26 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "return new BisectionSolver();"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "InsertBefore", 
          "seed": "double g=607.0 / 128.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_384/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:14:25.995426232 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_384/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:25.999426270 -0500\n@@ -188,7 +188,12 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            if (maximumIterations <= 0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"bad value for maximum iterations number: {0}\",\n+\t\t\t\t\t\tmaximumIterations);\n+\t\t\t}\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +201,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_384/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:25.999426270 -0500\n@@ -86,22 +86,28 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "if (maximumIterations <= 0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_164/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:12:05.921544697 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            double lowerBound = getDomainLowerBound(p);\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_164/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:12:05.921544697 -0500\n@@ -187,7 +187,8 @@\n     \n         do {\n             a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            int i = 1;\n+\t\t\tb = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n             \n             fb = function.value(b);\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_164/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:12:05.921544697 -0500\n@@ -99,9 +99,7 @@\n             }\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            }\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "throw new MathException(ex);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "double lowerBound=getDomainLowerBound(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 190, 
          "faulty": "b=Math.min(b + 1.0,upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_546/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:16:21.547967071 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_546/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:16:21.547967071 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_546/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:16:21.547967071 -0500\n@@ -188,7 +188,8 @@\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n-            fa = function.value(a);\n+            UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();\n+\t\t\tfa = function.value(a);\n             \n             fb = function.value(b);\n             numIterations++ ;\n@@ -196,12 +197,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_546/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:16:21.551967086 -0500\n@@ -86,7 +86,9 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\t/* \n              * Check domain endpoints to see if one gives value that is within\n              * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n              * case if density has bounded support and p is 0 or 1).\n@@ -100,8 +102,10 @@\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 191, 
          "faulty": "fa=function.value(a);", 
          "type": "InsertBefore", 
          "seed": "UnivariateRealSolver solver=LazyHolder.FACTORY.newDefaultSolver();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_382/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:14:25.271419069 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_382/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:14:25.271419069 -0500\n@@ -86,20 +86,7 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n+            double value = 0;\n             // Failed bracket convergence was not because of corner solution\n             throw new MathException(ex);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "UnivariateRealFunction rootFindingFunction=new UnivariateRealFunction(){\n  public double value(  double x) throws FunctionEvaluationException {\n    try {\n      return cumulativeProbability(x) - p;\n    }\n catch (    MathException ex) {\n      throw new FunctionEvaluationException(ex,x,ex.getPattern(),ex.getArguments());\n    }\n  }\n}\n;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_245/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:13:00.281990295 -0500\n@@ -200,7 +200,8 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = 0.0;\n+\t\t\tret = Double.MAX_VALUE;\n         }\n         \n         return ret;\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_245/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:13:00.281990295 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_245/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:13:00.281990295 -0500\n@@ -196,12 +196,6 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_245/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:13:00.285990414 -0500\n@@ -97,7 +97,10 @@\n             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n                 return lowerBound;\n             }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n+            if (p == 1) {\n+\t\t\t\treturn Integer.MAX_VALUE;\n+\t\t\t}\n+\t\t\tif (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n             // Failed bracket convergence was not because of corner solution\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "InsertBefore", 
          "seed": "ret=0.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "InsertBefore", 
          "seed": "if (p == 1) {\n  return Integer.MAX_VALUE;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_691/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:42.844274568 -0500\n@@ -175,7 +175,8 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -221,7 +222,10 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:08:36.493549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_691/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Erf.java\t2018-12-02 11:17:42.844274568 -0500\n@@ -50,8 +50,8 @@\n     public static double erf(double x) throws MathException {\n         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);\n         if (x < 0) {\n-            ret = -ret;\n-        }\n+\t\t\tret = -ret;\n+\t\t}\n         return ret;\n     }\n }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_691/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:42.848274583 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_691/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:42.848274583 -0500\n@@ -86,22 +86,42 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n-                return upperBound;\n-            }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tdouble ret = 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/special/Erf.java", 
          "line": 52, 
          "faulty": "if (x < 0) {\n  ret=-ret;\n}", 
          "type": "Replace", 
          "seed": "if (x < 0) {\n  ret=-ret;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Delete", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "Complex delta=null;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 100, 
          "faulty": "if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n  return upperBound;\n}", 
          "type": "Delete", 
          "seed": "return super.inverseCumulativeProbability(p);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "double ret=1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Replace", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:08:36.461549548 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_657/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\t2018-12-02 11:17:22.748198338 -0500\n@@ -129,10 +129,10 @@\n             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38\n                 return 0.0d;\n             } else if (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            } else {\n-                throw ex;\n-            }\n+\t\t\t\treturn 1.0d;\n+\t\t\t} else {\n+\t\t\t\tthrow ex;\n+\t\t\t}\n         }\n     }\n     \n@@ -175,7 +175,9 @@\n     protected double getDomainLowerBound(double p) {\n         double ret;\n \n-        if (p < .5) {\n+        ret = Double.MAX_VALUE;\n+\t\tret = Double.MAX_VALUE;\n+\t\tif (p < .5) {\n             ret = -Double.MAX_VALUE;\n         } else {\n             ret = getMean();\n@@ -200,7 +202,7 @@\n         if (p < .5) {\n             ret = getMean();\n         } else {\n-            ret = Double.MAX_VALUE;\n+            ret = Double.POSITIVE_INFINITY;\n         }\n         \n         return ret;\n@@ -221,7 +223,13 @@\n         if (p < .5) {\n             ret = getMean() - getStandardDeviation();\n         } else if (p > .5) {\n-            ret = getMean() + getStandardDeviation();\n+            if (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tif (p == 0) {\n+\t\t\t\treturn Double.NEGATIVE_INFINITY;\n+\t\t\t}\n+\t\t\tret = getMean() + getStandardDeviation();\n         } else {\n             ret = getMean();\n         }\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_657/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2018-12-02 11:17:22.748198338 -0500\n@@ -196,12 +196,7 @@\n                 ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+            return new double[] { a, b };\n         }\n         \n         return new double[]{a, b};\n\n\n--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:08:39.989549467 -0500\n+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_657/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\t2018-12-02 11:17:22.752198353 -0500\n@@ -86,22 +86,39 @@\n                     rootFindingFunction, getInitialDomain(p),\n                     lowerBound, upperBound);\n         }  catch (ConvergenceException ex) {\n-            /* \n-             * Check domain endpoints to see if one gives value that is within\n-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the\n-             * case if density has bounded support and p is 0 or 1).\n-             * \n-             * TODO: expose the default solver, defaultAbsoluteAccuracy as\n-             * a constant.\n-             */ \n-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n-                return lowerBound;\n-            }\n+            bracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tbracket = UnivariateRealSolverUtils.bracket(rootFindingFunction,\n+\t\t\t\t\tgetInitialDomain(p), lowerBound, upperBound);\n+\t\t\tdouble value = 0;\n             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {\n                 return upperBound;\n             }     \n-            // Failed bracket convergence was not because of corner solution\n-            throw new MathException(ex);\n+            if (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\tif (p < 0.0 || p > 1.0) {\n+\t\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\t\"{0} out of [{1}, {2}] range\", p, 0.0, 1.0);\n+\t\t\t}\n+\t\t\treturn 1.0;\n         }\n \n         // find root\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "Replace", 
          "seed": "double value=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "Delete", 
          "seed": "int iterationCount=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "InsertBefore", 
          "seed": "if (p < 0.0 || p > 1.0) {\n  throw MathRuntimeException.createIllegalArgumentException(\"{0} out of [{1}, {2}] range\",p,0.0,1.0);\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 203, 
          "faulty": "ret=Double.MAX_VALUE;", 
          "type": "Replace", 
          "seed": "ret=Double.POSITIVE_INFINITY;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 97, 
          "faulty": "if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {\n  return lowerBound;\n}", 
          "type": "InsertBefore", 
          "seed": "bracket=UnivariateRealSolverUtils.bracket(rootFindingFunction,getInitialDomain(p),lowerBound,upperBound);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 178, 
          "faulty": "if (p < .5) {\n  ret=-Double.MAX_VALUE;\n}\n else {\n  ret=getMean();\n}", 
          "type": "InsertBefore", 
          "seed": "ret=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 224, 
          "faulty": "ret=getMean() + getStandardDeviation();", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return Double.NEGATIVE_INFINITY;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java", 
          "line": 131, 
          "faulty": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}", 
          "type": "Replace", 
          "seed": "if (x > (mean + 20 * standardDeviation)) {\n  return 1.0d;\n}\n else {\n  throw ex;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java", 
          "line": 104, 
          "faulty": "throw new MathException(ex);", 
          "type": "Replace", 
          "seed": "return 1.0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 199, 
          "faulty": "throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);", 
          "type": "InsertBefore", 
          "seed": "return new double[]{a,b};"
        }
      ]
    }
  ]
}