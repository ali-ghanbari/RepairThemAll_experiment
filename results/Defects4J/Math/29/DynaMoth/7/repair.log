cd /tmp/DynaMoth_Defects4J_Math_29;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/DynaMoth_Defects4J_Math_29/target/classes/:/tmp/DynaMoth_Defects4J_Math_29/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
10:23:59.028 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:23:59.032 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Math_29/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_29/target/test-classes/, file:/tmp/DynaMoth_Defects4J_Math_29/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_29/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:23:59.032 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:23:59.033 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbtractIntegerDistributionTest, org.apache.commons.math3.distribution.AbtractIntegerDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
10:23:59.035 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbtractIntegerDistributionTest, org.apache.commons.math3.distribution.AbtractIntegerDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
10:23:59.036 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:23:59.054 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 905 MB
10:23:59.055 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:23:59.055 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 990 MB
10:23:59.055 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:23:59.056 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:23:59.056 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:32:19.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:32:19.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:374 which is executed by 3 tests
-447166284
10:32:20.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:32:20.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:365 which is executed by 3 tests
-447166284
10:32:20.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:20.553 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (98 ms)
<> Total tests run: 140
<> Ignored tests: 0
<> Failed tests: 6
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:21.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:32:21.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:364 which is executed by 3 tests
-447166284
10:32:22.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:22.130 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (82 ms)
<> Total tests run: 140
<> Ignored tests: 0
<> Failed tests: 6
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:22.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:32:22.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:363 which is executed by 3 tests
-447166284
10:32:22.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:22.904 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 140
<> Ignored tests: 0
<> Failed tests: 6
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:23.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:32:23.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:362 which is executed by 3 tests
-447166284
10:32:23.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:32:23.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:361 which is executed by 3 tests
-447166284
10:32:23.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:32:23.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:34 which is executed by 39 tests
-447166284
10:32:23.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:32:23.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:360 which is executed by 4 tests
-447166284
10:32:24.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:24.207 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (81 ms)
<> Total tests run: 140
<> Ignored tests: 0
<> Failed tests: 6
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:24.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:32:24.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:509 which is executed by 4 tests
10:32:24.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:509
10:32:24.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:32:24.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:508 which is executed by 4 tests
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:508
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:491 which is executed by 4 tests
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:491
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:490 which is executed by 4 tests
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:490
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:32:24.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:592 which is executed by 12 tests
-447166284
10:32:24.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:24.965 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (97 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:25.399 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:32:25.399 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:591 which is executed by 17 tests
-447166284
10:32:25.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:25.784 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (129 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:26.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:26.336 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:26.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:32:26.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:208 which is executed by 18 tests
-447166284
10:32:26.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:32:26.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:354 which is executed by 2 tests
-447166284
10:32:27.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:32:27.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:352 which is executed by 2 tests
-447166284
10:32:27.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:27.467 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 70
<> Ignored tests: 0
<> Failed tests: 3
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:27.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:32:27.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:351 which is executed by 2 tests
-447166284
10:32:28.045 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:28.114 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 70
<> Ignored tests: 0
<> Failed tests: 3
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:28.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:32:28.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:350 which is executed by 2 tests
-447166284
10:32:28.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:28.708 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 70
<> Ignored tests: 0
<> Failed tests: 3
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:29.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:32:29.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:349 which is executed by 2 tests
-447166284
10:32:29.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:32:29.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:343 which is executed by 2 tests
-447166284
10:32:29.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:32:29.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:575 which is executed by 2 tests
10:32:29.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:575
10:32:29.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:580 which is executed by 2 tests
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:580
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:595 which is executed by 2 tests
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:595
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:32:29.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:210 which is executed by 19 tests
1997602238
10:32:29.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:29.703 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (83 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:519 which is executed by 19 tests
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:519
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:518 which is executed by 19 tests
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:518
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:517 which is executed by 19 tests
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:517
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:500 which is executed by 19 tests
10:32:29.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:500
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:499 which is executed by 19 tests
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:499
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:498 which is executed by 19 tests
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:498
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:482 which is executed by 19 tests
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:482
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:480 which is executed by 19 tests
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:480
10:32:29.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:479 which is executed by 19 tests
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:479
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:476 which is executed by 19 tests
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:476
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:475 which is executed by 19 tests
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:475
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:474 which is executed by 19 tests
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:474
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
10:32:29.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:473 which is executed by 19 tests
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:473
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:472 which is executed by 19 tests
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:472
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:471 which is executed by 19 tests
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:471
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:470 which is executed by 19 tests
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:470
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:469 which is executed by 19 tests
10:32:29.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:469
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:468 which is executed by 19 tests
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:468
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:416 which is executed by 19 tests
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:416
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:415 which is executed by 19 tests
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:415
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:414 which is executed by 19 tests
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:414
10:32:29.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
10:32:29.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:209 which is executed by 24 tests
1997602238
10:32:30.160 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:30.252 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (83 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:30.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:30.630 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (83 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:30.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
10:32:30.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:208 which is executed by 24 tests
1997602238
10:32:31.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
10:32:31.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:207 which is executed by 24 tests
1997602238
10:32:31.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
10:32:31.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:397 which is executed by 24 tests
1997602238
10:32:31.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
10:32:31.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:396 which is executed by 24 tests
1997602238
10:32:31.578 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:31.686 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (82 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:31.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
10:32:31.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:395 which is executed by 24 tests
1997602238
10:32:32.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:32.222 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:32.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
10:32:32.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:394 which is executed by 24 tests
1997602238
10:32:32.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:32.750 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (81 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:33.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
10:32:33.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:393 which is executed by 24 tests
1997602238
10:32:33.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
10:32:33.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:392 which is executed by 24 tests
1997602238
10:32:33.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:33.472 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (84 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:33.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
10:32:33.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:391 which is executed by 24 tests
1997602238
10:32:33.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:33.995 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (79 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:34.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
10:32:34.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:354 which is executed by 24 tests
1997602238
10:32:34.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:34.523 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (79 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:34.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
10:32:34.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVector:180 which is executed by 24 tests
74962082
10:32:34.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
10:32:34.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:342 which is executed by 3 tests
-447166284
10:32:35.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:35.234 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (59 ms)
<> Total tests run: 70
<> Ignored tests: 0
<> Failed tests: 3
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:35.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
10:32:35.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:512 which is executed by 3 tests
10:32:35.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:512
10:32:35.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
10:32:35.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:511 which is executed by 3 tests
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:511
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:494 which is executed by 3 tests
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:494
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:493 which is executed by 3 tests
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:493
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
10:32:35.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:459 which is executed by 27 tests
1997602238
10:32:35.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
10:32:35.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:457 which is executed by 27 tests
1997602238
10:32:35.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:36.002 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:36.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
10:32:36.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:456 which is executed by 27 tests
1997602238
10:32:36.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:36.515 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (79 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:36.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
10:32:36.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:455 which is executed by 27 tests
1997602238
10:32:36.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:37.053 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (92 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:37.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
10:32:37.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:454 which is executed by 27 tests
1997602238
10:32:37.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:37.578 [pool-188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (81 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:55.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
10:32:55.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:450 which is executed by 27 tests
1997602238
10:32:55.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:55.640 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (82 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:55.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
10:32:55.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:449 which is executed by 27 tests
1997602238
10:32:56.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:56.168 [pool-204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (78 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:56.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
10:32:56.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:448 which is executed by 27 tests
1997602238
10:32:56.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:56.687 [pool-212-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (78 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:56.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
10:32:56.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:447 which is executed by 27 tests
1997602238
10:32:57.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
10:32:57.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:446 which is executed by 27 tests
1997602238
10:32:57.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
10:32:57.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:445 which is executed by 27 tests
1997602238
10:32:57.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:57.537 [pool-220-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (78 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:57.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:57.894 [pool-228-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (93 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:58.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
10:32:58.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:444 which is executed by 27 tests
1997602238
10:32:58.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:58.403 [pool-236-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:58.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
10:32:58.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:443 which is executed by 27 tests
1997602238
10:32:58.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
10:32:58.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:442 which is executed by 27 tests
1997602238
10:32:59.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
10:32:59.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:441 which is executed by 27 tests
1997602238
10:32:59.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
10:32:59.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:440 which is executed by 27 tests
1997602238
10:32:59.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
10:32:59.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:439 which is executed by 27 tests
1997602238
10:32:59.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
10:32:59.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:437 which is executed by 27 tests
1997602238
10:32:59.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
10:32:59.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:436 which is executed by 27 tests
1997602238
10:32:59.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
10:32:59.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:435 which is executed by 27 tests
1997602238
10:33:00.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
10:33:00.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:434 which is executed by 27 tests
1997602238
10:33:00.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
10:33:00.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:421 which is executed by 27 tests
1997602238
10:33:00.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:00.548 [pool-244-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:36:20.794 [pool-243-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:36:20.794 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:36:20.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
10:36:20.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:292 which is executed by 27 tests
1997602238
10:36:20.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:36:21.055 [pool-247-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:36:21.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
10:36:21.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:285 which is executed by 27 tests
1997602238
10:36:21.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:36:21.584 [pool-255-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:21.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:21.598 [pool-263-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:38:30.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
10:38:30.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:283 which is executed by 27 tests
1997602238
10:38:30.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:38:30.990 [pool-271-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:38:31.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
10:38:31.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:282 which is executed by 27 tests
1997602238
10:38:31.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:38:31.497 [pool-279-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:39:32.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
10:39:32.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:281 which is executed by 27 tests
1997602238
10:39:32.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:39:32.755 [pool-287-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:33.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
10:40:33.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:291 which is executed by 29 tests
1997602238
10:40:34.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:34.097 [pool-295-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:34.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:34.443 [pool-303-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:34.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
10:40:34.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:279 which is executed by 29 tests
1997602238
10:40:34.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:34.943 [pool-311-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:35.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:35.286 [pool-319-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:35.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
10:40:35.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:278 which is executed by 29 tests
1997602238
10:40:35.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
10:40:35.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:277 which is executed by 29 tests
1997602238
10:40:35.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
10:40:35.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:532 which is executed by 32 tests
1997602238
10:40:36.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
10:40:36.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:529 which is executed by 32 tests
1997602238
10:40:36.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:36.293 [pool-327-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:36.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:36.640 [pool-335-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:36.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
10:40:36.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:526 which is executed by 32 tests
1997602238
10:40:37.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:37.150 [pool-343-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:37.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:37.515 [pool-351-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:37.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
10:40:37.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:37 which is executed by 148 tests
1997602238
10:40:37.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
10:40:37.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:274 which is executed by 33 tests
1997602238
10:40:38.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:38.195 [pool-359-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:38.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
10:40:38.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:594 which is executed by 35 tests
-447166284
10:40:38.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
10:40:38.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:590 which is executed by 35 tests
-447166284
10:40:38.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:38.879 [pool-367-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:39.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
10:40:39.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:589 which is executed by 35 tests
-447166284
10:40:39.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:39.492 [pool-375-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:39.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:39.907 [pool-383-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:40.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
10:40:40.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:413 which is executed by 35 tests
1997602238
10:40:40.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:40.506 [pool-391-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:40.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
10:40:40.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:412 which is executed by 35 tests
1997602238
10:40:40.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:41.001 [pool-399-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:41.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
10:40:41.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:411 which is executed by 35 tests
1997602238
10:40:41.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:41.549 [pool-407-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:41.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
10:40:41.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:332 which is executed by 35 tests
1997602238
10:40:41.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
10:40:41.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:588 which is executed by 37 tests
-447166284
10:40:42.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:42.237 [pool-415-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:42.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
10:40:42.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:449 which is executed by 38 tests
-447166284
10:40:42.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
10:40:42.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:574 which is executed by 38 tests
1997602238
10:40:42.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:43.011 [pool-423-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:43.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:43.348 [pool-431-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:43.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
10:40:43.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:573 which is executed by 38 tests
1997602238
10:40:43.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:43.859 [pool-439-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:44.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
10:40:44.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:549 which is executed by 38 tests
1997602238
10:40:44.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
10:40:44.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:546 which is executed by 38 tests
1997602238
10:40:44.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:44.557 [pool-447-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:44.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:44.908 [pool-455-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (78 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:45.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
10:40:45.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:543 which is executed by 38 tests
1997602238
10:40:45.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:45.446 [pool-463-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:45.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:45.783 [pool-471-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:46.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
10:40:46.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:515 which is executed by 38 tests
1997602238
10:40:46.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
10:40:46.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:323 which is executed by 38 tests
1997602238
10:40:46.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
10:40:46.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:247 which is executed by 38 tests
1997602238
10:40:46.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
10:40:46.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:579 which is executed by 39 tests
1997602238
10:40:46.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
10:40:46.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:577 which is executed by 39 tests
1997602238
10:40:46.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
10:40:46.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:569 which is executed by 39 tests
1997602238
10:40:47.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:47.152 [pool-479-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:47.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
10:40:47.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:565 which is executed by 39 tests
1997602238
10:40:47.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:47.681 [pool-487-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:47.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
10:40:47.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:560 which is executed by 39 tests
1997602238
10:40:48.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:48.209 [pool-495-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:48.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:48.549 [pool-503-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:48.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
10:40:48.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:238 which is executed by 39 tests
1997602238
10:40:48.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
10:40:48.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:353 which is executed by 39 tests
1997602238
10:40:49.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:49.243 [pool-511-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:49.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:49.588 [pool-519-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:49.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
10:40:49.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:352 which is executed by 39 tests
1997602238
10:40:49.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
10:40:49.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:351 which is executed by 39 tests
1997602238
10:40:50.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
10:40:50.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:448 which is executed by 42 tests
-447166284
10:40:50.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:50.452 [pool-527-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:50.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
10:40:50.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVector:177 which is executed by 43 tests
74962082
10:40:50.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:51.069 [pool-535-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:51.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:52.050 [pool-543-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (92 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:52.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
10:40:52.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVector:176 which is executed by 43 tests
74962082
10:40:53.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
10:40:53.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:184 which is executed by 49 tests
1997602238
10:40:53.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:53.289 [pool-551-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (87 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:53.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
10:40:53.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVector:194 which is executed by 49 tests
74962082
10:40:53.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
10:40:53.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:273 which is executed by 52 tests
1997602238
10:40:53.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:54.000 [pool-559-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (76 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:54.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:54.354 [pool-567-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:54.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
10:40:54.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:183 which is executed by 60 tests
1997602238
10:40:54.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:54.862 [pool-575-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:55.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:55.221 [pool-583-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:55.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
10:40:55.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVector:189 which is executed by 65 tests
74962082
10:40:55.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:55.758 [pool-591-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:56.533 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:56.618 [pool-599-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:57.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
10:40:57.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:401 which is executed by 74 tests
-447166284
10:40:57.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
10:40:57.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.OpenMapRealVector:220 which is executed by 76 tests
-447166284
10:40:57.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
10:40:57.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:179 which is executed by 79 tests
1997602238
10:40:57.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:58.008 [pool-607-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:58.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:58.369 [pool-615-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (83 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:58.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
10:40:58.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:178 which is executed by 79 tests
1997602238
10:40:58.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
10:40:58.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:177 which is executed by 79 tests
1997602238
10:40:58.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
10:40:58.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:382 which is executed by 83 tests
1997602238
10:40:59.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
10:40:59.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:466 which is executed by 103 tests
1997602238
10:40:59.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
10:40:59.305 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:425 which is executed by 103 tests
1997602238
10:40:59.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
10:40:59.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:423 which is executed by 103 tests
1997602238
10:40:59.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:40:59.723 [pool-623-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:40:59.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
10:40:59.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:420 which is executed by 103 tests
1997602238
10:41:00.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:41:00.219 [pool-631-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:44:20.459 [pool-630-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:44:20.460 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:44:20.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:44:20.542 [pool-634-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (75 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:47:40.779 [pool-633-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:47:40.779 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:47:40.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
10:47:40.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:419 which is executed by 103 tests
1997602238
10:47:40.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:47:41.116 [pool-637-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:51:01.393 [pool-636-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:51:01.393 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:51:01.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
10:51:01.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:418 which is executed by 103 tests
1997602238
10:51:01.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:51:01.932 [pool-640-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (159 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:22.385 [pool-639-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:54:22.385 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:54:22.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:22.600 [pool-643-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (180 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:43.073 [pool-642-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:57:43.073 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:57:43.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
10:57:43.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:417 which is executed by 103 tests
1997602238
10:57:43.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:43.620 [pool-646-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (171 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:44.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
10:57:44.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:416 which is executed by 103 tests
1997602238
10:57:44.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:44.687 [pool-654-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:45.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
10:57:45.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:415 which is executed by 103 tests
1997602238
10:57:45.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:45.852 [pool-662-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (183 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:46.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
10:57:46.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:410 which is executed by 103 tests
1997602238
10:57:46.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:46.954 [pool-670-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (193 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:47.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:47.731 [pool-678-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (194 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:48.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
10:57:48.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:409 which is executed by 103 tests
1997602238
10:57:48.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
10:57:48.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:408 which is executed by 103 tests
1997602238
10:57:49.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
10:57:49.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:407 which is executed by 103 tests
1997602238
10:57:49.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
10:57:49.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:272 which is executed by 103 tests
1997602238
10:57:49.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:49.977 [pool-686-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (173 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:50.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
10:57:50.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:271 which is executed by 103 tests
1997602238
10:57:50.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:51.118 [pool-694-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (198 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:51.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:52.001 [pool-702-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (173 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:52.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
10:57:52.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:270 which is executed by 103 tests
1997602238
10:57:52.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
10:57:52.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:269 which is executed by 103 tests
1997602238
10:57:53.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
10:57:53.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:256 which is executed by 103 tests
1997602238
10:57:53.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
10:57:53.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:476 which is executed by 105 tests
1997602238
10:57:53.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
10:57:53.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:475 which is executed by 105 tests
1997602238
10:57:54.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
10:57:54.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:156 which is executed by 118 tests
1997602238
10:57:54.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:54.439 [pool-710-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:55.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
10:57:55.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:155 which is executed by 119 tests
1997602238
10:57:55.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:55.690 [pool-718-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (201 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:56.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:56.488 [pool-726-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (196 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:57.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
10:57:57.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:154 which is executed by 119 tests
1997602238
10:57:57.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
10:57:57.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:153 which is executed by 119 tests
1997602238
10:57:57.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
10:57:57.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:150 which is executed by 120 tests
1997602238
10:57:58.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:58.412 [pool-734-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (168 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:59.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:57:59.259 [pool-742-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (157 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:57:59.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
10:57:59.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:101 which is executed by 190 tests
10:57:59.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.linear.RealVectorAbstractTest:101
10:57:59.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
10:57:59.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3367 which is executed by 236 tests
1033054629
10:58:00.319 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:00.543 [pool-750-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (166 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:02.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
10:58:02.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3366 which is executed by 254 tests
1033054629
10:58:02.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:02.868 [pool-758-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (216 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:04.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:04.666 [pool-766-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (194 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:06.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
10:58:06.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3365 which is executed by 254 tests
1033054629
10:58:06.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:06.980 [pool-774-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (167 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:08.374 [pool-773-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1907: error: variable y might not have been initialized
        if (y == x) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:08.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
10:58:08.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3361 which is executed by 254 tests
1033054629
10:58:08.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:09.083 [pool-776-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (238 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:10.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:11.011 [pool-784-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (171 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:12.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
10:58:12.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3351 which is executed by 525 tests
1033054629
10:58:12.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
10:58:12.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3347 which is executed by 573 tests
1033054629
10:58:13.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:13.716 [pool-792-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:15.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:15.538 [pool-800-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (149 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:17.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
10:58:17.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3343 which is executed by 573 tests
1033054629
10:58:17.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:17.724 [pool-808-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (167 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:19.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:19.372 [pool-816-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (168 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:20.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
10:58:20.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3342 which is executed by 573 tests
1033054629
10:58:20.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:21.124 [pool-824-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:22.252 [pool-823-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1892: error: variable y might not have been initialized
        if ((x < 0) && (y != x)) {
                        ^
FastMath.java:1895: error: variable y might not have been initialized
        if (y == 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:22.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
10:58:22.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3338 which is executed by 586 tests
1033054629
10:58:22.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:22.912 [pool-826-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:24.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:24.468 [pool-834-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (168 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:25.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
10:58:25.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3334 which is executed by 586 tests
1033054629
10:58:26.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:26.369 [pool-842-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (165 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:27.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:27.826 [pool-850-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (166 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 9
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:29.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
10:58:29.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.OpenIntToDoubleHashMap:180 which is executed by 71 tests
1997602238
10:58:29.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:58:29.793 [pool-858-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (125 ms)
<> Total tests run: 70
<> Ignored tests: 0
<> Failed tests: 3
~ testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)
[entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>]
java.lang.AssertionError: entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)
    at org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:58:30.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
10:58:30.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 78 tests
1857420685
10:58:30.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
10:58:30.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 78 tests
1857420685
10:58:30.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:58:47.565 [pool-866-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16644 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:58:49.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:06.179 [pool-870-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17134 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:07.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
10:59:07.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 78 tests
1857420685
10:59:07.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
10:59:07.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 78 tests
1857420685
10:59:07.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:26.064 [pool-874-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18107 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:26.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
10:59:26.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 78 tests
1857420685
10:59:27.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:44.678 [pool-878-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17373 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:45.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
10:59:45.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 78 tests
1857420685
10:59:45.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:03.398 [pool-882-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17510 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:04.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:21.760 [pool-886-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17302 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:22.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
11:00:22.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 78 tests
1857420685
11:00:22.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:40.502 [pool-890-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17561 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:41.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
11:00:41.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 78 tests
1857420685
11:00:41.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:57.814 [pool-894-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16241 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:58.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
11:00:58.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 78 tests
1857420685
11:00:58.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:15.738 [pool-898-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16745 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:16.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
11:01:16.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 78 tests
1857420685
11:01:16.877 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:34.215 [pool-902-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17274 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:35.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
11:01:35.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 78 tests
1857420685
11:01:35.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:52.900 [pool-906-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17399 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:53.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:10.370 [pool-910-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16470 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:11.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
11:02:11.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 78 tests
1857420685
11:02:11.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:28.860 [pool-914-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17271 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:29.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
11:02:29.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 78 tests
1857420685
11:02:30.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:47.150 [pool-918-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16997 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:48.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
11:02:48.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 78 tests
1857420685
11:02:48.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:07.215 [pool-922-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18466 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:08.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:25.212 [pool-926-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17039 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

11:03:26.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
11:03:26.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 78 tests
1857420685
11:03:26.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:44.060 [pool-930-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17551 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:45.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
11:03:45.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 78 tests
1857420685
11:03:45.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:04:02.967 [pool-934-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17591 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:04:03.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
11:04:03.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 78 tests
1857420685
11:04:04.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:04:21.396 [pool-938-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17142 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:04:22.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:04:39.129 [pool-942-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16842 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:04:39.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
11:04:39.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 78 tests
1857420685
11:04:40.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:04:58.161 [pool-946-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17828 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:04:58.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
11:04:58.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 78 tests
1857420685
11:04:59.310 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:05:16.148 [pool-950-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16790 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:05:17.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:05:34.495 [pool-954-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17378 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:05:35.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
11:05:35.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 78 tests
1857420685
11:05:35.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:05:53.148 [pool-958-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17458 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:05:54.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
11:05:54.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 78 tests
1857420685
11:05:54.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:06:11.827 [pool-962-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17432 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:06:12.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
11:06:12.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 78 tests
1857420685
11:06:13.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
11:06:13.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 78 tests
1857420685
11:06:13.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
11:06:13.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 78 tests
1857420685
11:06:13.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
11:06:13.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 78 tests
1857420685
11:06:14.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
11:06:14.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 78 tests
1857420685
11:06:14.498 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
11:06:14.498 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 78 tests
1857420685
11:06:14.850 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
11:06:14.850 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 78 tests
1857420685
11:06:15.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:06:32.691 [pool-966-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17462 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:06:33.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
11:06:33.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 78 tests
1857420685
11:06:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
11:06:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 78 tests
1857420685
11:06:34.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
11:06:34.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1488 which is executed by 78 tests
68623
11:06:34.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
11:06:34.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1485 which is executed by 78 tests
68623
11:06:35.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:06:53.122 [pool-970-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18058 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:06:54.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
11:06:54.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 78 tests
68623
11:06:54.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:07:12.909 [pool-974-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18264 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:07:14.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
11:07:14.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1482 which is executed by 78 tests
68623
11:07:14.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:07:32.890 [pool-978-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18377 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:07:34.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:07:51.834 [pool-982-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17777 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:07:52.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
11:07:52.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1476 which is executed by 78 tests
68623
11:07:52.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:10.128 [pool-986-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17176 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:11.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:27.201 [pool-990-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15932 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:28.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
11:08:28.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1470 which is executed by 78 tests
68623
11:08:28.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:46.689 [pool-994-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17940 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:47.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:04.696 [pool-998-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16903 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:05.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
11:09:05.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1463 which is executed by 78 tests
68623
11:09:06.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:23.893 [pool-1002-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17344 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:24.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:41.568 [pool-1006-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16727 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:42.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
11:09:42.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 78 tests
68623
11:09:42.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:59.813 [pool-1010-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16848 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:00.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
11:10:00.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 78 tests
68623
11:10:01.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:18.089 [pool-1014-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16656 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

11:13:38.793 [pool-1013-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
11:13:38.793 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
11:13:38.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
11:13:38.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 78 tests
68623
11:13:39.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
11:13:39.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1457 which is executed by 78 tests
68623
11:13:39.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:59.768 [pool-1017-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20087 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:15:22.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
11:15:22.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 78 tests
68623
11:15:22.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
11:15:22.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1454 which is executed by 78 tests
68623
11:15:23.305 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:15:43.119 [pool-1021-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19798 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:15:44.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:16:04.462 [pool-1025-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20208 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:16:05.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
11:16:05.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1438 which is executed by 78 tests
68623
11:16:06.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:16:25.925 [pool-1029-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19769 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:16:26.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
11:16:26.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1437 which is executed by 78 tests
68623
11:16:27.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:16:46.930 [pool-1033-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19505 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:16:48.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
11:16:48.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1419 which is executed by 78 tests
68623
11:16:48.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:17:08.231 [pool-1037-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19666 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:17:09.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
11:17:09.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1418 which is executed by 78 tests
68623
11:17:09.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
11:17:09.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:642 which is executed by 78 tests
68623
11:17:10.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
11:17:10.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 82 tests
1648821820
11:17:10.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
11:17:10.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 82 tests
1648821820
11:17:10.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:17:30.477 [pool-1041-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19628 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:17:31.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
11:17:31.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 83 tests
1648821820
11:17:31.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
11:17:31.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 83 tests
1648821820
11:17:32.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:17:51.842 [pool-1045-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19769 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:17:52.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
11:17:52.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 83 tests
1648821820
11:17:52.911 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:18:12.879 [pool-1049-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19933 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:18:13.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
11:18:13.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 83 tests
1648821820
11:18:13.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:18:33.832 [pool-1053-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19819 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:18:34.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
11:18:34.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 83 tests
1648821820
11:18:35.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:18:54.841 [pool-1057-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19784 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:18:55.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
11:18:55.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 83 tests
1648821820
11:18:56.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:19:15.907 [pool-1061-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19818 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:19:16.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:19:36.456 [pool-1065-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19671 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:19:37.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
11:19:37.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 83 tests
1648821820
11:19:37.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:19:56.462 [pool-1069-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18753 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:19:57.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
11:19:57.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 83 tests
1648821820
11:19:57.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:20:17.432 [pool-1073-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19603 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:20:18.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
11:20:18.446 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 83 tests
1648821820
11:20:18.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
11:20:18.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 83 tests
1648821820
11:20:18.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
11:20:18.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 83 tests
1648821820
11:20:19.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
11:20:19.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 83 tests
1648821820
11:20:19.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:20:39.180 [pool-1077-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19623 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:20:40.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
11:20:40.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 83 tests
1648821820
11:20:40.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:21:00.256 [pool-1081-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19767 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:21:01.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
11:21:01.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 83 tests
1648821820
11:21:01.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:21:20.508 [pool-1085-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19151 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:21:21.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:21:41.223 [pool-1089-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19709 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:21:42.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
11:21:42.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 83 tests
1648821820
11:21:42.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:22:02.407 [pool-1093-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19882 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:22:03.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
11:22:03.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 83 tests
1648821820
11:22:03.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:22:23.552 [pool-1097-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19819 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:22:24.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
11:22:24.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 83 tests
1648821820
11:22:24.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:22:44.377 [pool-1101-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19616 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:22:45.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:23:04.861 [pool-1105-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19496 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:23:05.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
11:23:05.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 83 tests
1648821820
11:23:06.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:23:25.893 [pool-1109-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19861 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:23:26.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
11:23:26.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 83 tests
1648821820
11:23:27.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:23:47.442 [pool-1113-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20199 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:23:48.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
11:23:48.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 83 tests
1648821820
11:23:48.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
11:23:48.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 83 tests
1648821820
11:23:49.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
11:23:49.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 83 tests
1648821820
11:23:49.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
11:23:49.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 83 tests
1648821820
11:23:49.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:24:06.157 [main] ERROR fr.inria.lille.repair.Main - Timeout: execution time > 60 MINUTES
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) ~[na:1.8.0_181]
	at fr.inria.lille.repair.Main.main(Main.java:106) ~[nopol.jar:na]
TIMEOUT
Command exited with non-zero status 255
11030.24user 33.11system 1:00:09elapsed 306%CPU (0avgtext+0avgdata 4675532maxresident)k
51144inputs+15976outputs (4major+1384671minor)pagefaults 0swaps


Node: graphene-135.nancy.grid5000.fr



Date: Sat Dec  1 11:24:06 EST 2018

