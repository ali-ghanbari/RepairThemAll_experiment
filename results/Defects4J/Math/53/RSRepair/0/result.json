{
  "repair_end": "2018-12-02 09:14:38.776665", 
  "repair_begin": "2018-12-02 08:58:29.294527", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 02:58:21.899863054 -0500\n+++ /tmp/RSRepair_Defects4J_Math_53/patches_mkwu/Patch_88/patched/tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 03:08:14.129954165 -0500\n@@ -150,7 +150,10 @@\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 02:58:21.899863054 -0500\n+++ /tmp/RSRepair_Defects4J_Math_53/patches_mkwu/Patch_67/patched/tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 03:07:55.125887140 -0500\n@@ -149,7 +149,10 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 02:58:21.899863054 -0500\n+++ /tmp/RSRepair_Defects4J_Math_53/patches_mkwu/Patch_210/patched/tmp/RSRepair_Defects4J_Math_53/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-02 03:10:07.762354828 -0500\n@@ -149,7 +149,9 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }
  ]
}