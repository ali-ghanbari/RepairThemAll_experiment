cd /tmp/Nopol_Defects4J_Math_75;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_75/target/classes/:/tmp/Nopol_Defects4J_Math_75/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
22:30:24.973 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
22:30:24.977 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_75/target/classes/, file:/tmp/Nopol_Defects4J_Math_75/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_75/target/classes/, file:/tmp/Nopol_Defects4J_Math_75/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
22:30:24.977 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
22:30:24.978 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest]
22:30:24.981 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
22:30:24.981 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
22:30:24.992 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 417 MB
22:30:24.993 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
22:30:24.993 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
22:30:24.993 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
22:30:24.994 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
22:30:24.994 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
22:30:45.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
22:30:45.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:342 which is executed by 1 tests
1933944125
22:30:45.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
22:30:45.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:303 which is executed by 1 tests
1933944125
22:30:46.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
22:30:46.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:331 which is executed by 2 tests
1933944125
22:30:46.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
22:30:46.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:444 which is executed by 3 tests
1933944125
22:30:46.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
22:30:46.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:386 which is executed by 3 tests
1933944125
22:30:46.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:46.595 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:47.574 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<0.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:47.578 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:47.579 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<0.0>]
22:30:47.579 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:47.579 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:386.
22:30:47.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
22:30:47.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:408 which is executed by 4 tests
1933944125
22:30:47.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:47.746 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.193 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.196 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:48.197 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:48.197 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:48.197 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:408.
22:30:48.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
22:30:48.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:320 which is executed by 4 tests
1933944125
22:30:48.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
22:30:48.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:495 which is executed by 5 tests
1933944125
22:30:48.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
22:30:48.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:407 which is executed by 5 tests
1933944125
22:30:48.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.577 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.849 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.852 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:48.852 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:48.852 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:48.853 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:407.
22:30:48.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:48.871 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (14 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.092 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.094 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:49.094 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:49.094 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:49.094 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:407.
22:30:49.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
22:30:49.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:403 which is executed by 5 tests
1933944125
22:30:49.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.227 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.487 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.489 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:49.490 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:49.490 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:49.490 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:403.
22:30:49.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.501 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.914 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (195 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:49.917 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<0.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:49.917 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:49.917 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<0.0>]
22:30:49.918 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:403.
22:30:49.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
22:30:49.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:401 which is executed by 5 tests
1933944125
22:30:50.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
22:30:50.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:397 which is executed by 5 tests
1933944125
22:30:50.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.186 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.409 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.412 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:50.412 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.412 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.412 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:397.
22:30:50.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
22:30:50.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:396 which is executed by 5 tests
1933944125
22:30:50.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.550 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.751 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.753 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:50.754 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.754 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.754 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:396.
22:30:50.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.764 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.981 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:50.983 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:50.984 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.984 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:50.984 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:396.
22:30:50.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
22:30:50.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:395 which is executed by 5 tests
1933944125
22:30:51.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
22:30:51.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:392 which is executed by 5 tests
1933944125
22:30:51.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
22:30:51.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:390 which is executed by 5 tests
1933944125
22:30:51.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:51.350 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
22:30:51.547 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:51.550 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:51.551 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): null]
22:30:51.551 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:51.551 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:390.
22:30:51.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
22:30:51.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:389 which is executed by 5 tests
1933944125
22:30:51.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:51.691 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
22:30:51.902 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:51.904 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:51.904 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): null]
22:30:51.905 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:51.905 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:389.
22:30:51.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:51.915 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
22:30:52.117 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:194)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:217)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:163)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:234)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.119 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:52.120 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): null]
22:30:52.120 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:52.120 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:389.
22:30:52.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
22:30:52.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:388 which is executed by 5 tests
1933944125
22:30:52.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
22:30:52.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:385 which is executed by 5 tests
1933944125
22:30:52.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.378 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.551 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<0.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.553 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:52.554 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<0.0>]
22:30:52.554 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:52.554 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:385.
22:30:52.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.564 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.739 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<0.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:177)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:215)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:177)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:232)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
22:30:52.741 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[java.lang.Long cannot be cast to java.lang.Integer]
java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:177)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:215)
    at org.apache.commons.math.stat.Frequency.getCumFreq(Frequency.java:177)
    at org.apache.commons.math.stat.Frequency.getCumPct(Frequency.java:232)
    at org.apache.commons.math.stat.Frequency.getPct(Frequency.java:129)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)

22:30:52.742 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<0.0>]
22:30:52.742 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): java.lang.Long cannot be cast to java.lang.Integer]
22:30:52.742 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:385.
22:30:52.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
22:30:52.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:317 which is executed by 5 tests
1933944125
22:30:52.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:52.869 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.075 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.077 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:53.077 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.077 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.078 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:317.
22:30:53.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.089 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.276 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: one pct expected:<0.25> but was:<NaN>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:144)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.277 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[one pct expected:<0.25> but was:<NaN>]
junit.framework.AssertionFailedError: one pct expected:<0.25> but was:<NaN>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:144)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:53.278 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.279 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): one pct expected:<0.25> but was:<NaN>]
22:30:53.279 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:317.
22:30:53.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
22:30:53.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:316 which is executed by 5 tests
1933944125
22:30:53.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
22:30:53.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:492 which is executed by 6 tests
1933944125
22:30:53.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.524 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.721 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.723 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:53.724 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.724 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.724 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:492.
22:30:53.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.734 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.935 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<NaN>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:53.937 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<NaN>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<NaN>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:53.938 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:53.938 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<NaN>]
22:30:53.938 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:492.
22:30:53.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
22:30:53.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:491 which is executed by 6 tests
1933944125
22:30:54.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
22:30:54.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:382 which is executed by 6 tests
1933944125
22:30:54.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.205 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.402 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.405 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:54.405 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:54.405 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:54.405 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:382.
22:30:54.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.423 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.598 [pool-81-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.600 [pool-82-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<0.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<0.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:30:54.600 [pool-79-thread-1] DEBUG tests.output - Failing tests with false: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<1.0>]
22:30:54.601 [pool-79-thread-1] DEBUG tests.output - Failing tests with true: 
[testPcts(org.apache.commons.math.stat.FrequencyTest): three (Object) pct expected:<0.5> but was:<0.0>]
22:30:54.601 [pool-79-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.stat.Frequency:382.
22:30:54.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
22:30:54.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:218 which is executed by 8 tests
1933944125
22:30:54.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:30:54.731 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (7 ms)
<> Total tests run: 8
<> Ignored tests: 0
<> Failed tests: 1
~ testPcts(org.apache.commons.math.stat.FrequencyTest)
[three (Object) pct expected:<0.5> but was:<1.0>]
junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.TestCase.assertEquals(TestCase.java:279)
    at org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

22:35:20.143 [pool-83-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
22:37:30.069 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
22:38:03.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
22:39:36.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.Frequency:220 which is executed by 9 tests
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at fr.inria.lille.repair.Main.main(Main.java:106)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.io.UnixFileSystem.list(Native Method)
	at java.io.File.list(File.java:1122)
	at java.io.File.listFiles(File.java:1207)
	at spoon.support.compiler.FileSystemFolder.getFiles(FileSystemFolder.java:61)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:108)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:114)
	at spoon.support.StandardEnvironment.verifySourceClasspath(StandardEnvironment.java:444)
	at spoon.support.StandardEnvironment.setSourceClasspath(StandardEnvironment.java:428)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.setSourceClasspath(JDTBasedSpoonCompiler.java:321)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:47)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:61)
	at fr.inria.lille.commons.spoon.SpoonedClass.<init>(SpoonedClass.java:14)
	at fr.inria.lille.commons.spoon.SpoonedProject.forked(SpoonedProject.java:47)
	at fr.inria.lille.repair.nopol.NoPol.runOnStatement(NoPol.java:222)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:213)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:154)
	at fr.inria.lille.repair.Main$1.call(Main.java:101)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic> [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < cocospoon|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

  [(-m|--mode) <repair|ranking>]
        Define the mode of execution. (default: repair)

  (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic>
        The repair type (example fixing only conditions, or adding
        precondition). REQUIRED OPTION (default: condition)

  [(-o|--oracle) <angelic|symbolic>]
        Define the oracle (only used with repair mode). (default: angelic)

  [(-y|--synthesis) <smt|dynamoth>]
        Define the patch synthesis. (default: smt)

  [(-l|--solver) <z3|cvc4>]
        Define the solver (only used with smt synthesis). (default: z3)

  [(-p|--solver-path) <solverPath>]
        Define the solver binary path (only used with smt synthesis).

  (-s|--source) source1:source2:...:sourceN 
        Define the path to the source code of the project.

  (-c|--classpath) <classpath>
        Define the classpath of the project.

  [(-t|--test) test1:test2:...:testN ]
        Define the tests of the project (both failing and passing),
        fully-qualified, separated with ':' (even if the classpath contains
        other tests, only those are considered.

  [--complianceLevel <complianceLevel>]
        The compliance level of the project. (default: 7)

  [--maxTime <maxTime>]
        The maximum time execution in minute for the whole execution of
        Nopol.(default: 10)

  [--maxTimeType <maxTimeType>]
        The maximum time execution in minute for one type of patch. (default: 5)

  [(-z|--flocal) < cocospoon|dumb|gzoltar>]
        Define the fault localizer to be used. (default: gzoltar)

  [--output <outputFolder>]
        Define the location where the patches will be saved. (default: .)

  [--json[:<outputJson>]]
        Output a json file in the current working directory.

Command exited with non-zero status 255
42838.08user 22.97system 40:48.80elapsed 1750%CPU (0avgtext+0avgdata 4584796maxresident)k
51800inputs+8480outputs (4major+1405342minor)pagefaults 0swaps


Node: petitprince-8.luxembourg.grid5000.fr



Date: Wed Nov 28 23:11:12 EST 2018

